device zxspectrum48


    org 32768
.core.__START_PROGRAM:
	di
	push ix
	push iy
	exx
	push hl
	exx
	ld hl, 0
	add hl, sp
	ld (.core.__CALL_BACK__), hl
	ei
	call .core.__MEM_INIT
	call .core.__PRINT_INIT
	jp .core.__MAIN_PROGRAM__
.core.__CALL_BACK__:
	DEFW 0
.core.ZXBASIC_USER_DATA:
	; Defines HEAP SIZE
.core.ZXBASIC_HEAP_SIZE EQU 4768
.core.ZXBASIC_MEM_HEAP:
	DEFS 4768
	; Defines USER DATA Length in bytes
.core.ZXBASIC_USER_DATA_LEN EQU .core.ZXBASIC_USER_DATA_END - .core.ZXBASIC_USER_DATA
	.core.__LABEL__.ZXBASIC_USER_DATA_LEN EQU .core.ZXBASIC_USER_DATA_LEN
	.core.__LABEL__.ZXBASIC_USER_DATA EQU .core.ZXBASIC_USER_DATA
_iniUDGS:
	DEFB 00, 00
_ani:
	DEFB 00, 00
_anisube:
	DEFB 00, 00
_anienem:
	DEFB 00, 00
_t:
	DEFB 00, 00
_contestamina:
	DEFB 00, 00
_topcontestamina:
	DEFB 00, 00
_enemigo:
	DEFB 00
_contani:
	DEFB 00
_topecontani:
	DEFB 00
_contanienem:
	DEFB 00
_topecontanienem:
	DEFB 00
_pant:
	DEFB 00
_ataca:
	DEFB 00
_atacaenem:
	DEFB 00
_retirada:
	DEFB 00
_parado:
	DEFB 00
_escudo:
	DEFB 00
_energia:
	DEFB 00
_magia:
	DEFB 00
_estamina:
	DEFB 00
_topenergia:
	DEFB 00
_nivel:
	DEFB 00
_souls:
	DEFB 00
_llaves:
	DEFB 00
_c1:
	DEFB 00
_c2:
	DEFB 00
_c3:
	DEFB 00
_c4:
	DEFB 00
_c5:
	DEFB 00
_c6:
	DEFB 00
_c7:
	DEFB 00
_c8:
	DEFB 00
_c9:
	DEFB 00
_energiaenem:
	DEFB 00
_energiatmp:
	DEFB 00
_energiajefe:
	DEFB 00
_keytemp:
	DEFB 00
_xx:
	DEFB 00
_yy:
	DEFB 00
_cae:
	DEFB 00
_sube:
	DEFB 00
_tile:
	DEFB 00
_xcur:
	DEFB 00
_ycur:
	DEFB 00
_xh:
	DEFB 00
_yh:
	DEFB 00
_panth:
	DEFB 00
_pantsouls:
	DEFB 00
_soulstmp:
	DEFB 00
_contdisparo:
	DEFB 00
_contbola:
	DEFB 00
_disparando:
	DEFB 00
_xb:
	DEFB 00
_yb:
	DEFB 00
_contb:
	DEFB 00
_tipo:
	DEFB 00
_magiamago:
	DEFB 00
_dir:
	DEFB 00
_direnem:
	DEFB 00
_x:
	DEFB 00
_y:
	DEFB 00
_xesq:
	DEFB 00
_yesq:
	DEFB 00
_n:
	DEFB 00
_espada:
	DEFW .LABEL.__LABEL843
_espada.__DATA__.__PTR__:
	DEFW _espada.__DATA__
_espada.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 56h
	DEFB 0Bh
	DEFB 7Eh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 6Ah
	DEFB 0D0h
	DEFB 7Eh
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL843:
	DEFW 0000h
	DEFB 01h
_caballero:
	DEFW .LABEL.__LABEL844
_caballero.__DATA__.__PTR__:
	DEFW _caballero.__DATA__
_caballero.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 16h
	DEFB 00h
	DEFB 38h
	DEFB 5Ch
	DEFB 0BAh
	DEFB 5Ah
	DEFB 0BFh
	DEFB 0C0h
	DEFB 73h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 1Ah
	DEFB 0Bh
	DEFB 26h
	DEFB 70h
	DEFB 00h
	DEFB 0B8h
	DEFB 00h
	DEFB 50h
	DEFB 40h
	DEFB 3Eh
	DEFB 5Ch
	DEFB 01h
	DEFB 0EEh
	DEFB 6Ch
	DEFB 82h
	DEFB 0Ch
	DEFB 24h
	DEFB 1Ah
	DEFB 0D0h
	DEFB 5Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Eh
	DEFB 50h
	DEFB 61h
	DEFB 53h
	DEFB 72h
	DEFB 25h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 71h
	DEFB 22h
	DEFB 0C1h
	DEFB 04h
	DEFB 0Bh
	DEFB 04h
	DEFB 0DBh
	DEFB 06h
	DEFB 16h
	DEFB 0Eh
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 16h
	DEFB 00h
	DEFB 38h
	DEFB 5Ch
	DEFB 0BAh
	DEFB 5Ah
	DEFB 0BFh
	DEFB 0C0h
	DEFB 73h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 1Ah
	DEFB 0Bh
	DEFB 26h
	DEFB 70h
	DEFB 00h
	DEFB 0B8h
	DEFB 00h
	DEFB 50h
	DEFB 40h
	DEFB 3Eh
	DEFB 5Ch
	DEFB 01h
	DEFB 0EEh
	DEFB 6Ch
	DEFB 00h
	DEFB 72h
	DEFB 57h
	DEFB 1Ah
	DEFB 0D0h
	DEFB 5Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Eh
	DEFB 50h
	DEFB 60h
	DEFB 50h
	DEFB 70h
	DEFB 21h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 22h
	DEFB 00h
	DEFB 31h
	DEFB 01h
	DEFB 60h
	DEFB 00h
	DEFB 60h
	DEFB 0D0h
	DEFB 16h
	DEFB 02h
	DEFB 0D8h
	DEFB 0B0h
	DEFB 0E0h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 38h
	DEFB 5Ch
	DEFB 0BAh
	DEFB 5Ah
	DEFB 0BFh
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 16h
	DEFB 0Bh
	DEFB 26h
	DEFB 70h
	DEFB 00h
	DEFB 0B8h
	DEFB 00h
	DEFB 50h
	DEFB 73h
	DEFB 3Eh
	DEFB 5Ch
	DEFB 01h
	DEFB 0EEh
	DEFB 6Ch
	DEFB 00h
	DEFB 72h
	DEFB 1Ah
	DEFB 1Ah
	DEFB 0D0h
	DEFB 5Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 42h
	DEFB 55h
	DEFB 62h
	DEFB 50h
	DEFB 70h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 57h
	DEFB 22h
	DEFB 00h
	DEFB 03h
	DEFB 03h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 0Eh
	DEFB 16h
	DEFB 0Eh
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 0E0h
	DEFB 0D0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 16h
	DEFB 00h
	DEFB 38h
	DEFB 5Ch
	DEFB 0BAh
	DEFB 5Ah
	DEFB 0BFh
	DEFB 0C0h
	DEFB 73h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 1Ah
	DEFB 0Bh
	DEFB 26h
	DEFB 70h
	DEFB 00h
	DEFB 0B8h
	DEFB 00h
	DEFB 50h
	DEFB 40h
	DEFB 3Eh
	DEFB 5Ch
	DEFB 01h
	DEFB 0EEh
	DEFB 6Ch
	DEFB 02h
	DEFB 0Ch
	DEFB 24h
	DEFB 1Ah
	DEFB 0D0h
	DEFB 5Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Eh
	DEFB 50h
	DEFB 60h
	DEFB 50h
	DEFB 70h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 71h
	DEFB 22h
	DEFB 08h
	DEFB 0E0h
	DEFB 0E0h
	DEFB 00h
	DEFB 78h
	DEFB 0F4h
	DEFB 16h
	DEFB 0Eh
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 16h
	DEFB 00h
	DEFB 38h
	DEFB 5Ch
	DEFB 0BAh
	DEFB 5Ah
	DEFB 0BFh
	DEFB 0C0h
	DEFB 73h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 1Ah
	DEFB 0Bh
	DEFB 26h
	DEFB 70h
	DEFB 00h
	DEFB 0B8h
	DEFB 00h
	DEFB 50h
	DEFB 40h
	DEFB 3Eh
	DEFB 5Ch
	DEFB 01h
	DEFB 0EEh
	DEFB 6Ch
	DEFB 02h
	DEFB 7Ch
	DEFB 15h
	DEFB 1Ah
	DEFB 0D0h
	DEFB 5Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Ah
	DEFB 9Ah
	DEFB 4Eh
	DEFB 50h
	DEFB 61h
	DEFB 50h
	DEFB 72h
	DEFB 27h
	DEFB 0Eh
	DEFB 05h
	DEFB 03h
	DEFB 88h
	DEFB 0C0h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 96h
	DEFB 02h
	DEFB 0D8h
	DEFB 0B0h
	DEFB 0E0h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 38h
	DEFB 5Ch
	DEFB 0BAh
	DEFB 5Ah
	DEFB 0BFh
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 16h
	DEFB 0Bh
	DEFB 26h
	DEFB 70h
	DEFB 00h
	DEFB 0B8h
	DEFB 10h
	DEFB 38h
	DEFB 73h
	DEFB 3Eh
	DEFB 5Ch
	DEFB 01h
	DEFB 0EEh
	DEFB 6Ch
	DEFB 00h
	DEFB 7Ch
	DEFB 1Ah
	DEFB 1Ah
	DEFB 0D0h
	DEFB 5Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Ah
	DEFB 9Ah
	DEFB 6Ch
	DEFB 0DDh
	DEFB 0Bh
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 55h
	DEFB 28h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 4Eh
	DEFB 96h
	DEFB 0Eh
	DEFB 44h
	DEFB 0C0h
	DEFB 00h
	DEFB 0F0h
	DEFB 0E8h
.LABEL.__LABEL844:
	DEFW 0000h
	DEFB 01h
_caballero2:
	DEFW .LABEL.__LABEL845
_caballero2.__DATA__.__PTR__:
	DEFW _caballero2.__DATA__
_caballero2.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 31h
	DEFB 58h
	DEFB 00h
	DEFB 1Ch
	DEFB 3Ah
	DEFB 5Dh
	DEFB 5Ah
	DEFB 0FDh
	DEFB 03h
	DEFB 0CEh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 68h
	DEFB 58h
	DEFB 0Bh
	DEFB 5Ah
	DEFB 51h
	DEFB 58h
	DEFB 50h
	DEFB 58h
	DEFB 70h
	DEFB 7Ch
	DEFB 3Ah
	DEFB 00h
	DEFB 77h
	DEFB 36h
	DEFB 41h
	DEFB 30h
	DEFB 24h
	DEFB 0D0h
	DEFB 64h
	DEFB 0Eh
	DEFB 00h
	DEFB 1Dh
	DEFB 00h
	DEFB 0Ah
	DEFB 02h
	DEFB 68h
	DEFB 71h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 8Eh
	DEFB 44h
	DEFB 03h
	DEFB 21h
	DEFB 0D0h
	DEFB 21h
	DEFB 0DBh
	DEFB 60h
	DEFB 0Ah
	DEFB 06h
	DEFB 0CAh
	DEFB 4Eh
	DEFB 0A4h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 31h
	DEFB 58h
	DEFB 00h
	DEFB 1Ch
	DEFB 3Ah
	DEFB 5Dh
	DEFB 5Ah
	DEFB 0FDh
	DEFB 03h
	DEFB 0CEh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 68h
	DEFB 58h
	DEFB 0Bh
	DEFB 5Ah
	DEFB 51h
	DEFB 58h
	DEFB 50h
	DEFB 58h
	DEFB 70h
	DEFB 7Ch
	DEFB 3Ah
	DEFB 00h
	DEFB 77h
	DEFB 36h
	DEFB 01h
	DEFB 4Eh
	DEFB 0EAh
	DEFB 0D0h
	DEFB 64h
	DEFB 0Eh
	DEFB 00h
	DEFB 1Dh
	DEFB 00h
	DEFB 0Ah
	DEFB 02h
	DEFB 68h
	DEFB 41h
	DEFB 1Bh
	DEFB 0Dh
	DEFB 07h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 44h
	DEFB 00h
	DEFB 0Ch
	DEFB 01h
	DEFB 06h
	DEFB 01h
	DEFB 06h
	DEFB 0Bh
	DEFB 0Ah
	DEFB 06h
	DEFB 0Ah
	DEFB 0Eh
	DEFB 04h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 31h
	DEFB 00h
	DEFB 00h
	DEFB 1Ch
	DEFB 3Ah
	DEFB 5Dh
	DEFB 5Ah
	DEFB 0FDh
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 58h
	DEFB 58h
	DEFB 0Bh
	DEFB 5Ah
	DEFB 51h
	DEFB 58h
	DEFB 50h
	DEFB 58h
	DEFB 0CEh
	DEFB 7Ch
	DEFB 3Ah
	DEFB 00h
	DEFB 77h
	DEFB 36h
	DEFB 01h
	DEFB 4Eh
	DEFB 68h
	DEFB 0D0h
	DEFB 64h
	DEFB 0Eh
	DEFB 00h
	DEFB 1Dh
	DEFB 00h
	DEFB 0Ah
	DEFB 70h
	DEFB 68h
	DEFB 70h
	DEFB 21h
	DEFB 01h
	DEFB 00h
	DEFB 07h
	DEFB 0Bh
	DEFB 0EAh
	DEFB 44h
	DEFB 00h
	DEFB 0C0h
	DEFB 0C0h
	DEFB 40h
	DEFB 00h
	DEFB 0C0h
	DEFB 42h
	DEFB 0AAh
	DEFB 46h
	DEFB 0Ah
	DEFB 0Eh
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 31h
	DEFB 58h
	DEFB 00h
	DEFB 1Ch
	DEFB 3Ah
	DEFB 5Dh
	DEFB 5Ah
	DEFB 0FDh
	DEFB 03h
	DEFB 0CEh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 68h
	DEFB 58h
	DEFB 0Bh
	DEFB 5Ah
	DEFB 51h
	DEFB 58h
	DEFB 50h
	DEFB 58h
	DEFB 70h
	DEFB 7Ch
	DEFB 3Ah
	DEFB 00h
	DEFB 77h
	DEFB 36h
	DEFB 41h
	DEFB 30h
	DEFB 24h
	DEFB 0D0h
	DEFB 64h
	DEFB 0Eh
	DEFB 00h
	DEFB 1Dh
	DEFB 00h
	DEFB 0Ah
	DEFB 02h
	DEFB 68h
	DEFB 70h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 8Eh
	DEFB 44h
	DEFB 10h
	DEFB 07h
	DEFB 07h
	DEFB 01h
	DEFB 1Eh
	DEFB 2Fh
	DEFB 0Ah
	DEFB 06h
	DEFB 0Ah
	DEFB 0Eh
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 31h
	DEFB 58h
	DEFB 00h
	DEFB 1Ch
	DEFB 3Ah
	DEFB 5Dh
	DEFB 5Ah
	DEFB 0FDh
	DEFB 03h
	DEFB 0CEh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 68h
	DEFB 58h
	DEFB 0Bh
	DEFB 5Ah
	DEFB 51h
	DEFB 58h
	DEFB 50h
	DEFB 59h
	DEFB 72h
	DEFB 7Ch
	DEFB 3Ah
	DEFB 00h
	DEFB 77h
	DEFB 36h
	DEFB 41h
	DEFB 3Eh
	DEFB 0A8h
	DEFB 0D0h
	DEFB 64h
	DEFB 0Eh
	DEFB 00h
	DEFB 1Dh
	DEFB 00h
	DEFB 0Ah
	DEFB 02h
	DEFB 69h
	DEFB 40h
	DEFB 1Bh
	DEFB 0Dh
	DEFB 07h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 03h
	DEFB 0Ah
	DEFB 06h
	DEFB 0Ah
	DEFB 4Eh
	DEFB 0E4h
	DEFB 70h
	DEFB 0A0h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 31h
	DEFB 00h
	DEFB 00h
	DEFB 1Ch
	DEFB 3Ah
	DEFB 5Dh
	DEFB 5Ah
	DEFB 0FDh
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 58h
	DEFB 58h
	DEFB 0Bh
	DEFB 5Ah
	DEFB 51h
	DEFB 58h
	DEFB 50h
	DEFB 59h
	DEFB 0CEh
	DEFB 7Ch
	DEFB 3Ah
	DEFB 00h
	DEFB 77h
	DEFB 36h
	DEFB 01h
	DEFB 3Eh
	DEFB 68h
	DEFB 0D0h
	DEFB 64h
	DEFB 0Eh
	DEFB 00h
	DEFB 1Dh
	DEFB 08h
	DEFB 1Ch
	DEFB 72h
	DEFB 69h
	DEFB 70h
	DEFB 22h
	DEFB 03h
	DEFB 00h
	DEFB 0Fh
	DEFB 17h
	DEFB 0AAh
	DEFB 14h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 36h
	DEFB 0BBh
	DEFB 0D0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL845:
	DEFW 0000h
	DEFB 01h
_caballero3:
	DEFW .LABEL.__LABEL846
_caballero3.__DATA__.__PTR__:
	DEFW _caballero3.__DATA__
_caballero3.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 38h
	DEFB 5Ch
	DEFB 0BAh
	DEFB 5Ah
	DEFB 0BFh
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 16h
	DEFB 0Bh
	DEFB 26h
	DEFB 70h
	DEFB 00h
	DEFB 0B8h
	DEFB 00h
	DEFB 52h
	DEFB 73h
	DEFB 3Eh
	DEFB 5Ch
	DEFB 01h
	DEFB 0EEh
	DEFB 6Ch
	DEFB 02h
	DEFB 7Ch
	DEFB 0Ch
	DEFB 1Ah
	DEFB 0DAh
	DEFB 50h
	DEFB 9Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Ah
	DEFB 47h
	DEFB 52h
	DEFB 60h
	DEFB 57h
	DEFB 76h
	DEFB 25h
	DEFB 02h
	DEFB 07h
	DEFB 55h
	DEFB 28h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 5Ah
	DEFB 0Eh
	DEFB 16h
	DEFB 4Eh
	DEFB 0C4h
	DEFB 40h
	DEFB 0B0h
	DEFB 0F8h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 1Ch
	DEFB 3Ah
	DEFB 5Dh
	DEFB 5Ah
	DEFB 0FDh
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 30h
	DEFB 58h
	DEFB 5Bh
	DEFB 0Ah
	DEFB 59h
	DEFB 50h
	DEFB 58h
	DEFB 51h
	DEFB 0CEh
	DEFB 7Ch
	DEFB 3Ah
	DEFB 00h
	DEFB 77h
	DEFB 36h
	DEFB 41h
	DEFB 3Eh
	DEFB 68h
	DEFB 0D0h
	DEFB 64h
	DEFB 0Eh
	DEFB 00h
	DEFB 1Dh
	DEFB 00h
	DEFB 4Ah
	DEFB 5Ah
	DEFB 71h
	DEFB 68h
	DEFB 72h
	DEFB 23h
	DEFB 02h
	DEFB 0Dh
	DEFB 1Fh
	DEFB 0AAh
	DEFB 14h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0E2h
	DEFB 4Ah
	DEFB 06h
	DEFB 0EAh
	DEFB 6Eh
	DEFB 0A4h
	DEFB 40h
	DEFB 0E0h
.LABEL.__LABEL846:
	DEFW 0000h
	DEFB 01h
_caballeroatt:
	DEFW .LABEL.__LABEL847
_caballeroatt.__DATA__.__PTR__:
	DEFW _caballeroatt.__DATA__
_caballeroatt.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 38h
	DEFB 5Ch
	DEFB 0BAh
	DEFB 5Ah
	DEFB 0BFh
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 16h
	DEFB 0Bh
	DEFB 26h
	DEFB 70h
	DEFB 00h
	DEFB 0B8h
	DEFB 00h
	DEFB 52h
	DEFB 73h
	DEFB 3Eh
	DEFB 5Ch
	DEFB 01h
	DEFB 0EEh
	DEFB 6Ch
	DEFB 02h
	DEFB 7Ch
	DEFB 0Ch
	DEFB 1Ah
	DEFB 0DAh
	DEFB 50h
	DEFB 9Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Ah
	DEFB 47h
	DEFB 52h
	DEFB 60h
	DEFB 57h
	DEFB 76h
	DEFB 25h
	DEFB 02h
	DEFB 07h
	DEFB 55h
	DEFB 28h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 5Ah
	DEFB 0Eh
	DEFB 16h
	DEFB 4Eh
	DEFB 0C4h
	DEFB 40h
	DEFB 0B0h
	DEFB 0F8h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 70h
	DEFB 0B8h
	DEFB 74h
	DEFB 0B4h
	DEFB 7Eh
	DEFB 01h
	DEFB 0E6h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 1Ah
	DEFB 00h
	DEFB 16h
	DEFB 0Ah
	DEFB 26h
	DEFB 70h
	DEFB 00h
	DEFB 0B8h
	DEFB 00h
	DEFB 7Ch
	DEFB 0B9h
	DEFB 00h
	DEFB 0EEh
	DEFB 6Ch
	DEFB 00h
	DEFB 3Dh
	DEFB 94h
	DEFB 0DAh
	DEFB 50h
	DEFB 9Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Ah
	DEFB 5Ah
	DEFB 0Eh
	DEFB 51h
	DEFB 40h
	DEFB 50h
	DEFB 61h
	DEFB 51h
	DEFB 71h
	DEFB 20h
	DEFB 01h
	DEFB 0C8h
	DEFB 01h
	DEFB 00h
	DEFB 0C1h
	DEFB 00h
	DEFB 41h
	DEFB 00h
	DEFB 0C0h
	DEFB 16h
	DEFB 4Eh
	DEFB 0C4h
	DEFB 40h
	DEFB 0B0h
	DEFB 0F8h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 38h
	DEFB 5Ch
	DEFB 0BAh
	DEFB 5Ah
	DEFB 0BFh
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 00h
	DEFB 10h
	DEFB 00h
	DEFB 22h
	DEFB 27h
	DEFB 15h
	DEFB 02h
	DEFB 00h
	DEFB 73h
	DEFB 3Eh
	DEFB 5Ch
	DEFB 01h
	DEFB 6Eh
	DEFB 0Ch
	DEFB 20h
	DEFB 0AAh
	DEFB 1Ah
	DEFB 1Ah
	DEFB 0D0h
	DEFB 5Ah
	DEFB 0Ah
	DEFB 1Ah
	DEFB 0Ah
	DEFB 0CAh
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 43h
	DEFB 1Ah
	DEFB 01h
	DEFB 03h
	DEFB 0A1h
	DEFB 0Fh
	DEFB 20h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 08h
	DEFB 05h
	DEFB 6Eh
	DEFB 0C6h
	DEFB 0Eh
	DEFB 44h
	DEFB 0C0h
	DEFB 40h
	DEFB 0B1h
	DEFB 0FAh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 07h
	DEFB 0Bh
	DEFB 17h
	DEFB 0Bh
	DEFB 17h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 40h
	DEFB 0E0h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0Eh
	DEFB 07h
	DEFB 13h
	DEFB 28h
	DEFB 32h
	DEFB 78h
	DEFB 02h
	DEFB 7Ch
	DEFB 60h
	DEFB 0C0h
	DEFB 0B1h
	DEFB 4Bh
	DEFB 0B1h
	DEFB 00h
	DEFB 0Ah
	DEFB 9Ah
	DEFB 08h
	DEFB 02h
	DEFB 20h
	DEFB 02h
	DEFB 0Eh
	DEFB 1Bh
	DEFB 14h
	DEFB 0Eh
	DEFB 55h
	DEFB 28h
	DEFB 00h
	DEFB 0A1h
	DEFB 70h
	DEFB 25h
	DEFB 00h
	DEFB 01h
	DEFB 0CAh
	DEFB 9Ah
	DEFB 0Eh
	DEFB 56h
	DEFB 0CEh
	DEFB 44h
	DEFB 0B0h
	DEFB 0F8h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Eh
	DEFB 17h
	DEFB 2Eh
	DEFB 16h
	DEFB 2Fh
	DEFB 30h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 1Ch
	DEFB 0Fh
	DEFB 17h
	DEFB 28h
	DEFB 32h
	DEFB 78h
	DEFB 02h
	DEFB 7Ch
	DEFB 0C0h
	DEFB 00h
	DEFB 31h
	DEFB 4Bh
	DEFB 0B1h
	DEFB 00h
	DEFB 0Ah
	DEFB 9Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 0Eh
	DEFB 1Bh
	DEFB 14h
	DEFB 0Eh
	DEFB 55h
	DEFB 28h
	DEFB 00h
	DEFB 0A1h
	DEFB 70h
	DEFB 21h
	DEFB 00h
	DEFB 01h
	DEFB 0CAh
	DEFB 9Ah
	DEFB 0Eh
	DEFB 56h
	DEFB 0CEh
	DEFB 44h
	DEFB 0B0h
	DEFB 0F8h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 16h
	DEFB 00h
	DEFB 00h
	DEFB 38h
	DEFB 5Ch
	DEFB 0BAh
	DEFB 5Ah
	DEFB 0BFh
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Bh
	DEFB 26h
	DEFB 70h
	DEFB 00h
	DEFB 0B8h
	DEFB 00h
	DEFB 50h
	DEFB 42h
	DEFB 73h
	DEFB 3Eh
	DEFB 5Ch
	DEFB 01h
	DEFB 0EEh
	DEFB 6Ch
	DEFB 02h
	DEFB 7Ch
	DEFB 00h
	DEFB 0Ch
	DEFB 0DAh
	DEFB 5Ah
	DEFB 10h
	DEFB 1Ah
	DEFB 0Ah
	DEFB 9Ah
	DEFB 57h
	DEFB 62h
	DEFB 50h
	DEFB 75h
	DEFB 24h
	DEFB 0Bh
	DEFB 00h
	DEFB 07h
	DEFB 55h
	DEFB 28h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 00h
	DEFB 74h
	DEFB 01h
	DEFB 0CAh
	DEFB 9Ah
	DEFB 04h
	DEFB 0C2h
	DEFB 16h
	DEFB 44h
	DEFB 10h
	DEFB 0F8h
.LABEL.__LABEL847:
	DEFW 0000h
	DEFB 01h
_caballeroatt2:
	DEFW .LABEL.__LABEL848
_caballeroatt2.__DATA__.__PTR__:
	DEFW _caballeroatt2.__DATA__
_caballeroatt2.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 1Ch
	DEFB 3Ah
	DEFB 5Dh
	DEFB 5Ah
	DEFB 0FDh
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 30h
	DEFB 58h
	DEFB 5Bh
	DEFB 0Ah
	DEFB 59h
	DEFB 50h
	DEFB 58h
	DEFB 51h
	DEFB 0CEh
	DEFB 7Ch
	DEFB 3Ah
	DEFB 00h
	DEFB 77h
	DEFB 36h
	DEFB 41h
	DEFB 3Eh
	DEFB 68h
	DEFB 0D0h
	DEFB 64h
	DEFB 0Eh
	DEFB 00h
	DEFB 1Dh
	DEFB 00h
	DEFB 4Ah
	DEFB 5Ah
	DEFB 71h
	DEFB 68h
	DEFB 72h
	DEFB 23h
	DEFB 02h
	DEFB 0Dh
	DEFB 1Fh
	DEFB 0AAh
	DEFB 14h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0E2h
	DEFB 4Ah
	DEFB 06h
	DEFB 0EAh
	DEFB 6Eh
	DEFB 0A4h
	DEFB 40h
	DEFB 0E0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 30h
	DEFB 58h
	DEFB 00h
	DEFB 0Eh
	DEFB 1Dh
	DEFB 2Eh
	DEFB 2Dh
	DEFB 7Eh
	DEFB 01h
	DEFB 67h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 5Bh
	DEFB 0Ah
	DEFB 59h
	DEFB 50h
	DEFB 58h
	DEFB 51h
	DEFB 5Ah
	DEFB 71h
	DEFB 3Eh
	DEFB 9Dh
	DEFB 00h
	DEFB 77h
	DEFB 36h
	DEFB 01h
	DEFB 0BCh
	DEFB 29h
	DEFB 00h
	DEFB 68h
	DEFB 50h
	DEFB 64h
	DEFB 0Eh
	DEFB 00h
	DEFB 1Dh
	DEFB 00h
	DEFB 68h
	DEFB 72h
	DEFB 23h
	DEFB 02h
	DEFB 0Dh
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 13h
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 8Ah
	DEFB 02h
	DEFB 0Ah
	DEFB 06h
	DEFB 0Ah
	DEFB 0Eh
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 31h
	DEFB 00h
	DEFB 00h
	DEFB 1Ch
	DEFB 3Ah
	DEFB 5Dh
	DEFB 5Ah
	DEFB 0FDh
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 58h
	DEFB 58h
	DEFB 0Bh
	DEFB 5Ah
	DEFB 51h
	DEFB 58h
	DEFB 50h
	DEFB 53h
	DEFB 0CEh
	DEFB 7Ch
	DEFB 3Ah
	DEFB 00h
	DEFB 76h
	DEFB 30h
	DEFB 04h
	DEFB 55h
	DEFB 00h
	DEFB 08h
	DEFB 00h
	DEFB 44h
	DEFB 0E4h
	DEFB 0A8h
	DEFB 40h
	DEFB 00h
	DEFB 76h
	DEFB 63h
	DEFB 70h
	DEFB 22h
	DEFB 03h
	DEFB 02h
	DEFB 0Dh
	DEFB 5Fh
	DEFB 85h
	DEFB 0F1h
	DEFB 04h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 10h
	DEFB 0A1h
	DEFB 80h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 0C2h
	DEFB 58h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 02h
	DEFB 07h
	DEFB 08h
	DEFB 00h
	DEFB 00h
	DEFB 0E0h
	DEFB 0D0h
	DEFB 0E8h
	DEFB 0D0h
	DEFB 0E8h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 06h
	DEFB 03h
	DEFB 0Dh
	DEFB 0D2h
	DEFB 0Dh
	DEFB 00h
	DEFB 50h
	DEFB 59h
	DEFB 70h
	DEFB 0E0h
	DEFB 0C8h
	DEFB 14h
	DEFB 4Ch
	DEFB 1Eh
	DEFB 40h
	DEFB 3Eh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 53h
	DEFB 59h
	DEFB 70h
	DEFB 6Ah
	DEFB 73h
	DEFB 22h
	DEFB 0Dh
	DEFB 1Fh
	DEFB 0AAh
	DEFB 14h
	DEFB 00h
	DEFB 05h
	DEFB 0Eh
	DEFB 0A4h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 40h
	DEFB 04h
	DEFB 40h
	DEFB 70h
	DEFB 0D8h
	DEFB 28h
	DEFB 70h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 03h
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 70h
	DEFB 0E8h
	DEFB 74h
	DEFB 68h
	DEFB 0F4h
	DEFB 0Ch
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 0Ch
	DEFB 0D2h
	DEFB 0Dh
	DEFB 00h
	DEFB 50h
	DEFB 59h
	DEFB 38h
	DEFB 0F0h
	DEFB 0E8h
	DEFB 14h
	DEFB 4Ch
	DEFB 1Eh
	DEFB 40h
	DEFB 3Eh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 53h
	DEFB 59h
	DEFB 70h
	DEFB 6Ah
	DEFB 73h
	DEFB 22h
	DEFB 0Dh
	DEFB 1Fh
	DEFB 0AAh
	DEFB 14h
	DEFB 00h
	DEFB 05h
	DEFB 0Eh
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 70h
	DEFB 0D8h
	DEFB 28h
	DEFB 70h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 1Ch
	DEFB 3Ah
	DEFB 5Dh
	DEFB 5Ah
	DEFB 0FDh
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 68h
	DEFB 00h
	DEFB 30h
	DEFB 5Bh
	DEFB 5Ah
	DEFB 09h
	DEFB 58h
	DEFB 50h
	DEFB 59h
	DEFB 0CEh
	DEFB 7Ch
	DEFB 3Ah
	DEFB 00h
	DEFB 77h
	DEFB 36h
	DEFB 41h
	DEFB 3Eh
	DEFB 0D0h
	DEFB 64h
	DEFB 0Eh
	DEFB 00h
	DEFB 1Dh
	DEFB 00h
	DEFB 0Ah
	DEFB 42h
	DEFB 53h
	DEFB 59h
	DEFB 20h
	DEFB 43h
	DEFB 68h
	DEFB 22h
	DEFB 08h
	DEFB 1Fh
	DEFB 0AAh
	DEFB 14h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 2Eh
	DEFB 00h
	DEFB 0EAh
	DEFB 46h
	DEFB 0Ah
	DEFB 0AEh
	DEFB 24h
	DEFB 0D0h
	DEFB 00h
	DEFB 60h
.LABEL.__LABEL848:
	DEFW 0000h
	DEFB 01h
_caballerosube:
	DEFW .LABEL.__LABEL849
_caballerosube.__DATA__.__PTR__:
	DEFW _caballerosube.__DATA__
_caballerosube.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 16h
	DEFB 0Bh
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 2Eh
	DEFB 57h
	DEFB 2Fh
	DEFB 5Fh
	DEFB 75h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 12h
	DEFB 02h
	DEFB 06h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 22h
	DEFB 00h
	DEFB 6Bh
	DEFB 36h
	DEFB 09h
	DEFB 06h
	DEFB 0EAh
	DEFB 04h
	DEFB 6Ah
	DEFB 0D2h
	DEFB 62h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 01h
	DEFB 01h
	DEFB 01h
	DEFB 01h
	DEFB 00h
	DEFB 41h
	DEFB 43h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 40h
	DEFB 0C0h
	DEFB 00h
	DEFB 14h
	DEFB 08h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 28h
	DEFB 5Ch
	DEFB 0AEh
	DEFB 5Eh
	DEFB 0BEh
	DEFB 0EAh
	DEFB 06h
	DEFB 09h
	DEFB 01h
	DEFB 01h
	DEFB 01h
	DEFB 01h
	DEFB 68h
	DEFB 0D1h
	DEFB 16h
	DEFB 0Bh
	DEFB 00h
	DEFB 04h
	DEFB 00h
	DEFB 07h
	DEFB 18h
	DEFB 02h
	DEFB 44h
	DEFB 01h
	DEFB 0D6h
	DEFB 6Ch
	DEFB 12h
	DEFB 6Ch
	DEFB 54h
	DEFB 28h
	DEFB 60h
	DEFB 01h
	DEFB 41h
	DEFB 0Ah
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ah
	DEFB 08h
	DEFB 0Ah
	DEFB 0Ch
	DEFB 0Ah
	DEFB 0Eh
	DEFB 04h
	DEFB 00h
	DEFB 02h
	DEFB 07h
	DEFB 02h
	DEFB 00h
	DEFB 07h
	DEFB 05h
	DEFB 02h
	DEFB 07h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL849:
	DEFW 0000h
	DEFB 01h
_caballeroescudo:
	DEFW .LABEL.__LABEL850
_caballeroescudo.__DATA__.__PTR__:
	DEFW _caballeroescudo.__DATA__
_caballeroescudo.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 70h
	DEFB 0B8h
	DEFB 74h
	DEFB 0B4h
	DEFB 7Eh
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 18h
	DEFB 34h
	DEFB 34h
	DEFB 00h
	DEFB 00h
	DEFB 16h
	DEFB 0Bh
	DEFB 26h
	DEFB 70h
	DEFB 00h
	DEFB 0B8h
	DEFB 0E6h
	DEFB 7Dh
	DEFB 0BAh
	DEFB 01h
	DEFB 0EEh
	DEFB 6Ch
	DEFB 02h
	DEFB 7Ch
	DEFB 20h
	DEFB 0B4h
	DEFB 94h
	DEFB 34h
	DEFB 14h
	DEFB 34h
	DEFB 1Ch
	DEFB 0ACh
	DEFB 02h
	DEFB 57h
	DEFB 42h
	DEFB 50h
	DEFB 67h
	DEFB 55h
	DEFB 72h
	DEFB 27h
	DEFB 55h
	DEFB 28h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 5Ch
	DEFB 0C8h
	DEFB 00h
	DEFB 0A0h
	DEFB 60h
	DEFB 0A0h
	DEFB 50h
	DEFB 0F8h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 18h
	DEFB 2Ch
	DEFB 2Ch
	DEFB 00h
	DEFB 00h
	DEFB 0Eh
	DEFB 1Dh
	DEFB 2Eh
	DEFB 2Dh
	DEFB 7Eh
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 04h
	DEFB 2Dh
	DEFB 29h
	DEFB 2Ch
	DEFB 28h
	DEFB 2Ch
	DEFB 38h
	DEFB 35h
	DEFB 67h
	DEFB 0BEh
	DEFB 5Dh
	DEFB 00h
	DEFB 77h
	DEFB 36h
	DEFB 41h
	DEFB 3Eh
	DEFB 00h
	DEFB 00h
	DEFB 68h
	DEFB 0D0h
	DEFB 64h
	DEFB 0Eh
	DEFB 00h
	DEFB 1Dh
	DEFB 3Ah
	DEFB 13h
	DEFB 00h
	DEFB 05h
	DEFB 06h
	DEFB 05h
	DEFB 0Ah
	DEFB 1Fh
	DEFB 0AAh
	DEFB 14h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0EAh
	DEFB 42h
	DEFB 0Ah
	DEFB 0E6h
	DEFB 0AAh
	DEFB 4Eh
	DEFB 0E4h
.LABEL.__LABEL850:
	DEFW 0000h
	DEFB 01h
_esqizq:
	DEFW .LABEL.__LABEL851
_esqizq.__DATA__.__PTR__:
	DEFW _esqizq.__DATA__
_esqizq.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Bh
	DEFB 17h
	DEFB 28h
	DEFB 48h
	DEFB 48h
	DEFB 2Ch
	DEFB 3Fh
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0A0h
	DEFB 40h
	DEFB 60h
	DEFB 0A0h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Dh
	DEFB 1Ah
	DEFB 1Eh
	DEFB 14h
	DEFB 01h
	DEFB 01h
	DEFB 02h
	DEFB 20h
	DEFB 09h
	DEFB 2Ch
	DEFB 08h
	DEFB 0A0h
	DEFB 14h
	DEFB 10h
	DEFB 14h
	DEFB 10h
	DEFB 28h
	DEFB 00h
	DEFB 0Dh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0A8h
	DEFB 21h
	DEFB 02h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 01h
	DEFB 06h
	DEFB 0A0h
	DEFB 20h
	DEFB 00h
	DEFB 10h
	DEFB 08h
	DEFB 04h
	DEFB 08h
	DEFB 70h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 05h
	DEFB 0Bh
	DEFB 14h
	DEFB 24h
	DEFB 24h
	DEFB 16h
	DEFB 1Fh
	DEFB 0Fh
	DEFB 0C0h
	DEFB 0A0h
	DEFB 50h
	DEFB 20h
	DEFB 30h
	DEFB 50h
	DEFB 0A0h
	DEFB 08h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 06h
	DEFB 0Dh
	DEFB 06h
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 04h
	DEFB 16h
	DEFB 0D4h
	DEFB 20h
	DEFB 14h
	DEFB 50h
	DEFB 14h
	DEFB 50h
	DEFB 0A8h
	DEFB 00h
	DEFB 4Ch
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 48h
	DEFB 04h
	DEFB 0A0h
	DEFB 0A0h
	DEFB 0A0h
	DEFB 50h
	DEFB 50h
	DEFB 3Ch
.LABEL.__LABEL851:
	DEFW 0000h
	DEFB 01h
_esqdrch:
	DEFW .LABEL.__LABEL852
_esqdrch.__DATA__.__PTR__:
	DEFW _esqdrch.__DATA__
_esqdrch.__DATA__:
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 05h
	DEFB 02h
	DEFB 06h
	DEFB 05h
	DEFB 02h
	DEFB 00h
	DEFB 0D0h
	DEFB 0E8h
	DEFB 14h
	DEFB 12h
	DEFB 12h
	DEFB 34h
	DEFB 0FCh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 05h
	DEFB 28h
	DEFB 08h
	DEFB 28h
	DEFB 09h
	DEFB 14h
	DEFB 00h
	DEFB 78h
	DEFB 28h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 04h
	DEFB 10h
	DEFB 34h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0B0h
	DEFB 58h
	DEFB 05h
	DEFB 04h
	DEFB 00h
	DEFB 08h
	DEFB 10h
	DEFB 20h
	DEFB 10h
	DEFB 0Eh
	DEFB 15h
	DEFB 04h
	DEFB 40h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 60h
	DEFB 0B0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 05h
	DEFB 0Ah
	DEFB 04h
	DEFB 0Ch
	DEFB 0Ah
	DEFB 05h
	DEFB 10h
	DEFB 0A0h
	DEFB 0D0h
	DEFB 28h
	DEFB 24h
	DEFB 24h
	DEFB 68h
	DEFB 0F8h
	DEFB 0F0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 04h
	DEFB 28h
	DEFB 0Ah
	DEFB 28h
	DEFB 0Ah
	DEFB 15h
	DEFB 00h
	DEFB 32h
	DEFB 50h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 08h
	DEFB 21h
	DEFB 68h
	DEFB 2Bh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 60h
	DEFB 0B0h
	DEFB 60h
	DEFB 12h
	DEFB 20h
	DEFB 05h
	DEFB 05h
	DEFB 05h
	DEFB 0Ah
	DEFB 0Ah
	DEFB 05h
	DEFB 08h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL852:
	DEFW 0000h
	DEFB 01h
_esqattizq:
	DEFW .LABEL.__LABEL853
_esqattizq.__DATA__.__PTR__:
	DEFW _esqattizq.__DATA__
_esqattizq.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Bh
	DEFB 17h
	DEFB 28h
	DEFB 48h
	DEFB 48h
	DEFB 2Ch
	DEFB 3Fh
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0A0h
	DEFB 40h
	DEFB 60h
	DEFB 0A0h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Dh
	DEFB 1Ah
	DEFB 1Eh
	DEFB 14h
	DEFB 01h
	DEFB 01h
	DEFB 02h
	DEFB 20h
	DEFB 09h
	DEFB 2Ch
	DEFB 08h
	DEFB 0A0h
	DEFB 14h
	DEFB 10h
	DEFB 14h
	DEFB 10h
	DEFB 28h
	DEFB 00h
	DEFB 0Dh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0A8h
	DEFB 21h
	DEFB 02h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 01h
	DEFB 06h
	DEFB 0A0h
	DEFB 20h
	DEFB 00h
	DEFB 10h
	DEFB 08h
	DEFB 04h
	DEFB 08h
	DEFB 70h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 2Eh
	DEFB 51h
	DEFB 10h
	DEFB 10h
	DEFB 59h
	DEFB 7Eh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 0C0h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 3Ch
	DEFB 29h
	DEFB 02h
	DEFB 0F8h
	DEFB 40h
	DEFB 00h
	DEFB 04h
	DEFB 0A1h
	DEFB 10h
	DEFB 40h
	DEFB 28h
	DEFB 20h
	DEFB 28h
	DEFB 00h
	DEFB 10h
	DEFB 20h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 45h
	DEFB 0B5h
	DEFB 04h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 01h
	DEFB 06h
	DEFB 80h
	DEFB 20h
	DEFB 20h
	DEFB 10h
	DEFB 08h
	DEFB 04h
	DEFB 08h
	DEFB 70h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 2Eh
	DEFB 5Dh
	DEFB 0A2h
	DEFB 21h
	DEFB 21h
	DEFB 0B2h
	DEFB 0FDh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 07h
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 78h
	DEFB 52h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 06h
	DEFB 0Dh
	DEFB 06h
	DEFB 20h
	DEFB 00h
	DEFB 48h
	DEFB 04h
	DEFB 10h
	DEFB 04h
	DEFB 16h
	DEFB 0D4h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 01h
	DEFB 06h
	DEFB 10h
	DEFB 00h
	DEFB 20h
	DEFB 10h
	DEFB 08h
	DEFB 04h
	DEFB 08h
	DEFB 70h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 05h
	DEFB 0Ah
	DEFB 12h
	DEFB 12h
	DEFB 0Bh
	DEFB 0Fh
	DEFB 00h
	DEFB 0E0h
	DEFB 0D0h
	DEFB 28h
	DEFB 10h
	DEFB 18h
	DEFB 28h
	DEFB 0D0h
	DEFB 01h
	DEFB 68h
	DEFB 0D1h
	DEFB 6Dh
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 07h
	DEFB 40h
	DEFB 6Ah
	DEFB 45h
	DEFB 10h
	DEFB 07h
	DEFB 0Ah
	DEFB 00h
	DEFB 88h
	DEFB 20h
	DEFB 14h
	DEFB 0A0h
	DEFB 54h
	DEFB 01h
	DEFB 28h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 01h
	DEFB 06h
	DEFB 0A0h
	DEFB 20h
	DEFB 00h
	DEFB 10h
	DEFB 08h
	DEFB 04h
	DEFB 08h
	DEFB 70h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 05h
	DEFB 0Bh
	DEFB 14h
	DEFB 24h
	DEFB 24h
	DEFB 16h
	DEFB 1Fh
	DEFB 00h
	DEFB 0C0h
	DEFB 0A0h
	DEFB 50h
	DEFB 20h
	DEFB 30h
	DEFB 50h
	DEFB 0A0h
	DEFB 01h
	DEFB 68h
	DEFB 0D1h
	DEFB 6Dh
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Fh
	DEFB 40h
	DEFB 6Ch
	DEFB 40h
	DEFB 00h
	DEFB 07h
	DEFB 0Ah
	DEFB 00h
	DEFB 08h
	DEFB 0A0h
	DEFB 14h
	DEFB 10h
	DEFB 94h
	DEFB 10h
	DEFB 28h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 01h
	DEFB 06h
	DEFB 0A0h
	DEFB 20h
	DEFB 00h
	DEFB 10h
	DEFB 08h
	DEFB 04h
	DEFB 08h
	DEFB 0Ch
.LABEL.__LABEL853:
	DEFW 0000h
	DEFB 01h
_esqattdrch:
	DEFW .LABEL.__LABEL854
_esqattdrch.__DATA__.__PTR__:
	DEFW _esqattdrch.__DATA__
_esqattdrch.__DATA__:
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 05h
	DEFB 02h
	DEFB 06h
	DEFB 05h
	DEFB 02h
	DEFB 00h
	DEFB 0D0h
	DEFB 0E8h
	DEFB 14h
	DEFB 12h
	DEFB 12h
	DEFB 34h
	DEFB 0FCh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 05h
	DEFB 28h
	DEFB 08h
	DEFB 28h
	DEFB 09h
	DEFB 14h
	DEFB 00h
	DEFB 78h
	DEFB 28h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 04h
	DEFB 10h
	DEFB 34h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0B0h
	DEFB 58h
	DEFB 05h
	DEFB 04h
	DEFB 00h
	DEFB 08h
	DEFB 10h
	DEFB 20h
	DEFB 10h
	DEFB 0Eh
	DEFB 15h
	DEFB 04h
	DEFB 40h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 60h
	DEFB 0B0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 0E8h
	DEFB 74h
	DEFB 0Ah
	DEFB 09h
	DEFB 09h
	DEFB 9Ah
	DEFB 7Eh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 08h
	DEFB 02h
	DEFB 14h
	DEFB 04h
	DEFB 14h
	DEFB 00h
	DEFB 08h
	DEFB 04h
	DEFB 3Ch
	DEFB 94h
	DEFB 40h
	DEFB 1Fh
	DEFB 02h
	DEFB 00h
	DEFB 20h
	DEFB 05h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 04h
	DEFB 04h
	DEFB 08h
	DEFB 10h
	DEFB 20h
	DEFB 10h
	DEFB 0Eh
	DEFB 0A2h
	DEFB 0ADh
	DEFB 20h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 60h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 74h
	DEFB 0BAh
	DEFB 45h
	DEFB 04h
	DEFB 04h
	DEFB 4Dh
	DEFB 0BFh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 04h
	DEFB 01h
	DEFB 12h
	DEFB 20h
	DEFB 08h
	DEFB 21h
	DEFB 68h
	DEFB 2Bh
	DEFB 1Eh
	DEFB 4Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 60h
	DEFB 0B0h
	DEFB 60h
	DEFB 00h
	DEFB 00h
	DEFB 0E0h
	DEFB 50h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 08h
	DEFB 00h
	DEFB 04h
	DEFB 08h
	DEFB 10h
	DEFB 20h
	DEFB 10h
	DEFB 0Eh
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 60h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 07h
	DEFB 0Bh
	DEFB 14h
	DEFB 08h
	DEFB 18h
	DEFB 14h
	DEFB 0Bh
	DEFB 00h
	DEFB 40h
	DEFB 0A0h
	DEFB 50h
	DEFB 48h
	DEFB 48h
	DEFB 0D0h
	DEFB 0F0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 04h
	DEFB 28h
	DEFB 05h
	DEFB 2Ah
	DEFB 00h
	DEFB 14h
	DEFB 00h
	DEFB 0E0h
	DEFB 02h
	DEFB 56h
	DEFB 0A2h
	DEFB 08h
	DEFB 0E0h
	DEFB 50h
	DEFB 00h
	DEFB 80h
	DEFB 16h
	DEFB 0Bh
	DEFB 0B6h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 05h
	DEFB 04h
	DEFB 00h
	DEFB 08h
	DEFB 10h
	DEFB 20h
	DEFB 10h
	DEFB 0Eh
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 60h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 05h
	DEFB 0Ah
	DEFB 04h
	DEFB 0Ch
	DEFB 0Ah
	DEFB 05h
	DEFB 00h
	DEFB 0A0h
	DEFB 0D0h
	DEFB 28h
	DEFB 24h
	DEFB 24h
	DEFB 68h
	DEFB 0F8h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 05h
	DEFB 28h
	DEFB 08h
	DEFB 29h
	DEFB 08h
	DEFB 14h
	DEFB 00h
	DEFB 0F0h
	DEFB 02h
	DEFB 36h
	DEFB 02h
	DEFB 00h
	DEFB 0E0h
	DEFB 50h
	DEFB 00h
	DEFB 80h
	DEFB 16h
	DEFB 0Bh
	DEFB 0B6h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 05h
	DEFB 04h
	DEFB 00h
	DEFB 08h
	DEFB 10h
	DEFB 20h
	DEFB 10h
	DEFB 0Eh
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 60h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL854:
	DEFW 0000h
	DEFB 01h
_calavera:
	DEFW .LABEL.__LABEL855
_calavera.__DATA__.__PTR__:
	DEFW _calavera.__DATA__
_calavera.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 89h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 81h
	DEFB 00h
	DEFB 24h
	DEFB 19h
	DEFB 98h
	DEFB 24h
	DEFB 00h
	DEFB 81h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 91h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL855:
	DEFW 0000h
	DEFB 01h
_suelocentro:
	DEFW .LABEL.__LABEL856
_suelocentro.__DATA__.__PTR__:
	DEFW _suelocentro.__DATA__
_suelocentro.__DATA__:
	DEFB 00h
	DEFB 9Eh
	DEFB 6Dh
	DEFB 92h
	DEFB 0EFh
	DEFB 0FFh
	DEFB 0BFh
	DEFB 0EFh
	DEFB 6Ch
	DEFB 0DEh
	DEFB 29h
	DEFB 0D6h
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0F5h
	DEFB 0EAh
	DEFB 00h
	DEFB 0A6h
	DEFB 5Bh
	DEFB 0A5h
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0DEh
	DEFB 65h
	DEFB 0F7h
	DEFB 0AAh
	DEFB 45h
	DEFB 0A2h
	DEFB 50h
	DEFB 0A2h
	DEFB 0D4h
	DEFB 69h
	DEFB 50h
	DEFB 0AAh
	DEFB 14h
	DEFB 0A9h
	DEFB 00h
	DEFB 09h
	DEFB 0A4h
	DEFB 53h
	DEFB 0B8h
	DEFB 15h
	DEFB 0AAh
	DEFB 50h
	DEFB 0A5h
	DEFB 4Ah
	DEFB 10h
	DEFB 02h
	DEFB 30h
	DEFB 10h
	DEFB 00h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0A1h
	DEFB 40h
	DEFB 01h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL856:
	DEFW 0000h
	DEFB 01h
_techo:
	DEFW .LABEL.__LABEL857
_techo.__DATA__.__PTR__:
	DEFW _techo.__DATA__
_techo.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 01h
	DEFB 42h
	DEFB 09h
	DEFB 1Ch
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 40h
	DEFB 0E2h
	DEFB 0E4h
	DEFB 0CEh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 02h
	DEFB 40h
	DEFB 0B2h
	DEFB 78h
	DEFB 48h
	DEFB 0A2h
	DEFB 51h
	DEFB 0ACh
	DEFB 1Eh
	DEFB 0BDh
	DEFB 58h
	DEFB 00h
	DEFB 24h
	DEFB 0D1h
	DEFB 24h
	DEFB 4Eh
	DEFB 0B5h
	DEFB 7Ah
	DEFB 0F8h
	DEFB 30h
	DEFB 32h
	DEFB 01h
	DEFB 0A4h
	DEFB 9Ah
	DEFB 65h
	DEFB 0F3h
	DEFB 66h
	DEFB 00h
.LABEL.__LABEL857:
	DEFW 0000h
	DEFB 01h
_paredizq:
	DEFW .LABEL.__LABEL858
_paredizq.__DATA__.__PTR__:
	DEFW _paredizq.__DATA__
_paredizq.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 01h
	DEFB 45h
	DEFB 13h
	DEFB 03h
	DEFB 05h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 4Ah
	DEFB 01h
	DEFB 05h
	DEFB 03h
	DEFB 05h
	DEFB 12h
	DEFB 42h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 05h
	DEFB 12h
	DEFB 01h
	DEFB 05h
	DEFB 43h
	DEFB 03h
	DEFB 05h
	DEFB 11h
.LABEL.__LABEL858:
	DEFW 0000h
	DEFB 01h
_pareddrch:
	DEFW .LABEL.__LABEL859
_pareddrch.__DATA__.__PTR__:
	DEFW _pareddrch.__DATA__
_pareddrch.__DATA__:
	DEFB 00h
	DEFB 08h
	DEFB 00h
	DEFB 0A2h
	DEFB 0C8h
	DEFB 0C0h
	DEFB 0A0h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 52h
	DEFB 00h
	DEFB 0A0h
	DEFB 0C0h
	DEFB 0A0h
	DEFB 48h
	DEFB 42h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0A0h
	DEFB 48h
	DEFB 00h
	DEFB 0A0h
	DEFB 0C2h
	DEFB 0C0h
	DEFB 0A0h
	DEFB 08h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL859:
	DEFW 0000h
	DEFB 01h
_techotras:
	DEFW .LABEL.__LABEL860
_techotras.__DATA__.__PTR__:
	DEFW _techotras.__DATA__
_techotras.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 49h
	DEFB 32h
	DEFB 0FDh
	DEFB 00h
	DEFB 41h
	DEFB 00h
	DEFB 20h
	DEFB 01h
	DEFB 14h
	DEFB 69h
	DEFB 9Eh
	DEFB 00h
	DEFB 08h
	DEFB 00h
	DEFB 12h
	DEFB 00h
	DEFB 48h
	DEFB 0B0h
	DEFB 1Ah
.LABEL.__LABEL860:
	DEFW 0000h
	DEFB 01h
_techotras2:
	DEFW .LABEL.__LABEL861
_techotras2.__DATA__.__PTR__:
	DEFW _techotras2.__DATA__
_techotras2.__DATA__:
	DEFB 0FDh
	DEFB 32h
	DEFB 49h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 10h
	DEFB 00h
	DEFB 9Eh
	DEFB 69h
	DEFB 14h
	DEFB 01h
	DEFB 20h
	DEFB 00h
	DEFB 41h
	DEFB 00h
	DEFB 7Eh
	DEFB 0B0h
	DEFB 48h
	DEFB 00h
	DEFB 12h
	DEFB 00h
	DEFB 08h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL861:
	DEFW 0000h
	DEFB 01h
_paredizqfija:
	DEFW .LABEL.__LABEL862
_paredizqfija.__DATA__.__PTR__:
	DEFW _paredizqfija.__DATA__
_paredizqfija.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ah
	DEFB 00h
	DEFB 01h
	DEFB 13h
	DEFB 03h
	DEFB 05h
	DEFB 12h
	DEFB 4Ch
	DEFB 96h
	DEFB 2Ah
	DEFB 10h
	DEFB 94h
	DEFB 0AEh
	DEFB 0Eh
	DEFB 34h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 05h
	DEFB 03h
	DEFB 01h
	DEFB 10h
	DEFB 06h
	DEFB 0Fh
	DEFB 17h
	DEFB 48h
	DEFB 14h
	DEFB 0B8h
	DEFB 16h
	DEFB 4Fh
	DEFB 0AFh
	DEFB 56h
	DEFB 4Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ah
	DEFB 04h
	DEFB 01h
	DEFB 03h
	DEFB 11h
	DEFB 00h
	DEFB 04h
	DEFB 00h
	DEFB 24h
	DEFB 48h
	DEFB 1Ch
	DEFB 9Eh
	DEFB 2Eh
	DEFB 54h
	DEFB 0A2h
	DEFB 54h
.LABEL.__LABEL862:
	DEFW 0000h
	DEFB 01h
_pareddrchfija:
	DEFW .LABEL.__LABEL863
_pareddrchfija.__DATA__.__PTR__:
	DEFW _pareddrchfija.__DATA__
_pareddrchfija.__DATA__:
	DEFB 32h
	DEFB 69h
	DEFB 54h
	DEFB 08h
	DEFB 29h
	DEFB 75h
	DEFB 70h
	DEFB 2Ch
	DEFB 00h
	DEFB 50h
	DEFB 00h
	DEFB 00h
	DEFB 0C8h
	DEFB 0C0h
	DEFB 0A0h
	DEFB 48h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 12h
	DEFB 28h
	DEFB 1Dh
	DEFB 68h
	DEFB 0F2h
	DEFB 0F5h
	DEFB 6Ah
	DEFB 52h
	DEFB 00h
	DEFB 0A0h
	DEFB 0C0h
	DEFB 00h
	DEFB 08h
	DEFB 60h
	DEFB 0F0h
	DEFB 0E8h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 24h
	DEFB 12h
	DEFB 38h
	DEFB 79h
	DEFB 74h
	DEFB 2Ah
	DEFB 45h
	DEFB 2Ah
	DEFB 50h
	DEFB 20h
	DEFB 00h
	DEFB 0C0h
	DEFB 08h
	DEFB 00h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL863:
	DEFW 0000h
	DEFB 01h
_escaleraizq:
	DEFW .LABEL.__LABEL864
_escaleraizq.__DATA__.__PTR__:
	DEFW _escaleraizq.__DATA__
_escaleraizq.__DATA__:
	DEFB 07h
	DEFB 08h
	DEFB 74h
	DEFB 21h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 07h
	DEFB 08h
	DEFB 0BCh
	DEFB 29h
	DEFB 01h
	DEFB 0AAh
	DEFB 7Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0AEh
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 0AAh
	DEFB 7Fh
	DEFB 00h
	DEFB 01h
	DEFB 0AAh
	DEFB 7Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 0AAh
	DEFB 7Fh
	DEFB 00h
	DEFB 01h
	DEFB 0AAh
	DEFB 7Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 0AAh
	DEFB 7Fh
	DEFB 00h
	DEFB 01h
	DEFB 0AAh
	DEFB 7Fh
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 0AAh
	DEFB 7Fh
	DEFB 00h
	DEFB 01h
	DEFB 0AAh
	DEFB 7Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 0AAh
	DEFB 7Fh
	DEFB 00h
	DEFB 01h
	DEFB 0AAh
	DEFB 7Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 1Ch
.LABEL.__LABEL864:
	DEFW 0000h
	DEFB 01h
_ladrillos:
	DEFW .LABEL.__LABEL865
_ladrillos.__DATA__.__PTR__:
	DEFW _ladrillos.__DATA__
_ladrillos.__DATA__:
	DEFB 0FFh
	DEFB 0EFh
	DEFB 0DFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 7Fh
	DEFB 0BEh
	DEFB 00h
	DEFB 0FAh
	DEFB 0FCh
	DEFB 0FEh
	DEFB 0FCh
	DEFB 0FAh
	DEFB 0D4h
	DEFB 0AAh
	DEFB 00h
	DEFB 0FBh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0D5h
	DEFB 0AAh
	DEFB 00h
	DEFB 0FAh
	DEFB 0FCh
	DEFB 0FEh
	DEFB 0FCh
	DEFB 0FAh
	DEFB 54h
	DEFB 0AAh
	DEFB 00h
	DEFB 0FEh
	DEFB 0FDh
	DEFB 0FAh
	DEFB 0F5h
	DEFB 0EFh
	DEFB 7Dh
	DEFB 0BFh
	DEFB 00h
	DEFB 0BBh
	DEFB 7Dh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 55h
	DEFB 0AAh
	DEFB 00h
	DEFB 0FFh
	DEFB 0DFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 7Fh
	DEFB 0BEh
	DEFB 00h
	DEFB 0FAh
	DEFB 0FCh
	DEFB 0FEh
	DEFB 0FCh
	DEFB 0FAh
	DEFB 0D4h
	DEFB 0AAh
	DEFB 00h
	DEFB 0EBh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 55h
	DEFB 0EBh
	DEFB 00h
.LABEL.__LABEL865:
	DEFW 0000h
	DEFB 01h
_puerta:
	DEFW .LABEL.__LABEL866
_puerta.__DATA__.__PTR__:
	DEFW _puerta.__DATA__
_puerta.__DATA__:
	DEFB 05h
	DEFB 0Bh
	DEFB 04h
	DEFB 09h
	DEFB 09h
	DEFB 40h
	DEFB 6Fh
	DEFB 2Ah
	DEFB 7Fh
	DEFB 0DBh
	DEFB 24h
	DEFB 24h
	DEFB 24h
	DEFB 00h
	DEFB 0FFh
	DEFB 0AAh
	DEFB 0E0h
	DEFB 0F0h
	DEFB 30h
	DEFB 10h
	DEFB 10h
	DEFB 00h
	DEFB 0F8h
	DEFB 0A8h
	DEFB 40h
	DEFB 09h
	DEFB 09h
	DEFB 01h
	DEFB 09h
	DEFB 40h
	DEFB 6Fh
	DEFB 2Ah
	DEFB 00h
	DEFB 24h
	DEFB 24h
	DEFB 24h
	DEFB 24h
	DEFB 00h
	DEFB 0FFh
	DEFB 0AAh
	DEFB 00h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 00h
	DEFB 0F8h
	DEFB 0A8h
	DEFB 40h
	DEFB 09h
	DEFB 09h
	DEFB 01h
	DEFB 09h
	DEFB 06h
	DEFB 0Bh
	DEFB 00h
	DEFB 00h
	DEFB 24h
	DEFB 24h
	DEFB 24h
	DEFB 24h
	DEFB 0DBh
	DEFB 0FFh
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 70h
	DEFB 0F0h
	DEFB 00h
.LABEL.__LABEL866:
	DEFW 0000h
	DEFB 01h
_puertacerrada:
	DEFW .LABEL.__LABEL867
_puertacerrada.__DATA__.__PTR__:
	DEFW _puertacerrada.__DATA__
_puertacerrada.__DATA__:
	DEFB 04h
	DEFB 0Ah
	DEFB 0Ch
	DEFB 06h
	DEFB 0Eh
	DEFB 46h
	DEFB 6Ch
	DEFB 26h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 80h
	DEFB 80h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 4Ch
	DEFB 06h
	DEFB 0Eh
	DEFB 06h
	DEFB 0Eh
	DEFB 46h
	DEFB 6Ch
	DEFB 26h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 80h
	DEFB 80h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 4Ch
	DEFB 06h
	DEFB 0Eh
	DEFB 06h
	DEFB 0Eh
	DEFB 06h
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL867:
	DEFW 0000h
	DEFB 01h
_puertaizq:
	DEFW .LABEL.__LABEL868
_puertaizq.__DATA__.__PTR__:
	DEFW _puertaizq.__DATA__
_puertaizq.__DATA__:
	DEFB 07h
	DEFB 0Fh
	DEFB 0Ch
	DEFB 09h
	DEFB 09h
	DEFB 00h
	DEFB 1Fh
	DEFB 15h
	DEFB 0FEh
	DEFB 0DBh
	DEFB 24h
	DEFB 24h
	DEFB 24h
	DEFB 00h
	DEFB 0FFh
	DEFB 55h
	DEFB 0A0h
	DEFB 0D0h
	DEFB 20h
	DEFB 10h
	DEFB 10h
	DEFB 02h
	DEFB 0F6h
	DEFB 54h
	DEFB 00h
	DEFB 09h
	DEFB 09h
	DEFB 09h
	DEFB 09h
	DEFB 00h
	DEFB 1Fh
	DEFB 15h
	DEFB 00h
	DEFB 24h
	DEFB 24h
	DEFB 24h
	DEFB 24h
	DEFB 00h
	DEFB 0FFh
	DEFB 55h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 00h
	DEFB 10h
	DEFB 02h
	DEFB 0F6h
	DEFB 54h
	DEFB 00h
	DEFB 09h
	DEFB 09h
	DEFB 09h
	DEFB 09h
	DEFB 0Eh
	DEFB 0Fh
	DEFB 00h
	DEFB 00h
	DEFB 24h
	DEFB 24h
	DEFB 24h
	DEFB 24h
	DEFB 0DBh
	DEFB 0FFh
	DEFB 00h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 00h
	DEFB 10h
	DEFB 60h
	DEFB 0D0h
	DEFB 00h
.LABEL.__LABEL868:
	DEFW 0000h
	DEFB 01h
_puertacerradaizq:
	DEFW .LABEL.__LABEL869
_puertacerradaizq.__DATA__.__PTR__:
	DEFW _puertacerradaizq.__DATA__
_puertacerradaizq.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 20h
	DEFB 50h
	DEFB 30h
	DEFB 60h
	DEFB 70h
	DEFB 62h
	DEFB 36h
	DEFB 64h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 32h
	DEFB 60h
	DEFB 70h
	DEFB 60h
	DEFB 70h
	DEFB 62h
	DEFB 36h
	DEFB 64h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 32h
	DEFB 60h
	DEFB 70h
	DEFB 60h
	DEFB 70h
	DEFB 60h
	DEFB 50h
	DEFB 00h
.LABEL.__LABEL869:
	DEFW 0000h
	DEFB 01h
_puertacelda:
	DEFW .LABEL.__LABEL870
_puertacelda.__DATA__.__PTR__:
	DEFW _puertacelda.__DATA__
_puertacelda.__DATA__:
	DEFB 0Ah
	DEFB 17h
	DEFB 08h
	DEFB 14h
	DEFB 14h
	DEFB 00h
	DEFB 0DFh
	DEFB 4Ah
	DEFB 0FFh
	DEFB 6Dh
	DEFB 92h
	DEFB 92h
	DEFB 92h
	DEFB 00h
	DEFB 0FFh
	DEFB 0AAh
	DEFB 0F0h
	DEFB 0F8h
	DEFB 18h
	DEFB 48h
	DEFB 48h
	DEFB 01h
	DEFB 0FBh
	DEFB 0AAh
	DEFB 80h
	DEFB 14h
	DEFB 14h
	DEFB 04h
	DEFB 14h
	DEFB 00h
	DEFB 0DFh
	DEFB 4Ah
	DEFB 00h
	DEFB 92h
	DEFB 92h
	DEFB 92h
	DEFB 92h
	DEFB 00h
	DEFB 0FFh
	DEFB 0AAh
	DEFB 01h
	DEFB 48h
	DEFB 48h
	DEFB 48h
	DEFB 48h
	DEFB 01h
	DEFB 0FBh
	DEFB 0AAh
	DEFB 80h
	DEFB 14h
	DEFB 14h
	DEFB 04h
	DEFB 14h
	DEFB 0Bh
	DEFB 17h
	DEFB 00h
	DEFB 00h
	DEFB 92h
	DEFB 92h
	DEFB 92h
	DEFB 92h
	DEFB 6Dh
	DEFB 0FFh
	DEFB 00h
	DEFB 01h
	DEFB 48h
	DEFB 48h
	DEFB 48h
	DEFB 48h
	DEFB 0B8h
	DEFB 0F8h
	DEFB 00h
.LABEL.__LABEL870:
	DEFW 0000h
	DEFB 01h
_barril:
	DEFW .LABEL.__LABEL871
_barril.__DATA__.__PTR__:
	DEFW _barril.__DATA__
_barril.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 05h
	DEFB 00h
	DEFB 05h
	DEFB 0Ah
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 7Ah
	DEFB 00h
	DEFB 7Bh
	DEFB 0B4h
	DEFB 6Bh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0F0h
	DEFB 08h
	DEFB 0D0h
	DEFB 0E8h
	DEFB 1Ch
	DEFB 23h
	DEFB 48h
	DEFB 22h
	DEFB 09h
	DEFB 12h
	DEFB 04h
	DEFB 49h
	DEFB 57h
	DEFB 20h
	DEFB 56h
	DEFB 02h
	DEFB 18h
	DEFB 06h
	DEFB 0B1h
	DEFB 0B6h
	DEFB 0D0h
	DEFB 04h
	DEFB 0D0h
	DEFB 0C8h
	DEFB 0D0h
	DEFB 08h
	DEFB 10h
	DEFB 68h
	DEFB 10h
	DEFB 17h
	DEFB 20h
	DEFB 2Ah
	DEFB 25h
	DEFB 10h
	DEFB 46h
	DEFB 00h
	DEFB 00h
	DEFB 0E1h
	DEFB 1Eh
	DEFB 0A1h
	DEFB 56h
	DEFB 00h
	DEFB 0BDh
	DEFB 00h
	DEFB 10h
	DEFB 0E8h
	DEFB 74h
	DEFB 92h
	DEFB 62h
	DEFB 1Ch
	DEFB 43h
	DEFB 08h
.LABEL.__LABEL871:
	DEFW 0000h
	DEFB 01h
_barrilroto:
	DEFW .LABEL.__LABEL872
_barrilroto.__DATA__.__PTR__:
	DEFW _barrilroto.__DATA__
_barrilroto.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 41h
	DEFB 28h
	DEFB 2Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 41h
	DEFB 3Ch
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0A0h
	DEFB 40h
	DEFB 05h
	DEFB 0EAh
	DEFB 10h
	DEFB 17h
	DEFB 08h
	DEFB 10h
	DEFB 4Fh
	DEFB 10h
	DEFB 06h
	DEFB 00h
	DEFB 23h
	DEFB 4Ch
	DEFB 31h
	DEFB 0C0h
	DEFB 3Eh
	DEFB 01h
	DEFB 0BCh
	DEFB 00h
	DEFB 14h
	DEFB 48h
	DEFB 24h
	DEFB 52h
	DEFB 22h
	DEFB 00h
	DEFB 7Dh
	DEFB 00h
.LABEL.__LABEL872:
	DEFW 0000h
	DEFB 01h
_barrillave:
	DEFW .LABEL.__LABEL873
_barrillave.__DATA__.__PTR__:
	DEFW _barrillave.__DATA__
_barrillave.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 07h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Fh
	DEFB 1Ch
	DEFB 18h
	DEFB 18h
	DEFB 1Ch
	DEFB 0Fh
	DEFB 04h
	DEFB 00h
	DEFB 0C0h
	DEFB 0E0h
	DEFB 4Fh
	DEFB 45h
	DEFB 0A0h
	DEFB 40h
	DEFB 01h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 0E8h
	DEFB 68h
	DEFB 00h
	DEFB 10h
	DEFB 0B0h
	DEFB 4Ch
.LABEL.__LABEL873:
	DEFW 0000h
	DEFB 01h
_barrilmagia:
	DEFW .LABEL.__LABEL874
_barrilmagia.__DATA__.__PTR__:
	DEFW _barrilmagia.__DATA__
_barrilmagia.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 18h
	DEFB 00h
	DEFB 3Ch
	DEFB 18h
	DEFB 18h
	DEFB 24h
	DEFB 0C3h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 02h
	DEFB 02h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 0FFh
	DEFB 0FFh
	DEFB 7Eh
	DEFB 00h
	DEFB 0FFh
	DEFB 00h
	DEFB 40h
	DEFB 40h
	DEFB 40h
	DEFB 40h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL874:
	DEFW 0000h
	DEFB 01h
_suelocastillo:
	DEFW .LABEL.__LABEL875
_suelocastillo.__DATA__.__PTR__:
	DEFW _suelocastillo.__DATA__
_suelocastillo.__DATA__:
	DEFB 00h
	DEFB 0F5h
	DEFB 0DFh
	DEFB 0AAh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0D2h
	DEFB 00h
	DEFB 0BBh
	DEFB 0DBh
	DEFB 0AAh
	DEFB 0Ah
	DEFB 5Ah
	DEFB 2Ah
	DEFB 0DBh
	DEFB 00h
	DEFB 0BEh
	DEFB 76h
	DEFB 0AAh
	DEFB 02h
	DEFB 06h
	DEFB 0Ah
	DEFB 46h
	DEFB 00h
	DEFB 45h
	DEFB 2Ah
	DEFB 04h
	DEFB 22h
	DEFB 05h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 4Ah
	DEFB 0F2h
	DEFB 24h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 94h
	DEFB 48h
	DEFB 0A8h
	DEFB 40h
	DEFB 08h
	DEFB 40h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL875:
	DEFW 0000h
	DEFB 01h
_techocastillo:
	DEFW .LABEL.__LABEL876
_techocastillo.__DATA__.__PTR__:
	DEFW _techocastillo.__DATA__
_techocastillo.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 08h
	DEFB 23h
	DEFB 54h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 44h
	DEFB 11h
	DEFB 0AAh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 08h
	DEFB 54h
	DEFB 00h
	DEFB 0D2h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0AAh
	DEFB 0DFh
	DEFB 0F5h
	DEFB 00h
	DEFB 0DBh
	DEFB 2Ah
	DEFB 5Ah
	DEFB 0Ah
	DEFB 0AAh
	DEFB 0DBh
	DEFB 0BBh
	DEFB 00h
	DEFB 46h
	DEFB 0Ah
	DEFB 06h
	DEFB 02h
	DEFB 0AAh
	DEFB 76h
	DEFB 0BEh
	DEFB 00h
.LABEL.__LABEL876:
	DEFW 0000h
	DEFB 01h
_paredcastdrch:
	DEFW .LABEL.__LABEL877
_paredcastdrch.__DATA__.__PTR__:
	DEFW _paredcastdrch.__DATA__
_paredcastdrch.__DATA__:
	DEFB 7Fh
	DEFB 61h
	DEFB 50h
	DEFB 61h
	DEFB 30h
	DEFB 60h
	DEFB 31h
	DEFB 60h
	DEFB 20h
	DEFB 56h
	DEFB 2Bh
	DEFB 56h
	DEFB 10h
	DEFB 50h
	DEFB 28h
	DEFB 26h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 71h
	DEFB 25h
	DEFB 52h
	DEFB 65h
	DEFB 7Fh
	DEFB 00h
	DEFB 7Fh
	DEFB 61h
	DEFB 40h
	DEFB 10h
	DEFB 48h
	DEFB 14h
	DEFB 5Ch
	DEFB 08h
	DEFB 40h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 50h
	DEFB 21h
	DEFB 70h
	DEFB 60h
	DEFB 52h
	DEFB 65h
	DEFB 7Fh
	DEFB 00h
	DEFB 28h
	DEFB 60h
	DEFB 10h
	DEFB 48h
	DEFB 24h
	DEFB 44h
	DEFB 08h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL877:
	DEFW 0000h
	DEFB 01h
_paredcastizq:
	DEFW .LABEL.__LABEL878
_paredcastizq.__DATA__.__PTR__:
	DEFW _paredcastizq.__DATA__
_paredcastizq.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 04h
	DEFB 6Ah
	DEFB 0D4h
	DEFB 6Ah
	DEFB 08h
	DEFB 0Ah
	DEFB 14h
	DEFB 64h
	DEFB 0FEh
	DEFB 06h
	DEFB 0Ah
	DEFB 06h
	DEFB 0Ch
	DEFB 06h
	DEFB 0Ch
	DEFB 06h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 08h
	DEFB 12h
	DEFB 28h
	DEFB 3Ah
	DEFB 10h
	DEFB 02h
	DEFB 04h
	DEFB 8Eh
	DEFB 0A4h
	DEFB 4Ah
	DEFB 0A6h
	DEFB 0FEh
	DEFB 00h
	DEFB 0FEh
	DEFB 06h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 06h
	DEFB 08h
	DEFB 12h
	DEFB 24h
	DEFB 22h
	DEFB 10h
	DEFB 08h
	DEFB 0Ah
	DEFB 04h
	DEFB 0Eh
	DEFB 06h
	DEFB 4Ah
	DEFB 0A6h
	DEFB 0FEh
	DEFB 00h
.LABEL.__LABEL878:
	DEFW 0000h
	DEFB 01h
_mesaizq:
	DEFW .LABEL.__LABEL879
_mesaizq.__DATA__.__PTR__:
	DEFW _mesaizq.__DATA__
_mesaizq.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 3Ch
	DEFB 18h
	DEFB 00h
	DEFB 0FFh
	DEFB 55h
	DEFB 20h
	DEFB 00h
	DEFB 10h
	DEFB 28h
	DEFB 0A9h
	DEFB 00h
	DEFB 0FFh
	DEFB 55h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 3Ch
	DEFB 98h
	DEFB 00h
	DEFB 0FFh
	DEFB 55h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 0Fh
	DEFB 25h
	DEFB 20h
	DEFB 23h
	DEFB 20h
	DEFB 03h
	DEFB 75h
	DEFB 00h
	DEFB 0FFh
	DEFB 55h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0FFh
	DEFB 55h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL879:
	DEFW 0000h
	DEFB 01h
_mesadrch:
	DEFW .LABEL.__LABEL880
_mesadrch.__DATA__.__PTR__:
	DEFW _mesadrch.__DATA__
_mesadrch.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 3Ch
	DEFB 19h
	DEFB 00h
	DEFB 0FFh
	DEFB 0AAh
	DEFB 00h
	DEFB 00h
	DEFB 08h
	DEFB 14h
	DEFB 95h
	DEFB 00h
	DEFB 0FFh
	DEFB 0AAh
	DEFB 00h
	DEFB 00h
	DEFB 80h
	DEFB 3Ch
	DEFB 18h
	DEFB 00h
	DEFB 0FFh
	DEFB 0AAh
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 0FFh
	DEFB 0AAh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0FFh
	DEFB 0AAh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 04h
	DEFB 0F0h
	DEFB 0A4h
	DEFB 04h
	DEFB 0C4h
	DEFB 04h
	DEFB 0C0h
	DEFB 4Ah
.LABEL.__LABEL880:
	DEFW 0000h
	DEFB 01h
_suelobosque:
	DEFW .LABEL.__LABEL881
_suelobosque.__DATA__.__PTR__:
	DEFW _suelobosque.__DATA__
_suelobosque.__DATA__:
	DEFB 00h
	DEFB 92h
	DEFB 0A5h
	DEFB 5Fh
	DEFB 0AAh
	DEFB 0FFh
	DEFB 5Ah
	DEFB 0A5h
	DEFB 51h
	DEFB 2Ah
	DEFB 0D5h
	DEFB 7Fh
	DEFB 0AAh
	DEFB 0F5h
	DEFB 9Ah
	DEFB 64h
	DEFB 00h
	DEFB 24h
	DEFB 0AAh
	DEFB 0FFh
	DEFB 0B5h
	DEFB 0FBh
	DEFB 0A4h
	DEFB 5Bh
	DEFB 2Ah
	DEFB 4Ah
	DEFB 0A5h
	DEFB 24h
	DEFB 12h
	DEFB 11h
	DEFB 20h
	DEFB 08h
	DEFB 11h
	DEFB 0C5h
	DEFB 62h
	DEFB 0CCh
	DEFB 02h
	DEFB 05h
	DEFB 41h
	DEFB 44h
	DEFB 82h
	DEFB 1Ah
	DEFB 0B4h
	DEFB 19h
	DEFB 02h
	DEFB 10h
	DEFB 0Ch
	DEFB 23h
	DEFB 21h
	DEFB 52h
	DEFB 75h
	DEFB 20h
	DEFB 02h
	DEFB 05h
	DEFB 07h
	DEFB 02h
	DEFB 8Ah
	DEFB 0Eh
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ah
	DEFB 14h
	DEFB 1Ch
	DEFB 08h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL881:
	DEFW 0000h
	DEFB 01h
_vacio:
	DEFW .LABEL.__LABEL882
_vacio.__DATA__.__PTR__:
	DEFW _vacio.__DATA__
_vacio.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL882:
	DEFW 0000h
	DEFB 01h
_plataforma:
	DEFW .LABEL.__LABEL883
_plataforma.__DATA__.__PTR__:
	DEFW _plataforma.__DATA__
_plataforma.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 77h
	DEFB 21h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0FFh
	DEFB 54h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0EEh
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL883:
	DEFW 0000h
	DEFB 01h
_letrasvida:
	DEFW .LABEL.__LABEL884
_letrasvida.__DATA__.__PTR__:
	DEFW _letrasvida.__DATA__
_letrasvida.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 03h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 2Dh
	DEFB 2Dh
	DEFB 2Dh
	DEFB 0CDh
	DEFB 0Dh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0E1h
	DEFB 93h
	DEFB 96h
	DEFB 97h
	DEFB 0E6h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0C0h
	DEFB 40h
.LABEL.__LABEL884:
	DEFW 0000h
	DEFB 01h
_letrasestamina:
	DEFW .LABEL.__LABEL885
_letrasestamina.__DATA__.__PTR__:
	DEFW _letrasestamina.__DATA__
_letrasestamina.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 3Eh
	DEFB 30h
	DEFB 38h
	DEFB 30h
	DEFB 3Eh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 7Bh
	DEFB 0C1h
	DEFB 0F9h
	DEFB 19h
	DEFB 0F1h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C4h
	DEFB 0Eh
	DEFB 99h
	DEFB 9Fh
	DEFB 99h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 62h
	DEFB 76h
	DEFB 6Ah
	DEFB 62h
	DEFB 62h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0D8h
	DEFB 0DCh
	DEFB 0DAh
	DEFB 0D9h
	DEFB 0D8h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 08h
	DEFB 9Ch
	DEFB 0B2h
	DEFB 0BEh
	DEFB 0B2h
.LABEL.__LABEL885:
	DEFW 0000h
	DEFB 01h
_letrasmagia:
	DEFW .LABEL.__LABEL886
_letrasmagia.__DATA__.__PTR__:
	DEFW _letrasmagia.__DATA__
_letrasmagia.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 31h
	DEFB 3Bh
	DEFB 35h
	DEFB 31h
	DEFB 31h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 39h
	DEFB 65h
	DEFB 7Dh
	DEFB 64h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0F3h
	DEFB 03h
	DEFB 9Bh
	DEFB 0Bh
	DEFB 0F3h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 38h
	DEFB 64h
	DEFB 7Ch
	DEFB 64h
.LABEL.__LABEL886:
	DEFW 0000h
	DEFB 01h
_letrasnivel:
	DEFW .LABEL.__LABEL887
_letrasnivel.__DATA__.__PTR__:
	DEFW _letrasnivel.__DATA__
_letrasnivel.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 62h
	DEFB 72h
	DEFB 6Ah
	DEFB 66h
	DEFB 62h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0D9h
	DEFB 0D9h
	DEFB 0D9h
	DEFB 0CEh
	DEFB 0C4h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 7Dh
	DEFB 61h
	DEFB 71h
	DEFB 61h
	DEFB 7Dh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0F0h
	DEFB 00h
.LABEL.__LABEL887:
	DEFW 0000h
	DEFB 01h
_letrassouls:
	DEFW .LABEL.__LABEL888
_letrassouls.__DATA__.__PTR__:
	DEFW _letrassouls.__DATA__
_letrassouls.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 79h
	DEFB 0C3h
	DEFB 0FBh
	DEFB 1Bh
	DEFB 0F3h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0ECh
	DEFB 2Ch
	DEFB 2Ch
	DEFB 2Ch
	DEFB 0C7h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0B0h
	DEFB 0B0h
	DEFB 0B0h
	DEFB 0B0h
	DEFB 3Eh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 78h
	DEFB 0C0h
	DEFB 0F8h
	DEFB 18h
	DEFB 0F0h
	DEFB 00h
	DEFB 00h
	DEFB 08h
	DEFB 00h
	DEFB 26h
	DEFB 0DBh
	DEFB 26h
	DEFB 04h
	DEFB 08h
.LABEL.__LABEL888:
	DEFW 0000h
	DEFB 01h
_almas:
	DEFW .LABEL.__LABEL889
_almas.__DATA__.__PTR__:
	DEFW _almas.__DATA__
_almas.__DATA__:
	DEFB 20h
	DEFB 04h
	DEFB 61h
	DEFB 0D3h
	DEFB 96h
	DEFB 64h
	DEFB 03h
	DEFB 09h
	DEFB 04h
	DEFB 20h
	DEFB 06h
	DEFB 0CBh
	DEFB 0E9h
	DEFB 0A6h
	DEFB 0C1h
	DEFB 2Ch
.LABEL.__LABEL889:
	DEFW 0000h
	DEFB 01h
_vidamagiaestamina:
	DEFW .LABEL.__LABEL890
_vidamagiaestamina.__DATA__.__PTR__:
	DEFW _vidamagiaestamina.__DATA__
_vidamagiaestamina.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 44h
	DEFB 0EEh
	DEFB 77h
	DEFB 55h
	DEFB 0AAh
	DEFB 44h
.LABEL.__LABEL890:
	DEFW 0000h
	DEFB 01h
_remaster:
	DEFW .LABEL.__LABEL891
_remaster.__DATA__.__PTR__:
	DEFW _remaster.__DATA__
_remaster.__DATA__:
	DEFB 00h
	DEFB 0FCh
	DEFB 62h
	DEFB 42h
	DEFB 22h
	DEFB 7Ch
	DEFB 68h
	DEFB 0F6h
	DEFB 00h
	DEFB 0FEh
	DEFB 62h
	DEFB 48h
	DEFB 38h
	DEFB 68h
	DEFB 62h
	DEFB 0FEh
	DEFB 00h
	DEFB 0C3h
	DEFB 66h
	DEFB 5Ah
	DEFB 22h
	DEFB 62h
	DEFB 62h
	DEFB 0F7h
	DEFB 00h
	DEFB 18h
	DEFB 18h
	DEFB 34h
	DEFB 34h
	DEFB 5Eh
	DEFB 62h
	DEFB 0F7h
	DEFB 00h
	DEFB 3Dh
	DEFB 62h
	DEFB 50h
	DEFB 3Ch
	DEFB 0Ah
	DEFB 46h
	DEFB 0BCh
	DEFB 00h
	DEFB 0FFh
	DEFB 99h
	DEFB 10h
	DEFB 08h
	DEFB 18h
	DEFB 18h
	DEFB 3Ch
	DEFB 00h
	DEFB 0FEh
	DEFB 62h
	DEFB 48h
	DEFB 38h
	DEFB 68h
	DEFB 62h
	DEFB 0FEh
	DEFB 00h
	DEFB 0FCh
	DEFB 62h
	DEFB 42h
	DEFB 22h
	DEFB 7Ch
	DEFB 68h
	DEFB 0F6h
.LABEL.__LABEL891:
	DEFW 0000h
	DEFB 01h
_hoguera:
	DEFW .LABEL.__LABEL892
_hoguera.__DATA__.__PTR__:
	DEFW _hoguera.__DATA__
_hoguera.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 08h
	DEFB 00h
	DEFB 08h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 08h
	DEFB 1Ch
	DEFB 00h
	DEFB 2Eh
	DEFB 00h
	DEFB 14h
	DEFB 10h
	DEFB 14h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 06h
	DEFB 0Dh
	DEFB 0Ah
	DEFB 54h
	DEFB 00h
	DEFB 00h
	DEFB 7Fh
	DEFB 0D5h
	DEFB 0AEh
	DEFB 1Ch
	DEFB 0A2h
	DEFB 54h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 60h
	DEFB 0A8h
	DEFB 55h
	DEFB 00h
.LABEL.__LABEL892:
	DEFW 0000h
	DEFB 01h
_ojojefe:
	DEFW .LABEL.__LABEL893
_ojojefe.__DATA__.__PTR__:
	DEFW _ojojefe.__DATA__
_ojojefe.__DATA__:
	DEFB 8Dh
	DEFB 0Ah
	DEFB 4Dh
	DEFB 0Ah
	DEFB 25h
	DEFB 26h
	DEFB 15h
	DEFB 06h
	DEFB 5Dh
	DEFB 0BAh
	DEFB 0FFh
	DEFB 0FEh
	DEFB 0FFh
	DEFB 0FEh
	DEFB 0FFh
	DEFB 0FEh
	DEFB 62h
	DEFB 0A2h
	DEFB 44h
	DEFB 0A0h
	DEFB 48h
	DEFB 08h
	DEFB 50h
	DEFB 00h
	DEFB 05h
	DEFB 07h
	DEFB 02h
	DEFB 03h
	DEFB 02h
	DEFB 03h
	DEFB 01h
	DEFB 01h
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FEh
	DEFB 7Dh
	DEFB 0FEh
	DEFB 7Dh
	DEFB 0FFh
	DEFB 7Dh
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0BFh
	DEFB 0FEh
	DEFB 0EEh
	DEFB 0BAh
	DEFB 54h
	DEFB 38h
	DEFB 28h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL893:
	DEFW 0000h
	DEFB 01h
_diente:
	DEFW .LABEL.__LABEL894
_diente.__DATA__.__PTR__:
	DEFW _diente.__DATA__
_diente.__DATA__:
	DEFB 9Dh
	DEFB 0DAh
	DEFB 0ACh
	DEFB 4Ah
	DEFB 4Ch
	DEFB 0Ah
	DEFB 04h
	DEFB 04h
.LABEL.__LABEL894:
	DEFW 0000h
	DEFB 01h
_bola:
	DEFW .LABEL.__LABEL895
_bola.__DATA__.__PTR__:
	DEFW _bola.__DATA__
_bola.__DATA__:
	DEFB 28h
	DEFB 42h
	DEFB 19h
	DEFB 0ACh
	DEFB 3Dh
	DEFB 98h
	DEFB 42h
	DEFB 14h
	DEFB 01h
	DEFB 40h
	DEFB 04h
	DEFB 18h
	DEFB 18h
	DEFB 20h
	DEFB 02h
	DEFB 80h
.LABEL.__LABEL895:
	DEFW 0000h
	DEFB 01h
_garraizq:
	DEFW .LABEL.__LABEL896
_garraizq.__DATA__.__PTR__:
	DEFW _garraizq.__DATA__
_garraizq.__DATA__:
	DEFB 0A8h
	DEFB 45h
	DEFB 0F2h
	DEFB 0A8h
	DEFB 0F4h
	DEFB 0D9h
	DEFB 0FCh
	DEFB 0D9h
	DEFB 0A8h
	DEFB 55h
	DEFB 92h
	DEFB 68h
	DEFB 0B5h
	DEFB 79h
	DEFB 0F4h
	DEFB 0D9h
	DEFB 0A0h
	DEFB 50h
	DEFB 20h
	DEFB 0F8h
	DEFB 0F4h
	DEFB 5Ch
	DEFB 0FAh
	DEFB 7Eh
	DEFB 0F5h
	DEFB 0BAh
	DEFB 29h
	DEFB 0F2h
	DEFB 4Bh
	DEFB 0F2h
	DEFB 0FBh
	DEFB 1Bh
	DEFB 0F4h
	DEFB 0D9h
	DEFB 0D4h
	DEFB 0F9h
	DEFB 96h
	DEFB 0FAh
	DEFB 0FCh
	DEFB 0Eh
	DEFB 0ADh
	DEFB 6Eh
	DEFB 0BFh
	DEFB 6Eh
	DEFB 0BFh
	DEFB 92h
	DEFB 7Dh
	DEFB 0C3h
	DEFB 0Ah
	DEFB 0Ah
	DEFB 92h
	DEFB 12h
	DEFB 21h
	DEFB 21h
	DEFB 40h
	DEFB 00h
	DEFB 44h
	DEFB 08h
	DEFB 08h
	DEFB 10h
	DEFB 10h
	DEFB 20h
	DEFB 0C0h
	DEFB 00h
	DEFB 91h
	DEFB 0A2h
	DEFB 0A2h
	DEFB 04h
	DEFB 44h
	DEFB 48h
	DEFB 30h
	DEFB 20h
.LABEL.__LABEL896:
	DEFW 0000h
	DEFB 01h
_garradrch:
	DEFW .LABEL.__LABEL897
_garradrch.__DATA__.__PTR__:
	DEFW _garradrch.__DATA__
_garradrch.__DATA__:
	DEFB 05h
	DEFB 0Ah
	DEFB 04h
	DEFB 1Fh
	DEFB 2Fh
	DEFB 3Ah
	DEFB 5Fh
	DEFB 7Eh
	DEFB 15h
	DEFB 0AAh
	DEFB 49h
	DEFB 16h
	DEFB 0ADh
	DEFB 9Eh
	DEFB 2Fh
	DEFB 9Bh
	DEFB 15h
	DEFB 0A2h
	DEFB 4Fh
	DEFB 15h
	DEFB 2Fh
	DEFB 9Bh
	DEFB 3Fh
	DEFB 9Bh
	DEFB 0B5h
	DEFB 76h
	DEFB 0FDh
	DEFB 76h
	DEFB 0FDh
	DEFB 49h
	DEFB 0BEh
	DEFB 0C3h
	DEFB 2Fh
	DEFB 9Bh
	DEFB 2Bh
	DEFB 9Fh
	DEFB 69h
	DEFB 5Fh
	DEFB 3Fh
	DEFB 70h
	DEFB 0AFh
	DEFB 5Dh
	DEFB 94h
	DEFB 4Fh
	DEFB 0D2h
	DEFB 4Fh
	DEFB 0DFh
	DEFB 0D8h
	DEFB 89h
	DEFB 45h
	DEFB 45h
	DEFB 21h
	DEFB 22h
	DEFB 12h
	DEFB 0Ch
	DEFB 04h
	DEFB 22h
	DEFB 11h
	DEFB 11h
	DEFB 08h
	DEFB 08h
	DEFB 04h
	DEFB 03h
	DEFB 01h
	DEFB 50h
	DEFB 51h
	DEFB 49h
	DEFB 48h
	DEFB 04h
	DEFB 04h
	DEFB 02h
	DEFB 01h
.LABEL.__LABEL897:
	DEFW 0000h
	DEFB 01h
_sangre:
	DEFW .LABEL.__LABEL898
_sangre.__DATA__.__PTR__:
	DEFW _sangre.__DATA__
_sangre.__DATA__:
	DEFB 41h
	DEFB 0E6h
	DEFB 46h
	DEFB 30h
	DEFB 79h
	DEFB 0F8h
	DEFB 32h
	DEFB 08h
	DEFB 0Bh
	DEFB 43h
	DEFB 00h
	DEFB 0C8h
	DEFB 0C0h
	DEFB 04h
	DEFB 20h
	DEFB 01h
	DEFB 80h
	DEFB 02h
	DEFB 00h
	DEFB 10h
	DEFB 08h
	DEFB 00h
	DEFB 40h
	DEFB 02h
.LABEL.__LABEL898:
	DEFW 0000h
	DEFB 01h
_arbolizq:
	DEFW .LABEL.__LABEL899
_arbolizq.__DATA__.__PTR__:
	DEFW _arbolizq.__DATA__
_arbolizq.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 06h
	DEFB 05h
	DEFB 0Bh
	DEFB 04h
	DEFB 0Ah
	DEFB 00h
	DEFB 55h
	DEFB 2Ah
	DEFB 80h
	DEFB 15h
	DEFB 6Ah
	DEFB 5Ch
	DEFB 0B2h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0A0h
	DEFB 00h
	DEFB 0E0h
	DEFB 0Ch
	DEFB 0Ah
	DEFB 0Ch
	DEFB 06h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 0Dh
	DEFB 0D3h
	DEFB 0AAh
	DEFB 50h
	DEFB 6Ah
	DEFB 0B9h
	DEFB 56h
	DEFB 00h
	DEFB 80h
	DEFB 50h
	DEFB 30h
	DEFB 0A0h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 05h
	DEFB 12h
	DEFB 28h
	DEFB 51h
	DEFB 36h
	DEFB 45h
	DEFB 2Bh
	DEFB 00h
	DEFB 50h
	DEFB 0A0h
	DEFB 08h
	DEFB 54h
	DEFB 0AAh
	DEFB 0C0h
	DEFB 2Eh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 2Dh
	DEFB 4Ah
	DEFB 65h
	DEFB 36h
	DEFB 00h
	DEFB 26h
	DEFB 02h
	DEFB 0D8h
	DEFB 35h
	DEFB 0A3h
	DEFB 0Ah
	DEFB 0A4h
	DEFB 99h
	DEFB 62h
	DEFB 0Dh
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 04h
	DEFB 00h
	DEFB 40h
	DEFB 20h
	DEFB 24h
	DEFB 24h
	DEFB 20h
	DEFB 00h
	DEFB 24h
	DEFB 20h
	DEFB 04h
	DEFB 80h
	DEFB 69h
	DEFB 0ACh
	DEFB 0C8h
	DEFB 0Dh
	DEFB 0C4h
	DEFB 0Dh
	DEFB 0C4h
	DEFB 0A8h
	DEFB 50h
	DEFB 68h
	DEFB 1Ch
	DEFB 0C8h
	DEFB 0F4h
	DEFB 2Ch
	DEFB 0Ah
	DEFB 00h
	DEFB 20h
	DEFB 00h
	DEFB 04h
	DEFB 01h
	DEFB 21h
	DEFB 06h
	DEFB 00h
	DEFB 85h
	DEFB 05h
	DEFB 08h
	DEFB 0Ch
	DEFB 08h
	DEFB 1Ch
	DEFB 0A2h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 0D0h
	DEFB 60h
	DEFB 34h
	DEFB 24h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 05h
	DEFB 0Bh
	DEFB 04h
	DEFB 0Ah
	DEFB 00h
	DEFB 55h
	DEFB 2Ah
	DEFB 00h
	DEFB 15h
	DEFB 6Ah
	DEFB 5Ch
	DEFB 0B2h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0A0h
	DEFB 00h
	DEFB 0E0h
	DEFB 0Ch
	DEFB 0Ah
	DEFB 0Ch
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 0Dh
	DEFB 0D3h
	DEFB 0AAh
	DEFB 10h
	DEFB 0Ah
	DEFB 09h
	DEFB 06h
	DEFB 00h
	DEFB 80h
	DEFB 50h
	DEFB 30h
	DEFB 0A0h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 15h
	DEFB 09h
	DEFB 15h
	DEFB 08h
	DEFB 0Ch
	DEFB 0Ah
	DEFB 16h
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 0A0h
	DEFB 0C0h
	DEFB 60h
	DEFB 28h
	DEFB 30h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 04h
	DEFB 16h
	DEFB 22h
	DEFB 0B6h
	DEFB 64h
	DEFB 0C2h
	DEFB 1Bh
	DEFB 1Ah
	DEFB 10h
	DEFB 98h
	DEFB 10h
	DEFB 30h
	DEFB 20h
	DEFB 20h
	DEFB 50h
	DEFB 50h
	DEFB 05h
	DEFB 05h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 01h
	DEFB 23h
	DEFB 32h
	DEFB 43h
	DEFB 65h
	DEFB 01h
	DEFB 0C1h
	DEFB 01h
	DEFB 00h
	DEFB 48h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 81h
	DEFB 0A1h
	DEFB 40h
	DEFB 0C0h
	DEFB 20h
	DEFB 60h
	DEFB 0F1h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
.LABEL.__LABEL899:
	DEFW 0000h
	DEFB 01h
_arboldrch:
	DEFW .LABEL.__LABEL900
_arboldrch.__DATA__.__PTR__:
	DEFW _arboldrch.__DATA__
_arboldrch.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 05h
	DEFB 00h
	DEFB 07h
	DEFB 00h
	DEFB 0AAh
	DEFB 54h
	DEFB 01h
	DEFB 0A8h
	DEFB 56h
	DEFB 3Ah
	DEFB 4Dh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 60h
	DEFB 0A0h
	DEFB 0D0h
	DEFB 20h
	DEFB 50h
	DEFB 01h
	DEFB 0Ah
	DEFB 0Ch
	DEFB 05h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 0B0h
	DEFB 0CBh
	DEFB 55h
	DEFB 0Ah
	DEFB 56h
	DEFB 9Dh
	DEFB 6Ah
	DEFB 00h
	DEFB 30h
	DEFB 50h
	DEFB 30h
	DEFB 60h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ah
	DEFB 05h
	DEFB 10h
	DEFB 2Ah
	DEFB 55h
	DEFB 03h
	DEFB 74h
	DEFB 00h
	DEFB 0A0h
	DEFB 48h
	DEFB 14h
	DEFB 0Ah
	DEFB 6Ch
	DEFB 0A2h
	DEFB 0D4h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 04h
	DEFB 20h
	DEFB 01h
	DEFB 02h
	DEFB 1Bh
	DEFB 0ACh
	DEFB 0C5h
	DEFB 50h
	DEFB 25h
	DEFB 99h
	DEFB 46h
	DEFB 0B0h
	DEFB 02h
	DEFB 0B4h
	DEFB 52h
	DEFB 0A6h
	DEFB 6Ch
	DEFB 00h
	DEFB 64h
	DEFB 40h
	DEFB 15h
	DEFB 0Ah
	DEFB 16h
	DEFB 38h
	DEFB 13h
	DEFB 2Fh
	DEFB 34h
	DEFB 50h
	DEFB 01h
	DEFB 96h
	DEFB 35h
	DEFB 13h
	DEFB 0B1h
	DEFB 23h
	DEFB 0B1h
	DEFB 23h
	DEFB 04h
	DEFB 24h
	DEFB 24h
	DEFB 04h
	DEFB 00h
	DEFB 24h
	DEFB 04h
	DEFB 20h
	DEFB 00h
	DEFB 41h
	DEFB 0Bh
	DEFB 06h
	DEFB 2Ch
	DEFB 24h
	DEFB 02h
	DEFB 00h
	DEFB 0A1h
	DEFB 0A1h
	DEFB 11h
	DEFB 30h
	DEFB 11h
	DEFB 38h
	DEFB 45h
	DEFB 00h
	DEFB 00h
	DEFB 04h
	DEFB 00h
	DEFB 20h
	DEFB 00h
	DEFB 04h
	DEFB 60h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 05h
	DEFB 00h
	DEFB 07h
	DEFB 00h
	DEFB 0AAh
	DEFB 54h
	DEFB 01h
	DEFB 0A8h
	DEFB 56h
	DEFB 3Ah
	DEFB 4Dh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0A0h
	DEFB 0D0h
	DEFB 20h
	DEFB 50h
	DEFB 01h
	DEFB 0Ah
	DEFB 0Ch
	DEFB 05h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 0B0h
	DEFB 0CBh
	DEFB 55h
	DEFB 08h
	DEFB 51h
	DEFB 10h
	DEFB 60h
	DEFB 00h
	DEFB 30h
	DEFB 50h
	DEFB 30h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 05h
	DEFB 03h
	DEFB 06h
	DEFB 14h
	DEFB 0Ch
	DEFB 08h
	DEFB 0A8h
	DEFB 10h
	DEFB 0A8h
	DEFB 10h
	DEFB 30h
	DEFB 50h
	DEFB 68h
	DEFB 50h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 08h
	DEFB 19h
	DEFB 08h
	DEFB 0Ch
	DEFB 04h
	DEFB 04h
	DEFB 0Ah
	DEFB 0Ah
	DEFB 20h
	DEFB 68h
	DEFB 44h
	DEFB 6Dh
	DEFB 26h
	DEFB 43h
	DEFB 0D8h
	DEFB 58h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 12h
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 01h
	DEFB 0C4h
	DEFB 4Ch
	DEFB 0C2h
	DEFB 0A6h
	DEFB 01h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 0A0h
	DEFB 0A0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 01h
	DEFB 03h
	DEFB 01h
	DEFB 03h
	DEFB 00h
	DEFB 81h
	DEFB 05h
	DEFB 02h
	DEFB 03h
	DEFB 04h
	DEFB 06h
	DEFB 0Fh
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL900:
	DEFW 0000h
	DEFB 01h
_arbolattizq:
	DEFW .LABEL.__LABEL901
_arbolattizq.__DATA__.__PTR__:
	DEFW _arbolattizq.__DATA__
_arbolattizq.__DATA__:
	DEFB 00h
	DEFB 05h
	DEFB 12h
	DEFB 28h
	DEFB 51h
	DEFB 0B6h
	DEFB 45h
	DEFB 0ABh
	DEFB 00h
	DEFB 50h
	DEFB 0A0h
	DEFB 08h
	DEFB 54h
	DEFB 0AAh
	DEFB 0C0h
	DEFB 2Eh
	DEFB 00h
	DEFB 08h
	DEFB 12h
	DEFB 14h
	DEFB 14h
	DEFB 08h
	DEFB 08h
	DEFB 0Ch
	DEFB 0C0h
	DEFB 0ADh
	DEFB 0CAh
	DEFB 01h
	DEFB 18h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 0D8h
	DEFB 35h
	DEFB 0A3h
	DEFB 0Ah
	DEFB 0A4h
	DEFB 98h
	DEFB 60h
	DEFB 00h
	DEFB 04h
	DEFB 26h
	DEFB 0Ch
	DEFB 08h
	DEFB 18h
	DEFB 24h
	DEFB 60h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 15h
	DEFB 09h
	DEFB 15h
	DEFB 08h
	DEFB 2Ch
	DEFB 2Ah
	DEFB 56h
	DEFB 6Ah
	DEFB 0A0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 0Bh
	DEFB 06h
	DEFB 08h
	DEFB 10h
	DEFB 44h
	DEFB 0C6h
	DEFB 02h
	DEFB 06h
	DEFB 04h
	DEFB 11h
	DEFB 39h
	DEFB 31h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 50h
	DEFB 50h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 03h
	DEFB 02h
	DEFB 41h
	DEFB 61h
	DEFB 01h
	DEFB 0C2h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 80h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0A0h
	DEFB 0C0h
	DEFB 40h
	DEFB 07h
	DEFB 03h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0C0h
	DEFB 0E0h
	DEFB 00h
	DEFB 80h
	DEFB 0C0h
	DEFB 40h
	DEFB 40h
	DEFB 60h
	DEFB 40h
	DEFB 0E0h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 04h
	DEFB 0Ah
	DEFB 14h
	DEFB 2Dh
	DEFB 11h
	DEFB 2Ah
	DEFB 00h
	DEFB 54h
	DEFB 0A8h
	DEFB 02h
	DEFB 55h
	DEFB 0AAh
	DEFB 70h
	DEFB 0CBh
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 28h
	DEFB 10h
	DEFB 30h
	DEFB 2Bh
	DEFB 32h
	DEFB 00h
	DEFB 06h
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 36h
	DEFB 48h
	DEFB 0A2h
	DEFB 41h
	DEFB 29h
	DEFB 25h
	DEFB 12h
	DEFB 02h
	DEFB 00h
	DEFB 0A2h
	DEFB 50h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Bh
	DEFB 03h
	DEFB 09h
	DEFB 03h
	DEFB 1Dh
	DEFB 0Ah
	DEFB 16h
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 04h
	DEFB 16h
	DEFB 22h
	DEFB 36h
	DEFB 24h
	DEFB 42h
	DEFB 0Bh
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 8Bh
	DEFB 9Ah
	DEFB 1Bh
	DEFB 0Dh
	DEFB 09h
	DEFB 19h
	DEFB 09h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 09h
	DEFB 09h
	DEFB 04h
	DEFB 04h
	DEFB 08h
	DEFB 08h
	DEFB 1Dh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 05h
	DEFB 0Bh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 55h
	DEFB 2Ah
	DEFB 00h
	DEFB 15h
	DEFB 6Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0A0h
	DEFB 04h
	DEFB 0Ah
	DEFB 0Ch
	DEFB 0Ah
	DEFB 0Ch
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 5Ch
	DEFB 0B2h
	DEFB 0Dh
	DEFB 0D3h
	DEFB 0AAh
	DEFB 10h
	DEFB 0Ah
	DEFB 09h
	DEFB 00h
	DEFB 0E0h
	DEFB 00h
	DEFB 50h
	DEFB 30h
	DEFB 0A0h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 0Bh
	DEFB 06h
	DEFB 08h
	DEFB 14h
	DEFB 68h
	DEFB 35h
	DEFB 0C8h
	DEFB 0Ch
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 28h
	DEFB 30h
	DEFB 06h
	DEFB 08h
	DEFB 10h
	DEFB 60h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 06h
	DEFB 0Ah
	DEFB 04h
	DEFB 06h
	DEFB 02h
	DEFB 06h
	DEFB 04h
	DEFB 1Ch
	DEFB 30h
	DEFB 20h
	DEFB 40h
	DEFB 60h
	DEFB 40h
	DEFB 50h
	DEFB 20h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 03h
	DEFB 02h
	DEFB 38h
	DEFB 31h
	DEFB 41h
	DEFB 0E1h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 80h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0A0h
	DEFB 0C0h
	DEFB 40h
	DEFB 07h
	DEFB 03h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0C0h
	DEFB 0E0h
	DEFB 00h
	DEFB 20h
	DEFB 30h
	DEFB 10h
	DEFB 18h
	DEFB 0Eh
	DEFB 04h
	DEFB 08h
	DEFB 00h
.LABEL.__LABEL901:
	DEFW 0000h
	DEFB 01h
_arbolattdrch:
	DEFW .LABEL.__LABEL902
_arbolattdrch.__DATA__.__PTR__:
	DEFW _arbolattdrch.__DATA__
_arbolattdrch.__DATA__:
	DEFB 00h
	DEFB 10h
	DEFB 48h
	DEFB 28h
	DEFB 28h
	DEFB 10h
	DEFB 10h
	DEFB 30h
	DEFB 00h
	DEFB 0Ah
	DEFB 05h
	DEFB 10h
	DEFB 2Ah
	DEFB 55h
	DEFB 03h
	DEFB 74h
	DEFB 00h
	DEFB 0A0h
	DEFB 48h
	DEFB 14h
	DEFB 0Ah
	DEFB 6Dh
	DEFB 0A2h
	DEFB 0D5h
	DEFB 20h
	DEFB 64h
	DEFB 30h
	DEFB 10h
	DEFB 18h
	DEFB 24h
	DEFB 06h
	DEFB 03h
	DEFB 1Bh
	DEFB 0ACh
	DEFB 0C5h
	DEFB 50h
	DEFB 25h
	DEFB 19h
	DEFB 06h
	DEFB 00h
	DEFB 03h
	DEFB 0B5h
	DEFB 53h
	DEFB 00h
	DEFB 18h
	DEFB 08h
	DEFB 00h
	DEFB 00h
	DEFB 05h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0A8h
	DEFB 10h
	DEFB 0A8h
	DEFB 10h
	DEFB 34h
	DEFB 54h
	DEFB 6Ah
	DEFB 56h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 22h
	DEFB 63h
	DEFB 40h
	DEFB 61h
	DEFB 20h
	DEFB 08h
	DEFB 9Ch
	DEFB 0Ch
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0D0h
	DEFB 60h
	DEFB 10h
	DEFB 08h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 01h
	DEFB 05h
	DEFB 03h
	DEFB 02h
	DEFB 82h
	DEFB 06h
	DEFB 01h
	DEFB 43h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 04h
	DEFB 0Ah
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 40h
	DEFB 01h
	DEFB 03h
	DEFB 02h
	DEFB 02h
	DEFB 06h
	DEFB 02h
	DEFB 07h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 01h
	DEFB 02h
	DEFB 03h
	DEFB 07h
	DEFB 00h
	DEFB 0E0h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 00h
	DEFB 01h
	DEFB 14h
	DEFB 09h
	DEFB 00h
	DEFB 2Ah
	DEFB 15h
	DEFB 40h
	DEFB 0AAh
	DEFB 55h
	DEFB 0Eh
	DEFB 0D3h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 50h
	DEFB 28h
	DEFB 0B4h
	DEFB 08h
	DEFB 54h
	DEFB 00h
	DEFB 45h
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 04h
	DEFB 00h
	DEFB 02h
	DEFB 6Ch
	DEFB 12h
	DEFB 45h
	DEFB 02h
	DEFB 94h
	DEFB 0A4h
	DEFB 48h
	DEFB 40h
	DEFB 0Ch
	DEFB 0D4h
	DEFB 4Ch
	DEFB 00h
	DEFB 60h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0D0h
	DEFB 0C0h
	DEFB 10h
	DEFB 0C0h
	DEFB 0B8h
	DEFB 50h
	DEFB 68h
	DEFB 50h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 68h
	DEFB 44h
	DEFB 6Ch
	DEFB 24h
	DEFB 42h
	DEFB 0D1h
	DEFB 50h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 01h
	DEFB 0D1h
	DEFB 59h
	DEFB 0D8h
	DEFB 0B0h
	DEFB 10h
	DEFB 98h
	DEFB 10h
	DEFB 18h
	DEFB 40h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 01h
	DEFB 03h
	DEFB 01h
	DEFB 03h
	DEFB 00h
	DEFB 90h
	DEFB 10h
	DEFB 20h
	DEFB 20h
	DEFB 10h
	DEFB 10h
	DEFB 0B8h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 05h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0AAh
	DEFB 54h
	DEFB 01h
	DEFB 0A8h
	DEFB 56h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0A0h
	DEFB 0D0h
	DEFB 00h
	DEFB 07h
	DEFB 01h
	DEFB 0Ah
	DEFB 0Ch
	DEFB 05h
	DEFB 02h
	DEFB 01h
	DEFB 3Ah
	DEFB 4Dh
	DEFB 0B0h
	DEFB 0CBh
	DEFB 55h
	DEFB 08h
	DEFB 51h
	DEFB 10h
	DEFB 20h
	DEFB 50h
	DEFB 30h
	DEFB 50h
	DEFB 30h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 03h
	DEFB 14h
	DEFB 0Ch
	DEFB 60h
	DEFB 10h
	DEFB 28h
	DEFB 16h
	DEFB 0ACh
	DEFB 13h
	DEFB 31h
	DEFB 50h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 40h
	DEFB 0D0h
	DEFB 0Ch
	DEFB 04h
	DEFB 02h
	DEFB 06h
	DEFB 02h
	DEFB 0Ah
	DEFB 04h
	DEFB 18h
	DEFB 60h
	DEFB 50h
	DEFB 20h
	DEFB 60h
	DEFB 40h
	DEFB 60h
	DEFB 20h
	DEFB 38h
	DEFB 60h
	DEFB 10h
	DEFB 08h
	DEFB 06h
	DEFB 09h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 05h
	DEFB 03h
	DEFB 02h
	DEFB 1Ch
	DEFB 0Ch
	DEFB 02h
	DEFB 07h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0C0h
	DEFB 40h
	DEFB 04h
	DEFB 0Ch
	DEFB 08h
	DEFB 18h
	DEFB 70h
	DEFB 20h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 01h
	DEFB 02h
	DEFB 03h
	DEFB 07h
	DEFB 00h
	DEFB 0E0h
	DEFB 0C0h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL902:
	DEFW 0000h
	DEFB 01h
_ratadrch:
	DEFW .LABEL.__LABEL903
_ratadrch.__DATA__.__PTR__:
	DEFW _ratadrch.__DATA__
_ratadrch.__DATA__:
	DEFB 00h
	DEFB 03h
	DEFB 0Dh
	DEFB 16h
	DEFB 2Dh
	DEFB 3Ah
	DEFB 54h
	DEFB 69h
	DEFB 7Dh
	DEFB 0A9h
	DEFB 55h
	DEFB 0Ah
	DEFB 21h
	DEFB 02h
	DEFB 00h
	DEFB 40h
	DEFB 0C6h
	DEFB 2Ah
	DEFB 22h
	DEFB 0DCh
	DEFB 02h
	DEFB 1Ah
	DEFB 1Ah
	DEFB 42h
	DEFB 34h
	DEFB 68h
	DEFB 30h
	DEFB 68h
	DEFB 73h
	DEFB 94h
	DEFB 0Ch
	DEFB 07h
	DEFB 20h
	DEFB 21h
	DEFB 11h
	DEFB 0Dh
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 0A1h
	DEFB 55h
	DEFB 0Ah
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Fh
	DEFB 16h
	DEFB 2Dh
	DEFB 3Ah
	DEFB 54h
	DEFB 69h
	DEFB 34h
	DEFB 68h
	DEFB 0C0h
	DEFB 0A8h
	DEFB 55h
	DEFB 0A9h
	DEFB 15h
	DEFB 0Ah
	DEFB 21h
	DEFB 42h
	DEFB 00h
	DEFB 00h
	DEFB 0C6h
	DEFB 2Ah
	DEFB 22h
	DEFB 0DCh
	DEFB 02h
	DEFB 1Ah
	DEFB 30h
	DEFB 68h
	DEFB 73h
	DEFB 94h
	DEFB 0Ch
	DEFB 04h
	DEFB 08h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 21h
	DEFB 11h
	DEFB 0Dh
	DEFB 02h
	DEFB 01h
	DEFB 1Ah
	DEFB 42h
	DEFB 0A1h
	DEFB 55h
	DEFB 0Ah
	DEFB 0Ah
	DEFB 00h
	DEFB 80h
.LABEL.__LABEL903:
	DEFW 0000h
	DEFB 01h
_rataizq:
	DEFW .LABEL.__LABEL904
_rataizq.__DATA__.__PTR__:
	DEFW _rataizq.__DATA__
_rataizq.__DATA__:
	DEFB 63h
	DEFB 54h
	DEFB 44h
	DEFB 3Bh
	DEFB 40h
	DEFB 58h
	DEFB 58h
	DEFB 42h
	DEFB 0BEh
	DEFB 95h
	DEFB 0AAh
	DEFB 51h
	DEFB 04h
	DEFB 41h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 0C0h
	DEFB 0B0h
	DEFB 68h
	DEFB 0B4h
	DEFB 5Ch
	DEFB 2Ah
	DEFB 96h
	DEFB 85h
	DEFB 0AAh
	DEFB 50h
	DEFB 50h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 04h
	DEFB 04h
	DEFB 08h
	DEFB 0B1h
	DEFB 0C0h
	DEFB 00h
	DEFB 40h
	DEFB 00h
	DEFB 2Ch
	DEFB 16h
	DEFB 0Ch
	DEFB 16h
	DEFB 0CEh
	DEFB 29h
	DEFB 30h
	DEFB 0E0h
	DEFB 00h
	DEFB 00h
	DEFB 63h
	DEFB 54h
	DEFB 44h
	DEFB 3Bh
	DEFB 40h
	DEFB 58h
	DEFB 03h
	DEFB 15h
	DEFB 0AAh
	DEFB 95h
	DEFB 0A8h
	DEFB 50h
	DEFB 04h
	DEFB 42h
	DEFB 0F0h
	DEFB 68h
	DEFB 0B4h
	DEFB 5Ch
	DEFB 2Ah
	DEFB 96h
	DEFB 2Ch
	DEFB 16h
	DEFB 58h
	DEFB 42h
	DEFB 05h
	DEFB 0AAh
	DEFB 50h
	DEFB 50h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 04h
	DEFB 04h
	DEFB 08h
	DEFB 0B0h
	DEFB 40h
	DEFB 00h
	DEFB 0Ch
	DEFB 16h
	DEFB 0CEh
	DEFB 29h
	DEFB 30h
	DEFB 20h
	DEFB 10h
	DEFB 00h
.LABEL.__LABEL904:
	DEFW 0000h
	DEFB 01h
_mago:
	DEFW .LABEL.__LABEL905
_mago.__DATA__.__PTR__:
	DEFW _mago.__DATA__
_mago.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 1Eh
	DEFB 12h
	DEFB 00h
	DEFB 02h
	DEFB 04h
	DEFB 00h
	DEFB 14h
	DEFB 3Ah
	DEFB 4Dh
	DEFB 07h
	DEFB 06h
	DEFB 0ABh
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 08h
	DEFB 00h
	DEFB 08h
	DEFB 08h
	DEFB 01h
	DEFB 1Bh
	DEFB 1Bh
	DEFB 02h
	DEFB 43h
	DEFB 22h
	DEFB 0A5h
	DEFB 9Ah
	DEFB 0E7h
	DEFB 5Bh
	DEFB 7Fh
	DEFB 3Dh
	DEFB 80h
	DEFB 40h
	DEFB 0A0h
	DEFB 0E0h
	DEFB 0D0h
	DEFB 0A0h
	DEFB 0D0h
	DEFB 0A0h
	DEFB 08h
	DEFB 08h
	DEFB 08h
	DEFB 08h
	DEFB 08h
	DEFB 08h
	DEFB 00h
	DEFB 08h
	DEFB 5Fh
	DEFB 3Fh
	DEFB 7Fh
	DEFB 3Fh
	DEFB 7Fh
	DEFB 7Fh
	DEFB 5Eh
	DEFB 0BFh
	DEFB 0D0h
	DEFB 0E0h
	DEFB 0F8h
	DEFB 0C0h
	DEFB 0A0h
	DEFB 0C0h
	DEFB 0A0h
	DEFB 0D0h
.LABEL.__LABEL905:
	DEFW 0000h
	DEFB 01h
_puertarocaizq:
	DEFW .LABEL.__LABEL906
_puertarocaizq.__DATA__.__PTR__:
	DEFW _puertarocaizq.__DATA__
_puertarocaizq.__DATA__:
	DEFB 07h
	DEFB 0Fh
	DEFB 1Fh
	DEFB 1Dh
	DEFB 1Ah
	DEFB 1Ch
	DEFB 1Dh
	DEFB 15h
	DEFB 7Bh
	DEFB 0FDh
	DEFB 7Fh
	DEFB 0DFh
	DEFB 2Fh
	DEFB 0DEh
	DEFB 0EEh
	DEFB 0EFh
	DEFB 0A0h
	DEFB 0D0h
	DEFB 0E8h
	DEFB 0F0h
	DEFB 0E8h
	DEFB 0F0h
	DEFB 0E8h
	DEFB 0F0h
	DEFB 1Ch
	DEFB 1Ah
	DEFB 1Dh
	DEFB 1Fh
	DEFB 1Ah
	DEFB 1Fh
	DEFB 19h
	DEFB 1Fh
	DEFB 0DEh
	DEFB 2Fh
	DEFB 0DFh
	DEFB 0FFh
	DEFB 53h
	DEFB 0FFh
	DEFB 56h
	DEFB 0FFh
	DEFB 0E8h
	DEFB 0F0h
	DEFB 0E8h
	DEFB 0F0h
	DEFB 0E8h
	DEFB 0F0h
	DEFB 0E8h
	DEFB 0F0h
	DEFB 1Ah
	DEFB 1Fh
	DEFB 19h
	DEFB 1Fh
	DEFB 0Ah
	DEFB 00h
	DEFB 3Eh
	DEFB 29h
	DEFB 0A6h
	DEFB 0FFh
	DEFB 4Ah
	DEFB 0FEh
	DEFB 0AAh
	DEFB 00h
	DEFB 0FBh
	DEFB 0ACh
	DEFB 0E8h
	DEFB 0F0h
	DEFB 0E8h
	DEFB 0D0h
	DEFB 0A8h
	DEFB 00h
	DEFB 0ECh
	DEFB 50h
.LABEL.__LABEL906:
	DEFW 0000h
	DEFB 01h
_puertarocadrch:
	DEFW .LABEL.__LABEL907
_puertarocadrch.__DATA__.__PTR__:
	DEFW _puertarocadrch.__DATA__
_puertarocadrch.__DATA__:
	DEFB 05h
	DEFB 0Bh
	DEFB 17h
	DEFB 0Fh
	DEFB 17h
	DEFB 0Fh
	DEFB 17h
	DEFB 0Fh
	DEFB 0DEh
	DEFB 0BFh
	DEFB 0FEh
	DEFB 0FBh
	DEFB 0F4h
	DEFB 7Bh
	DEFB 77h
	DEFB 0F7h
	DEFB 0E0h
	DEFB 0F0h
	DEFB 0F8h
	DEFB 0B8h
	DEFB 58h
	DEFB 38h
	DEFB 0B8h
	DEFB 0A8h
	DEFB 17h
	DEFB 0Fh
	DEFB 17h
	DEFB 0Fh
	DEFB 17h
	DEFB 0Fh
	DEFB 17h
	DEFB 0Fh
	DEFB 7Bh
	DEFB 0F4h
	DEFB 0FBh
	DEFB 0FFh
	DEFB 0CAh
	DEFB 0FFh
	DEFB 6Ah
	DEFB 0FFh
	DEFB 38h
	DEFB 58h
	DEFB 0B8h
	DEFB 0F8h
	DEFB 58h
	DEFB 0F8h
	DEFB 98h
	DEFB 0F8h
	DEFB 17h
	DEFB 0Fh
	DEFB 17h
	DEFB 0Bh
	DEFB 15h
	DEFB 00h
	DEFB 37h
	DEFB 2Dh
	DEFB 65h
	DEFB 0FFh
	DEFB 52h
	DEFB 7Fh
	DEFB 55h
	DEFB 00h
	DEFB 0DFh
	DEFB 35h
	DEFB 58h
	DEFB 0F8h
	DEFB 98h
	DEFB 0F8h
	DEFB 50h
	DEFB 00h
	DEFB 7Ch
	DEFB 30h
.LABEL.__LABEL907:
	DEFW 0000h
	DEFB 01h
_cielo:
	DEFW .LABEL.__LABEL908
_cielo.__DATA__.__PTR__:
	DEFW _cielo.__DATA__
_cielo.__DATA__:
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
	DEFB 0FFh
.LABEL.__LABEL908:
	DEFW 0000h
	DEFB 01h
_titulo:
	DEFW .LABEL.__LABEL909
_titulo.__DATA__.__PTR__:
	DEFW _titulo.__DATA__
_titulo.__DATA__:
	DEFB 00h
	DEFB 01h
	DEFB 03h
	DEFB 06h
	DEFB 0Eh
	DEFB 0Fh
	DEFB 07h
	DEFB 0B7h
	DEFB 00h
	DEFB 0E0h
	DEFB 0F0h
	DEFB 39h
	DEFB 14h
	DEFB 03h
	DEFB 03h
	DEFB 0E7h
	DEFB 00h
	DEFB 3Eh
	DEFB 0FFh
	DEFB 0C3h
	DEFB 0C1h
	DEFB 00h
	DEFB 00h
	DEFB 96h
	DEFB 00h
	DEFB 07h
	DEFB 9Fh
	DEFB 0CEh
	DEFB 0E6h
	DEFB 0E7h
	DEFB 66h
	DEFB 0FFh
	DEFB 00h
	DEFB 03h
	DEFB 0Eh
	DEFB 06h
	DEFB 06h
	DEFB 06h
	DEFB 06h
	DEFB 67h
	DEFB 00h
	DEFB 7Eh
	DEFB 3Ch
	DEFB 38h
	DEFB 38h
	DEFB 38h
	DEFB 38h
	DEFB 7Dh
	DEFB 00h
	DEFB 01h
	DEFB 03h
	DEFB 06h
	DEFB 0Eh
	DEFB 0Fh
	DEFB 07h
	DEFB 17h
	DEFB 00h
	DEFB 0E0h
	DEFB 0F0h
	DEFB 38h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 0EDh
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 04h
	DEFB 0Eh
	DEFB 07h
	DEFB 03h
	DEFB 00h
	DEFB 0F3h
	DEFB 0F3h
	DEFB 3Bh
	DEFB 39h
	DEFB 31h
	DEFB 0E0h
	DEFB 0C0h
	DEFB 00h
	DEFB 80h
	DEFB 00h
	DEFB 0C0h
	DEFB 0C0h
	DEFB 0E3h
	DEFB 0FFh
	DEFB 3Eh
	DEFB 00h
	DEFB 66h
	DEFB 0E6h
	DEFB 0E6h
	DEFB 0C6h
	DEFB 0C3h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 06h
	DEFB 06h
	DEFB 06h
	DEFB 06h
	DEFB 0Ch
	DEFB 0F8h
	DEFB 0F0h
	DEFB 00h
	DEFB 38h
	DEFB 38h
	DEFB 38h
	DEFB 38h
	DEFB 3Ch
	DEFB 7Fh
	DEFB 67h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 24h
	DEFB 3Eh
	DEFB 0F7h
	DEFB 0E3h
	DEFB 00h
	DEFB 0F0h
	DEFB 0F0h
	DEFB 38h
	DEFB 38h
	DEFB 30h
	DEFB 0E0h
	DEFB 0C0h
	DEFB 00h
.LABEL.__LABEL909:
	DEFW 0000h
	DEFB 01h
_logo:
	DEFW .LABEL.__LABEL910
_logo.__DATA__.__PTR__:
	DEFW _logo.__DATA__
_logo.__DATA__:
	DEFB 00h
	DEFB 0Fh
	DEFB 0Fh
	DEFB 0Ch
	DEFB 0Fh
	DEFB 0Fh
	DEFB 0Ch
	DEFB 0Ch
	DEFB 00h
	DEFB 9Fh
	DEFB 0DFh
	DEFB 0D8h
	DEFB 9Fh
	DEFB 0D8h
	DEFB 0DFh
	DEFB 0EFh
	DEFB 00h
	DEFB 0FFh
	DEFB 0FFh
	DEFB 36h
	DEFB 37h
	DEFB 37h
	DEFB 0B6h
	DEFB 0B6h
	DEFB 00h
	DEFB 0C7h
	DEFB 0EFh
	DEFB 6Ch
	DEFB 0CCh
	DEFB 0ECh
	DEFB 6Fh
	DEFB 77h
	DEFB 00h
	DEFB 02h
	DEFB 0C1h
	DEFB 0C0h
	DEFB 0C0h
	DEFB 0CFh
	DEFB 0D8h
	DEFB 92h
	DEFB 10h
	DEFB 20h
	DEFB 40h
	DEFB 00h
	DEFB 00h
	DEFB 0FFh
	DEFB 1Ah
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0F0h
	DEFB 08h
	DEFB 0E8h
	DEFB 00h
	DEFB 0Fh
	DEFB 0Fh
	DEFB 0Ch
	DEFB 0Fh
	DEFB 0Ch
	DEFB 0Fh
	DEFB 0Fh
	DEFB 00h
	DEFB 99h
	DEFB 0D9h
	DEFB 0DFh
	DEFB 0Fh
	DEFB 0C1h
	DEFB 0DFh
	DEFB 9Fh
	DEFB 30h
	DEFB 0B7h
	DEFB 0B7h
	DEFB 0B6h
	DEFB 0B7h
	DEFB 0B6h
	DEFB 0B7h
	DEFB 37h
	DEFB 00h
	DEFB 0E7h
	DEFB 0EFh
	DEFB 0Ch
	DEFB 0C7h
	DEFB 00h
	DEFB 0EFh
	DEFB 0EFh
	DEFB 14h
	DEFB 0D4h
	DEFB 0D0h
	DEFB 10h
	DEFB 10h
	DEFB 0D8h
	DEFB 0DFh
	DEFB 0Bh
	DEFB 0Ah
	DEFB 0Bh
	DEFB 0Bh
	DEFB 0Bh
	DEFB 0Bh
	DEFB 1Bh
	DEFB 0FBh
	DEFB 55h
	DEFB 08h
	DEFB 0F0h
	DEFB 0B8h
	DEFB 0F0h
	DEFB 0B8h
	DEFB 10h
	DEFB 0F8h
	DEFB 70h
	DEFB 00h
	DEFB 73h
	DEFB 6Bh
	DEFB 6Bh
	DEFB 6Bh
	DEFB 73h
	DEFB 63h
	DEFB 63h
	DEFB 00h
	DEFB 0Ch
	DEFB 5Ah
	DEFB 5Ah
	DEFB 5Ah
	DEFB 9Ah
	DEFB 5Ah
	DEFB 4Ch
	DEFB 00h
	DEFB 0E6h
	DEFB 0D6h
	DEFB 0D6h
	DEFB 0D6h
	DEFB 0D6h
	DEFB 0D6h
	DEFB 0E3h
	DEFB 00h
	DEFB 99h
	DEFB 0B4h
	DEFB 0B0h
	DEFB 0B0h
	DEFB 0B0h
	DEFB 0B4h
	DEFB 18h
	DEFB 00h
	DEFB 0EFh
	DEFB 0C6h
	DEFB 0C6h
	DEFB 0C6h
	DEFB 0C6h
	DEFB 0C6h
	DEFB 0CFh
	DEFB 00h
	DEFB 33h
	DEFB 6Bh
	DEFB 6Bh
	DEFB 6Bh
	DEFB 6Bh
	DEFB 6Bh
	DEFB 33h
	DEFB 00h
	DEFB 0Ch
	DEFB 5Ah
	DEFB 58h
	DEFB 4Ch
	DEFB 46h
	DEFB 56h
	DEFB 4Ch
.LABEL.__LABEL910:
	DEFW 0000h
	DEFB 01h
_letrasfin:
	DEFW .LABEL.__LABEL911
_letrasfin.__DATA__.__PTR__:
	DEFW _letrasfin.__DATA__
_letrasfin.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 07h
	DEFB 3Fh
	DEFB 19h
	DEFB 18h
	DEFB 1Ah
	DEFB 0BEh
	DEFB 00h
	DEFB 00h
	DEFB 18h
	DEFB 73h
	DEFB 31h
	DEFB 31h
	DEFB 31h
	DEFB 0FBh
	DEFB 00h
	DEFB 00h
	DEFB 0DCh
	DEFB 98h
	DEFB 98h
	DEFB 0D8h
	DEFB 0D8h
	DEFB 0BDh
	DEFB 1Ah
	DEFB 18h
	DEFB 18h
	DEFB 18h
	DEFB 18h
	DEFB 3Ch
	DEFB 00h
	DEFB 00h
	DEFB 31h
	DEFB 31h
	DEFB 31h
	DEFB 31h
	DEFB 31h
	DEFB 7Bh
	DEFB 00h
	DEFB 00h
	DEFB 0B8h
	DEFB 98h
	DEFB 98h
	DEFB 98h
	DEFB 98h
	DEFB 0DCh
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL911:
	DEFW 0000h
	DEFB 01h
_mapa:
	DEFW .LABEL.__LABEL912
_mapa.__DATA__.__PTR__:
	DEFW _mapa.__DATA__
_mapa.__DATA__:
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 29h
	DEFB 10h
	DEFB 29h
	DEFB 10h
	DEFB 21h
	DEFB 09h
	DEFB 06h
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 10h
	DEFB 29h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 15h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 12h
	DEFB 01h
	DEFB 22h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 12h
	DEFB 01h
	DEFB 22h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 01h
	DEFB 22h
	DEFB 29h
	DEFB 10h
	DEFB 11h
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 11h
	DEFB 00h
	DEFB 0Fh
	DEFB 22h
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 15h
	DEFB 1Eh
	DEFB 1Eh
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 21h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 29h
	DEFB 1Eh
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 1Eh
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 1Dh
	DEFB 1Eh
	DEFB 15h
	DEFB 29h
	DEFB 1Eh
	DEFB 20h
	DEFB 1Eh
	DEFB 29h
	DEFB 29h
	DEFB 00h
	DEFB 01h
	DEFB 29h
	DEFB 0Eh
	DEFB 0Eh
	DEFB 0Eh
	DEFB 0Dh
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 0Dh
	DEFB 29h
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 29h
	DEFB 15h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 29h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 29h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 20h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 03h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 1Bh
	DEFB 1Eh
	DEFB 15h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 29h
	DEFB 29h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 0Dh
	DEFB 00h
	DEFB 01h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 20h
	DEFB 20h
	DEFB 29h
	DEFB 0Dh
	DEFB 29h
	DEFB 10h
	DEFB 29h
	DEFB 0Dh
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 29h
	DEFB 29h
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 0Eh
	DEFB 29h
	DEFB 0Dh
	DEFB 1Fh
	DEFB 29h
	DEFB 15h
	DEFB 1Eh
	DEFB 02h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 0Dh
	DEFB 29h
	DEFB 01h
	DEFB 00h
	DEFB 11h
	DEFB 06h
	DEFB 03h
	DEFB 00h
	DEFB 29h
	DEFB 29h
	DEFB 1Eh
	DEFB 20h
	DEFB 20h
	DEFB 1Fh
	DEFB 29h
	DEFB 29h
	DEFB 0Dh
	DEFB 29h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 03h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 00h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 26h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 20h
	DEFB 20h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 17h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 15h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 00h
	DEFB 17h
	DEFB 01h
	DEFB 17h
	DEFB 17h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 18h
	DEFB 00h
	DEFB 15h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 00h
	DEFB 18h
	DEFB 00h
	DEFB 01h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 00h
	DEFB 18h
	DEFB 20h
	DEFB 20h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 00h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 00h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 00h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 23h
	DEFB 00h
	DEFB 00h
	DEFB 23h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 24h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 25h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 15h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 01h
	DEFB 22h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 01h
	DEFB 02h
	DEFB 1Eh
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 29h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 21h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 1Ah
	DEFB 12h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 00h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 1Eh
	DEFB 11h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 29h
	DEFB 10h
	DEFB 1Fh
	DEFB 20h
	DEFB 02h
	DEFB 10h
	DEFB 03h
	DEFB 00h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 12h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 2Bh
	DEFB 1Bh
	DEFB 00h
	DEFB 12h
	DEFB 12h
	DEFB 1Dh
	DEFB 1Bh
	DEFB 13h
	DEFB 0Dh
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 20h
	DEFB 00h
	DEFB 02h
	DEFB 10h
	DEFB 03h
	DEFB 1Fh
	DEFB 02h
	DEFB 10h
	DEFB 03h
	DEFB 2Bh
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 06h
	DEFB 12h
	DEFB 1Bh
	DEFB 00h
	DEFB 0Bh
	DEFB 0Ch
	DEFB 00h
	DEFB 0Bh
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 1Eh
	DEFB 0Eh
	DEFB 1Eh
	DEFB 02h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 03h
	DEFB 02h
	DEFB 10h
	DEFB 03h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 02h
	DEFB 12h
	DEFB 00h
	DEFB 13h
	DEFB 03h
	DEFB 0Ch
	DEFB 00h
	DEFB 00h
	DEFB 1Ah
	DEFB 12h
	DEFB 00h
	DEFB 13h
	DEFB 19h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 1Eh
	DEFB 15h
	DEFB 1Eh
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 20h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 20h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 1Dh
	DEFB 1Dh
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 12h
	DEFB 15h
	DEFB 1Eh
	DEFB 1Eh
	DEFB 15h
	DEFB 13h
	DEFB 03h
	DEFB 02h
	DEFB 12h
	DEFB 01h
	DEFB 0Bh
	DEFB 0Ch
	DEFB 01h
	DEFB 13h
	DEFB 03h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 02h
	DEFB 10h
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 10h
	DEFB 10h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 29h
	DEFB 1Fh
	DEFB 29h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 29h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 03h
	DEFB 00h
	DEFB 29h
	DEFB 10h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 10h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 29h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 29h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 1Ch
	DEFB 29h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 29h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 29h
	DEFB 1Fh
	DEFB 29h
	DEFB 17h
	DEFB 01h
	DEFB 17h
	DEFB 17h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 18h
	DEFB 17h
	DEFB 01h
	DEFB 17h
	DEFB 17h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 18h
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 00h
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 1Bh
	DEFB 1Bh
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 00h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 00h
	DEFB 00h
	DEFB 16h
	DEFB 17h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 18h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 18h
	DEFB 18h
	DEFB 15h
	DEFB 14h
	DEFB 00h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 01h
	DEFB 16h
	DEFB 16h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Fh
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 1Bh
	DEFB 18h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 00h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 1Bh
	DEFB 18h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 15h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 00h
	DEFB 10h
	DEFB 29h
	DEFB 1Ch
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 29h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 15h
	DEFB 03h
	DEFB 1Eh
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 01h
	DEFB 03h
	DEFB 00h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 15h
	DEFB 03h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 01h
	DEFB 03h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 2Bh
	DEFB 2Bh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 29h
	DEFB 1Eh
	DEFB 00h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 03h
	DEFB 00h
	DEFB 22h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 03h
	DEFB 03h
	DEFB 22h
	DEFB 00h
	DEFB 15h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 03h
	DEFB 22h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 03h
	DEFB 22h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 15h
	DEFB 29h
	DEFB 29h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 1Dh
	DEFB 1Dh
	DEFB 1Ch
	DEFB 00h
	DEFB 1Fh
	DEFB 21h
	DEFB 15h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 22h
	DEFB 21h
	DEFB 01h
	DEFB 00h
	DEFB 28h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 22h
	DEFB 21h
	DEFB 20h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 15h
	DEFB 22h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 22h
	DEFB 29h
	DEFB 15h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 10h
	DEFB 21h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 11h
	DEFB 11h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 0Fh
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 1Eh
	DEFB 1Eh
	DEFB 15h
	DEFB 1Eh
	DEFB 02h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 03h
	DEFB 02h
	DEFB 10h
	DEFB 03h
	DEFB 02h
	DEFB 10h
	DEFB 03h
	DEFB 10h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 1Bh
	DEFB 1Bh
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 1Fh
	DEFB 15h
	DEFB 1Fh
	DEFB 29h
	DEFB 29h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 10h
	DEFB 03h
	DEFB 01h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 0Dh
	DEFB 11h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 22h
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 02h
	DEFB 10h
	DEFB 03h
	DEFB 02h
	DEFB 10h
	DEFB 03h
	DEFB 02h
	DEFB 10h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 22h
	DEFB 10h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 29h
	DEFB 29h
	DEFB 1Fh
	DEFB 15h
	DEFB 1Fh
	DEFB 10h
	DEFB 0Dh
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 01h
	DEFB 02h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 11h
	DEFB 11h
	DEFB 11h
	DEFB 11h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 11h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 27h
	DEFB 02h
	DEFB 00h
	DEFB 20h
	DEFB 15h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 0Eh
	DEFB 01h
	DEFB 0Eh
	DEFB 0Eh
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 0Eh
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 21h
	DEFB 1Bh
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 03h
	DEFB 15h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 15h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 20h
	DEFB 15h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 15h
	DEFB 20h
	DEFB 22h
	DEFB 01h
	DEFB 00h
	DEFB 1Bh
	DEFB 1Bh
	DEFB 00h
	DEFB 00h
	DEFB 21h
	DEFB 02h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 03h
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 09h
	DEFB 00h
	DEFB 22h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 22h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 02h
	DEFB 02h
	DEFB 1Bh
	DEFB 00h
	DEFB 1Bh
	DEFB 13h
	DEFB 0Ah
	DEFB 2Ah
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 15h
	DEFB 20h
	DEFB 20h
	DEFB 11h
	DEFB 2Ah
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 13h
	DEFB 2Ah
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 13h
	DEFB 2Ah
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 15h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 15h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 00h
	DEFB 00h
	DEFB 09h
	DEFB 2Bh
	DEFB 01h
	DEFB 00h
	DEFB 18h
	DEFB 00h
	DEFB 14h
	DEFB 15h
	DEFB 14h
	DEFB 00h
	DEFB 14h
	DEFB 15h
	DEFB 00h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 21h
	DEFB 20h
	DEFB 2Bh
	DEFB 20h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 21h
	DEFB 21h
	DEFB 2Bh
	DEFB 05h
	DEFB 12h
	DEFB 10h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 01h
	DEFB 29h
	DEFB 29h
	DEFB 20h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 20h
	DEFB 01h
	DEFB 00h
	DEFB 20h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 1Bh
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 0Bh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 15h
	DEFB 1Eh
	DEFB 1Eh
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 01h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 20h
	DEFB 01h
	DEFB 20h
	DEFB 2Bh
	DEFB 20h
	DEFB 02h
	DEFB 00h
	DEFB 03h
	DEFB 0Ch
	DEFB 01h
	DEFB 13h
	DEFB 06h
	DEFB 12h
	DEFB 02h
	DEFB 00h
	DEFB 03h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 1Eh
	DEFB 1Eh
	DEFB 15h
	DEFB 1Eh
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 11h
	DEFB 01h
	DEFB 11h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 21h
	DEFB 1Dh
	DEFB 01h
	DEFB 1Bh
	DEFB 1Bh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 20h
	DEFB 20h
	DEFB 1Eh
	DEFB 15h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 22h
	DEFB 01h
	DEFB 19h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 29h
	DEFB 1Fh
	DEFB 29h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 29h
	DEFB 00h
	DEFB 11h
	DEFB 01h
	DEFB 11h
	DEFB 00h
	DEFB 22h
	DEFB 29h
	DEFB 29h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 22h
	DEFB 29h
	DEFB 0Dh
	DEFB 15h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 20h
	DEFB 00h
	DEFB 22h
	DEFB 29h
	DEFB 29h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 22h
	DEFB 29h
	DEFB 29h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 1Dh
	DEFB 29h
	DEFB 29h
	DEFB 1Fh
	DEFB 15h
	DEFB 1Fh
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 1Bh
	DEFB 01h
	DEFB 00h
	DEFB 21h
	DEFB 0Dh
	DEFB 29h
	DEFB 21h
	DEFB 15h
	DEFB 20h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 21h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 01h
	DEFB 00h
	DEFB 1Bh
	DEFB 1Bh
	DEFB 21h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 20h
	DEFB 15h
	DEFB 21h
	DEFB 29h
	DEFB 08h
	DEFB 1Dh
	DEFB 1Bh
	DEFB 1Bh
	DEFB 00h
	DEFB 01h
	DEFB 21h
	DEFB 29h
	DEFB 29h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 11h
	DEFB 01h
	DEFB 11h
	DEFB 11h
	DEFB 11h
	DEFB 11h
	DEFB 11h
	DEFB 11h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 15h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 0Eh
	DEFB 01h
	DEFB 0Eh
	DEFB 01h
	DEFB 0Eh
	DEFB 0Eh
	DEFB 0Eh
	DEFB 0Eh
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 0Ah
	DEFB 0Ah
	DEFB 0Ah
	DEFB 2Ah
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 02h
	DEFB 00h
	DEFB 0Eh
	DEFB 0Eh
	DEFB 0Eh
	DEFB 0Eh
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 03h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 13h
	DEFB 2Ah
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 1Bh
	DEFB 21h
	DEFB 13h
	DEFB 2Ah
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 13h
	DEFB 2Ah
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 13h
	DEFB 2Ah
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 13h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 15h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 0Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 15h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 09h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 15h
	DEFB 14h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 15h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 2Bh
	DEFB 2Bh
	DEFB 2Bh
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 20h
	DEFB 1Fh
	DEFB 20h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 21h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 21h
	DEFB 21h
	DEFB 1Dh
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 29h
	DEFB 2Bh
	DEFB 2Bh
	DEFB 01h
	DEFB 2Bh
	DEFB 2Bh
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 1Fh
	DEFB 20h
	DEFB 01h
	DEFB 20h
	DEFB 1Fh
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 29h
	DEFB 10h
	DEFB 10h
	DEFB 15h
	DEFB 29h
	DEFB 1Eh
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 10h
	DEFB 01h
	DEFB 29h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 1Dh
	DEFB 29h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 15h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 1Fh
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 10h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 29h
	DEFB 2Ah
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 1Bh
	DEFB 1Dh
	DEFB 1Ch
	DEFB 29h
	DEFB 2Ah
	DEFB 15h
	DEFB 2Ah
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 20h
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Eh
	DEFB 2Ah
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 20h
	DEFB 29h
	DEFB 21h
	DEFB 01h
	DEFB 22h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 01h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 1Dh
	DEFB 2Ah
	DEFB 20h
	DEFB 1Eh
	DEFB 1Eh
	DEFB 15h
	DEFB 02h
	DEFB 15h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 0Eh
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 01h
	DEFB 1Eh
	DEFB 2Ah
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 01h
	DEFB 2Ah
	DEFB 01h
	DEFB 09h
	DEFB 2Ah
	DEFB 20h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 20h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 1Bh
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 03h
	DEFB 20h
	DEFB 15h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 01h
	DEFB 1Bh
	DEFB 11h
	DEFB 11h
	DEFB 02h
	DEFB 1Bh
	DEFB 03h
	DEFB 00h
	DEFB 01h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 02h
	DEFB 15h
	DEFB 20h
	DEFB 15h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 20h
	DEFB 15h
	DEFB 2Ah
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 0Ah
	DEFB 0Ah
	DEFB 0Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 0Ah
	DEFB 11h
	DEFB 11h
	DEFB 2Ah
	DEFB 11h
	DEFB 01h
	DEFB 22h
	DEFB 01h
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 2Ah
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 01h
	DEFB 2Ah
	DEFB 15h
	DEFB 1Eh
	DEFB 2Ah
	DEFB 28h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 2Ah
	DEFB 01h
	DEFB 08h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 20h
	DEFB 20h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 11h
	DEFB 11h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 00h
	DEFB 1Fh
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 08h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 15h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 02h
	DEFB 00h
	DEFB 1Fh
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 15h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 00h
	DEFB 2Ah
	DEFB 01h
	DEFB 00h
	DEFB 09h
	DEFB 09h
	DEFB 09h
	DEFB 00h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 01h
	DEFB 00h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 01h
	DEFB 00h
	DEFB 09h
	DEFB 09h
	DEFB 09h
	DEFB 00h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 01h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 00h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 01h
	DEFB 00h
	DEFB 09h
	DEFB 09h
	DEFB 09h
	DEFB 00h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 15h
	DEFB 14h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 20h
	DEFB 15h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 17h
	DEFB 01h
	DEFB 00h
	DEFB 0Fh
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 15h
	DEFB 14h
	DEFB 00h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 0Eh
	DEFB 00h
	DEFB 03h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 10h
	DEFB 03h
	DEFB 03h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 03h
	DEFB 10h
	DEFB 10h
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 1Ch
	DEFB 28h
	DEFB 00h
	DEFB 03h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 1Eh
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 0Eh
	DEFB 0Eh
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 02h
	DEFB 10h
	DEFB 02h
	DEFB 15h
	DEFB 1Eh
	DEFB 1Eh
	DEFB 14h
	DEFB 15h
	DEFB 11h
	DEFB 11h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 1Eh
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 1Eh
	DEFB 15h
	DEFB 14h
	DEFB 0Eh
	DEFB 0Eh
	DEFB 0Eh
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 10h
	DEFB 10h
	DEFB 03h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 11h
	DEFB 11h
	DEFB 11h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 14h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 20h
	DEFB 20h
	DEFB 00h
	DEFB 14h
	DEFB 14h
	DEFB 29h
	DEFB 29h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 2Ah
	DEFB 2Ah
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 0Eh
	DEFB 0Eh
	DEFB 00h
	DEFB 22h
	DEFB 2Ah
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 10h
	DEFB 10h
	DEFB 03h
	DEFB 22h
	DEFB 2Ah
	DEFB 29h
	DEFB 21h
	DEFB 00h
	DEFB 11h
	DEFB 11h
	DEFB 00h
	DEFB 22h
	DEFB 2Ah
	DEFB 1Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 22h
	DEFB 2Ah
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 15h
	DEFB 14h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 00h
	DEFB 2Ah
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 11h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 2Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 2Ah
	DEFB 0Eh
	DEFB 20h
	DEFB 15h
	DEFB 20h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 2Ah
	DEFB 02h
	DEFB 00h
	DEFB 2Ah
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 20h
	DEFB 15h
	DEFB 2Ah
	DEFB 02h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 2Ah
	DEFB 02h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 2Ah
	DEFB 13h
	DEFB 19h
	DEFB 03h
	DEFB 01h
	DEFB 0Fh
	DEFB 21h
	DEFB 01h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 1Eh
	DEFB 20h
	DEFB 20h
	DEFB 1Eh
	DEFB 00h
	DEFB 01h
	DEFB 2Ah
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 1Eh
	DEFB 20h
	DEFB 20h
	DEFB 1Eh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 2Ah
	DEFB 28h
	DEFB 03h
	DEFB 02h
	DEFB 00h
	DEFB 03h
	DEFB 27h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 15h
	DEFB 1Fh
	DEFB 11h
	DEFB 15h
	DEFB 02h
	DEFB 11h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 28h
	DEFB 00h
	DEFB 01h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 11h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 02h
	DEFB 00h
	DEFB 27h
	DEFB 02h
	DEFB 01h
	DEFB 02h
	DEFB 27h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 11h
	DEFB 02h
	DEFB 01h
	DEFB 1Fh
	DEFB 11h
	DEFB 11h
	DEFB 1Fh
	DEFB 11h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 03h
	DEFB 22h
	DEFB 01h
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 03h
	DEFB 00h
	DEFB 20h
	DEFB 1Fh
	DEFB 20h
	DEFB 15h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 20h
	DEFB 00h
	DEFB 03h
	DEFB 03h
	DEFB 28h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 03h
	DEFB 20h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 1Fh
	DEFB 20h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 20h
	DEFB 1Fh
	DEFB 20h
	DEFB 00h
	DEFB 1Ah
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 20h
	DEFB 20h
	DEFB 1Fh
	DEFB 20h
	DEFB 20h
	DEFB 28h
	DEFB 00h
	DEFB 03h
	DEFB 0Fh
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 27h
	DEFB 20h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 20h
	DEFB 1Fh
	DEFB 15h
	DEFB 1Fh
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 19h
	DEFB 01h
	DEFB 1Dh
	DEFB 21h
	DEFB 20h
	DEFB 1Fh
	DEFB 20h
	DEFB 1Fh
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 28h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 1Dh
	DEFB 21h
	DEFB 1Fh
	DEFB 20h
	DEFB 1Fh
	DEFB 20h
	DEFB 1Fh
	DEFB 15h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 09h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 20h
	DEFB 20h
	DEFB 1Fh
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 0Dh
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 1Eh
	DEFB 14h
	DEFB 14h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 10h
	DEFB 0Dh
	DEFB 29h
	DEFB 21h
	DEFB 1Eh
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 0Eh
	DEFB 0Eh
	DEFB 0Eh
	DEFB 10h
	DEFB 29h
	DEFB 29h
	DEFB 21h
	DEFB 02h
	DEFB 00h
	DEFB 20h
	DEFB 20h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 14h
	DEFB 1Eh
	DEFB 15h
	DEFB 1Eh
	DEFB 14h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 0Eh
	DEFB 00h
	DEFB 14h
	DEFB 1Eh
	DEFB 15h
	DEFB 1Eh
	DEFB 14h
	DEFB 02h
	DEFB 10h
	DEFB 03h
	DEFB 02h
	DEFB 21h
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 10h
	DEFB 03h
	DEFB 02h
	DEFB 21h
	DEFB 01h
	DEFB 22h
	DEFB 15h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Fh
	DEFB 02h
	DEFB 00h
	DEFB 14h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 14h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 0Eh
	DEFB 0Eh
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 11h
	DEFB 03h
	DEFB 02h
	DEFB 05h
	DEFB 06h
	DEFB 03h
	DEFB 02h
	DEFB 11h
	DEFB 00h
	DEFB 03h
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 1Bh
	DEFB 02h
	DEFB 00h
	DEFB 1Bh
	DEFB 01h
	DEFB 03h
	DEFB 2Ah
	DEFB 14h
	DEFB 1Eh
	DEFB 15h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 01h
	DEFB 1Bh
	DEFB 0Ah
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 1Bh
	DEFB 00h
	DEFB 1Eh
	DEFB 11h
	DEFB 2Ah
	DEFB 02h
	DEFB 11h
	DEFB 01h
	DEFB 1Eh
	DEFB 15h
	DEFB 00h
	DEFB 00h
	DEFB 2Ah
	DEFB 02h
	DEFB 00h
	DEFB 21h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 2Ah
	DEFB 02h
	DEFB 00h
	DEFB 1Fh
	DEFB 15h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 11h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 15h
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 0Eh
	DEFB 0Eh
	DEFB 00h
	DEFB 01h
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 1Dh
	DEFB 03h
	DEFB 01h
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 20h
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 19h
	DEFB 00h
	DEFB 15h
	DEFB 1Fh
	DEFB 20h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 1Fh
	DEFB 15h
	DEFB 1Fh
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 1Fh
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 1Fh
	DEFB 00h
	DEFB 0Fh
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 15h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 20h
	DEFB 15h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 03h
	DEFB 03h
	DEFB 00h
	DEFB 1Fh
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 1Fh
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 1Dh
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 15h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 15h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 11h
	DEFB 1Fh
	DEFB 11h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 1Fh
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 1Fh
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 1Fh
	DEFB 11h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 11h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 10h
	DEFB 04h
	DEFB 04h
	DEFB 21h
	DEFB 02h
	DEFB 0Eh
	DEFB 0Eh
	DEFB 0Eh
	DEFB 10h
	DEFB 04h
	DEFB 04h
	DEFB 21h
	DEFB 02h
	DEFB 20h
	DEFB 1Eh
	DEFB 15h
	DEFB 10h
	DEFB 04h
	DEFB 04h
	DEFB 21h
	DEFB 02h
	DEFB 1Dh
	DEFB 00h
	DEFB 01h
	DEFB 0Ah
	DEFB 04h
	DEFB 04h
	DEFB 21h
	DEFB 20h
	DEFB 20h
	DEFB 1Eh
	DEFB 20h
	DEFB 0Ah
	DEFB 0Dh
	DEFB 04h
	DEFB 21h
	DEFB 02h
	DEFB 08h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 14h
	DEFB 14h
	DEFB 15h
	DEFB 14h
	DEFB 0Eh
	DEFB 21h
	DEFB 01h
	DEFB 22h
	DEFB 01h
	DEFB 0Eh
	DEFB 16h
	DEFB 16h
	DEFB 20h
	DEFB 21h
	DEFB 01h
	DEFB 22h
	DEFB 01h
	DEFB 00h
	DEFB 0Eh
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 22h
	DEFB 01h
	DEFB 02h
	DEFB 0Dh
	DEFB 03h
	DEFB 20h
	DEFB 14h
	DEFB 20h
	DEFB 14h
	DEFB 20h
	DEFB 20h
	DEFB 1Eh
	DEFB 14h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 16h
	DEFB 16h
	DEFB 0Eh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 0Eh
	DEFB 20h
	DEFB 00h
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 14h
	DEFB 00h
	DEFB 1Ch
	DEFB 18h
	DEFB 00h
	DEFB 00h
	DEFB 0Fh
	DEFB 02h
	DEFB 19h
	DEFB 14h
	DEFB 14h
	DEFB 11h
	DEFB 00h
	DEFB 0Eh
	DEFB 1Eh
	DEFB 15h
	DEFB 14h
	DEFB 00h
	DEFB 1Ah
	DEFB 03h
	DEFB 02h
	DEFB 0Dh
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 20h
	DEFB 20h
	DEFB 01h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 1Dh
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 2Ah
	DEFB 02h
	DEFB 20h
	DEFB 1Eh
	DEFB 01h
	DEFB 1Bh
	DEFB 20h
	DEFB 15h
	DEFB 2Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 1Eh
	DEFB 03h
	DEFB 01h
	DEFB 2Ah
	DEFB 14h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 11h
	DEFB 01h
	DEFB 11h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 27h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 00h
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 00h
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 00h
	DEFB 19h
	DEFB 01h
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 02h
	DEFB 20h
	DEFB 15h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 2Ah
	DEFB 1Ah
	DEFB 03h
	DEFB 01h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 15h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 1Fh
	DEFB 01h
	DEFB 00h
	DEFB 28h
	DEFB 03h
	DEFB 02h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 20h
	DEFB 20h
	DEFB 1Fh
	DEFB 20h
	DEFB 1Fh
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 11h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 15h
	DEFB 20h
	DEFB 20h
	DEFB 1Fh
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 03h
	DEFB 02h
	DEFB 00h
	DEFB 22h
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 1Fh
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 11h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 00h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 01h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 19h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 1Ch
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 15h
	DEFB 20h
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 28h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 20h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 20h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 11h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 11h
	DEFB 1Fh
	DEFB 01h
	DEFB 00h
	DEFB 11h
	DEFB 1Fh
	DEFB 15h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 00h
	DEFB 16h
	DEFB 17h
	DEFB 20h
	DEFB 20h
	DEFB 02h
	DEFB 00h
	DEFB 20h
	DEFB 0Eh
	DEFB 20h
	DEFB 17h
	DEFB 1Ch
	DEFB 00h
	DEFB 02h
	DEFB 19h
	DEFB 02h
	DEFB 0Dh
	DEFB 03h
	DEFB 00h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 1Eh
	DEFB 14h
	DEFB 17h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 16h
	DEFB 17h
	DEFB 20h
	DEFB 20h
	DEFB 00h
	DEFB 03h
	DEFB 1Ch
	DEFB 1Bh
	DEFB 00h
	DEFB 17h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 1Eh
	DEFB 1Eh
	DEFB 20h
	DEFB 20h
	DEFB 0Eh
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 0Eh
	DEFB 00h
	DEFB 02h
	DEFB 0Dh
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 0Dh
	DEFB 03h
	DEFB 14h
	DEFB 1Eh
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 14h
	DEFB 1Eh
	DEFB 14h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 1Eh
	DEFB 15h
	DEFB 1Eh
	DEFB 14h
	DEFB 15h
	DEFB 14h
	DEFB 20h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 0Eh
	DEFB 00h
	DEFB 01h
	DEFB 22h
	DEFB 00h
	DEFB 0Eh
	DEFB 00h
	DEFB 02h
	DEFB 0Dh
	DEFB 03h
	DEFB 01h
	DEFB 22h
	DEFB 02h
	DEFB 05h
	DEFB 14h
	DEFB 14h
	DEFB 1Eh
	DEFB 14h
	DEFB 20h
	DEFB 14h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 00h
	DEFB 0Eh
	DEFB 00h
	DEFB 00h
	DEFB 0Eh
	DEFB 22h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 02h
	DEFB 05h
	DEFB 03h
	DEFB 02h
	DEFB 06h
	DEFB 03h
	DEFB 1Dh
	DEFB 2Ah
	DEFB 14h
	DEFB 1Eh
	DEFB 14h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 00h
	DEFB 00h
	DEFB 0Eh
	DEFB 0Eh
	DEFB 00h
	DEFB 21h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 05h
	DEFB 06h
	DEFB 03h
	DEFB 21h
	DEFB 0Fh
	DEFB 00h
	DEFB 14h
	DEFB 1Fh
	DEFB 1Eh
	DEFB 1Eh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 01h
	DEFB 2Ah
	DEFB 2Ah
	DEFB 2Ah
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 1Ch
	DEFB 03h
	DEFB 1Fh
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 20h
	DEFB 1Fh
	DEFB 20h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 1Fh
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 02h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 03h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 03h
	DEFB 00h
	DEFB 1Fh
	DEFB 20h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 1Ch
	DEFB 02h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 20h
	DEFB 20h
	DEFB 11h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 03h
	DEFB 02h
	DEFB 00h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 28h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 20h
	DEFB 00h
	DEFB 03h
	DEFB 20h
	DEFB 15h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 20h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 20h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 00h
	DEFB 11h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 2Bh
	DEFB 02h
	DEFB 00h
	DEFB 11h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 00h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 20h
	DEFB 1Fh
	DEFB 20h
	DEFB 15h
	DEFB 20h
	DEFB 11h
	DEFB 1Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 27h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 01h
	DEFB 1Fh
	DEFB 1Fh
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 2Ah
	DEFB 03h
	DEFB 01h
	DEFB 02h
	DEFB 02h
	DEFB 19h
	DEFB 01h
	DEFB 08h
	DEFB 2Ah
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
	DEFB 1Fh
.LABEL.__LABEL912:
	DEFW 0002h
	DEFW 0006h
	DEFW 0008h
	DEFB 01h
_posenem:
	DEFW .LABEL.__LABEL913
_posenem.__DATA__.__PTR__:
	DEFW _posenem.__DATA__
_posenem.__DATA__:
	DEFB 00h
	DEFB 00h
	DEFB 12h
	DEFB 09h
	DEFB 12h
	DEFB 04h
	DEFB 15h
	DEFB 0Dh
	DEFB 12h
	DEFB 04h
	DEFB 09h
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 12h
	DEFB 07h
	DEFB 0Fh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 0Ch
	DEFB 00h
	DEFB 00h
	DEFB 12h
	DEFB 0Ch
	DEFB 0Ch
	DEFB 09h
	DEFB 09h
	DEFB 09h
	DEFB 0Ch
	DEFB 0Ch
	DEFB 03h
	DEFB 0Dh
	DEFB 09h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 0Fh
	DEFB 0Ch
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Fh
	DEFB 07h
	DEFB 00h
	DEFB 00h
	DEFB 0Fh
	DEFB 07h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 0Dh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Fh
	DEFB 0Ch
	DEFB 0Fh
	DEFB 0Ch
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 04h
	DEFB 00h
	DEFB 00h
	DEFB 09h
	DEFB 0Dh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 06h
	DEFB 0Dh
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 06h
	DEFB 09h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 0Ch
	DEFB 03h
	DEFB 0Ch
	DEFB 12h
	DEFB 07h
	DEFB 03h
	DEFB 0Dh
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 09h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 0Dh
	DEFB 12h
	DEFB 06h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 0Fh
	DEFB 09h
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 01h
	DEFB 00h
	DEFB 0Ch
	DEFB 00h
	DEFB 00h
	DEFB 09h
	DEFB 0Ah
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 09h
	DEFB 0Ch
	DEFB 00h
	DEFB 00h
	DEFB 0Ch
	DEFB 0Ch
	DEFB 03h
	DEFB 0Ch
	DEFB 12h
	DEFB 06h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 06h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 12h
	DEFB 09h
	DEFB 06h
	DEFB 09h
	DEFB 06h
	DEFB 09h
	DEFB 0Ch
	DEFB 03h
	DEFB 12h
	DEFB 09h
	DEFB 00h
	DEFB 00h
.LABEL.__LABEL913:
	DEFW 0001h
	DEFW 0002h
	DEFB 01h
_tablaenem:
	DEFW .LABEL.__LABEL914
_tablaenem.__DATA__.__PTR__:
	DEFW _tablaenem.__DATA__
_tablaenem.__DATA__:
	DEFB 00h
	DEFB 01h
	DEFB 03h
	DEFB 03h
	DEFB 03h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 03h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 03h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 02h
	DEFB 02h
	DEFB 02h
	DEFB 00h
.LABEL.__LABEL914:
	DEFW 0000h
	DEFB 01h
_tablaenemtmp:
	DEFW .LABEL.__LABEL915
_tablaenemtmp.__DATA__.__PTR__:
	DEFW _tablaenemtmp.__DATA__
_tablaenemtmp.__DATA__:
	DEFB 00h
	DEFB 01h
	DEFB 03h
	DEFB 03h
	DEFB 03h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 02h
	DEFB 02h
	DEFB 01h
	DEFB 03h
	DEFB 03h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 03h
	DEFB 03h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 00h
	DEFB 02h
	DEFB 00h
	DEFB 03h
	DEFB 01h
	DEFB 00h
	DEFB 03h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 01h
	DEFB 01h
	DEFB 02h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 00h
	DEFB 01h
	DEFB 00h
	DEFB 02h
	DEFB 02h
	DEFB 02h
	DEFB 02h
	DEFB 02h
	DEFB 00h
.LABEL.__LABEL915:
	DEFW 0000h
	DEFB 01h
.core.ZXBASIC_USER_DATA_END:
.core.__MAIN_PROGRAM__:
	ld hl, 23675
	ld (_iniUDGS), hl
	ld hl, 0
	ld (_ani), hl
	ld hl, 0
	ld (_anisube), hl
	ld hl, 0
	ld (_anienem), hl
	ld hl, 200
	ld (_topcontestamina), hl
	xor a
	ld (_keytemp), a
	ld a, 80
	ld (_pant), a
	ld a, 1
	ld (_nivel), a
	xor a
	ld (_souls), a
	xor a
	ld (_soulstmp), a
	xor a
	ld (_pantsouls), a
	xor a
	ld (_enemigo), a
	xor a
	ld (_contani), a
	ld a, 12
	ld (_topecontani), a
	xor a
	ld (_contanienem), a
	ld a, 10
	ld (_topecontanienem), a
	xor a
	ld (_ataca), a
	ld a, 1
	ld (_parado), a
	xor a
	ld (_sube), a
	xor a
	ld (_escudo), a
	xor a
	ld (_magiamago), a
	xor a
	ld (_atacaenem), a
	xor a
	ld (_retirada), a
	ld a, 6
	ld (_topenergia), a
	ld (_energia), a
	xor a
	ld (_magia), a
	ld a, 12
	ld (_estamina), a
	xor a
	ld (_llaves), a
	ld a, 12
	ld (_energiaenem), a
	ld a, 253
	ld (_energiatmp), a
	ld a, 255
	ld (_dir), a
	ld a, 255
	ld (_direnem), a
	ld hl, 14000
	push hl
	call _mipause
	call _intro
	ld a, 6
	ld (_x), a
	ld a, 12
	ld (_y), a
	ld a, (_x)
	ld (_xh), a
	ld a, (_y)
	ld (_yh), a
	ld a, (_pant)
	ld (_panth), a
.LABEL._1:
	ld a, (_x)
	ld (_xcur), a
	ld a, (_y)
	ld (_ycur), a
	ld a, (_topenergia)
	ld (_energia), a
	call _pantalla
	ld a, 7
	call .core.INK
	call .core.COPY_ATTR
	ld a, (_dir)
	dec a
	jp nz, .LABEL.__LABEL1
	ld hl, (_ani)
	push hl
	ld hl, _caballero3
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, (_y)
	push af
	ld a, (_x)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL2
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_y)
	inc a
	push af
	ld a, (_x)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL3
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_y)
	add a, 2
	push af
	ld a, (_x)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL4
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL1:
	ld a, (_dir)
	sub 255
	jp nz, .LABEL._10
	ld hl, (_ani)
	ld de, 72
	add hl, de
	push hl
	ld hl, _caballero3
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, (_y)
	push af
	ld a, (_x)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL2
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_y)
	inc a
	push af
	ld a, (_x)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL3
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_y)
	add a, 2
	push af
	ld a, (_x)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL4
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL._10:
	ld a, (_enemigo)
	dec a
	jp nz, .LABEL.__LABEL7
	call _enemesq
	jp .LABEL.__LABEL8
.LABEL.__LABEL7:
	ld hl, 6
	push hl
	call _mipause
.LABEL.__LABEL8:
	call _cursor
	call _prota
	ld a, (_energia)
	or a
	jp nz, .LABEL.__LABEL10
	call _muerte
	jp .LABEL._1
.LABEL.__LABEL10:
	ld de, (_topcontestamina)
	ld hl, (_contestamina)
	or a
	sbc hl, de
	ccf
	jp nc, .LABEL.__LABEL12
	ld hl, 0
	ld (_contestamina), hl
	xor a
	ld hl, (_estamina - 1)
	cp h
	jp nc, .LABEL.__LABEL12
	ld a, 21
	push af
	ld a, (_estamina)
	dec a
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL15
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld hl, _estamina
	dec (hl)
	ld hl, _topecontani
	inc (hl)
.LABEL.__LABEL12:
	ld hl, (_pantsouls - 1)
	ld a, (_pant)
	sub h
	sub 1
	sbc a, a
	push af
	xor a
	ld hl, (_soulstmp - 1)
	cp h
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL760
	ld a, h
.LABEL.__LABEL760:
	or a
	jp z, .LABEL.__LABEL17
	ld hl, (_souls - 1)
	ld a, (_soulstmp)
	add a, h
	ld (_souls), a
	xor a
	ld (_soulstmp), a
	call _pintaener
	ld hl, 53481
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 16825
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 7
	call .core.BORDER
	ld hl, 1642
	push hl
	ld hl, 12
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 7
	call .core.BORDER
	ld hl, 1642
	push hl
	ld hl, 12
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 7
	call .core.BORDER
	ld hl, 1642
	push hl
	ld hl, 12
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 7
	call .core.BORDER
	ld hl, 2949
	push hl
	ld hl, 6
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 7
	call .core.BORDER
	ld hl, 5279
	push hl
	ld hl, 3
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 7
	call .core.BORDER
	ld hl, 5279
	push hl
	ld hl, 3
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
.LABEL.__LABEL17:
	ld a, (_souls)
	sub 17
	ccf
	jp nc, .LABEL.__LABEL19
	xor a
	ld (_n), a
	jp .LABEL.__LABEL20
.LABEL.__LABEL23:
	ld a, (_n)
	push af
	ld a, 30
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL25
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, 53481
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 16825
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
	xor a
	ld (_souls), a
	ld hl, _n
	inc (hl)
.LABEL.__LABEL20:
	ld a, 16
	ld hl, (_n - 1)
	cp h
	jp nc, .LABEL.__LABEL23
	ld hl, _nivel
	inc (hl)
	ld hl, (_topcontestamina)
	ld de, 10
	add hl, de
	ld (_topcontestamina), hl
	ld a, 2
	ld hl, (_topecontani - 1)
	cp h
	jp nc, .LABEL.__LABEL27
	ld hl, _topecontani
	dec (hl)
.LABEL.__LABEL27:
	ld a, (_topenergia)
	cp 12
	jp nc, .LABEL.__LABEL29
	ld hl, _topenergia
	inc (hl)
.LABEL.__LABEL29:
	ld a, (_topenergia)
	ld (_energia), a
	call _pintaener
	ld hl, 2077
	push hl
	ld hl, 9
	call .core.__BEEPER
	ld hl, 1297
	push hl
	ld hl, 15
	call .core.__BEEPER
.LABEL.__LABEL19:
	ld a, (_pant)
	sub 9
	jp nz, .LABEL.__LABEL31
	call _jefe
	ld a, (_energiajefe)
	or a
	jp nz, .LABEL.__LABEL31
	call _fin
.LABEL.__LABEL31:
	jp .LABEL._10
_intro:
	xor a
	call .core.BORDER
	xor a
	call .core.PAPER
	call .core.COPY_ATTR
	call .core.CLS
	ld hl, 1000
	push hl
	call _mipause
	ld a, 7
	call .core.BORDER
	ld a, 7
	call .core.PAPER
	call .core.COPY_ATTR
	call .core.CLS
	ld hl, 100
	push hl
	call _mipause
	xor a
	call .core.BORDER
	xor a
	call .core.PAPER
	call .core.COPY_ATTR
	call .core.CLS
	ld hl, _logo.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 10
	push af
	ld a, 12
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL34
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, 11
	push af
	ld a, 12
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL35
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, 12
	push af
	ld a, 12
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL36
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, 1642
	push hl
	ld hl, 6
	call .core.__BEEPER
	ld hl, 1460
	push hl
	ld hl, 6
	call .core.__BEEPER
	ld hl, 1376
	push hl
	ld hl, 7
	call .core.__BEEPER
	ld hl, 1297
	push hl
	ld hl, 7
	call .core.__BEEPER
	ld hl, 1223
	push hl
	ld hl, 8
	call .core.__BEEPER
	ld hl, 5000
	push hl
	call _mipause
	ld a, 7
	call .core.BORDER
	ld a, 7
	call .core.PAPER
	call .core.COPY_ATTR
	call .core.CLS
	ld hl, 100
	push hl
	call _mipause
	xor a
	call .core.BORDER
	xor a
	call .core.PAPER
	call .core.COPY_ATTR
	call .core.CLS
	ld hl, _titulo.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 11
	push af
	ld a, 11
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL37
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, 12
	push af
	ld a, 11
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL38
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, 5000
	push hl
	call _mipause
	ld a, 7
	call .core.BORDER
	ld hl, 100
	push hl
	call _mipause
	xor a
	call .core.BORDER
	ld hl, 53481
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 16825
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
_intro__leave:
	ret
_prota:
	ld a, (_cae)
	sub 1
	sbc a, a
	push af
	ld a, (_sube)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL761
	ld a, h
.LABEL.__LABEL761:
	push af
	ld a, (_x)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	cp 20
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL762
	ld a, h
.LABEL.__LABEL762:
	push af
	ld a, (_x)
	inc a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	cp 20
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL763
	ld a, h
.LABEL.__LABEL763:
	push af
	ld a, (_x)
	add a, 2
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	cp 20
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL764
	ld a, h
.LABEL.__LABEL764:
	or a
	jp z, .LABEL.__LABEL40
	ld a, 1
	ld (_cae), a
.LABEL.__LABEL40:
	ld a, (_cae)
	dec a
	jp nz, .LABEL.__LABEL42
	ld a, 3
	push af
	ld a, (_y)
	push af
	ld a, (_x)
	push af
	call _borraprota
	ld hl, _y
	inc (hl)
	ld a, (_y)
	sub 15
	jp nz, .LABEL.__LABEL44
	xor a
	ld (_y), a
	ld (_ycur), a
	ld a, (_pant)
	add a, 10
	ld (_pant), a
	call _pantalla
.LABEL.__LABEL44:
	ld a, 7
	call .core.INK
	call .core.COPY_ATTR
	ld a, (_dir)
	dec a
	jp nz, .LABEL.__LABEL46
	ld hl, _caballero3.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL46:
	ld a, (_dir)
	sub 255
	jp nz, .LABEL.__LABEL48
	ld hl, _caballero3.__DATA__
	ld de, 72
	add hl, de
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL48:
	call _imprime
	ld a, (_x)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 20
	ccf
	sbc a, a
	push af
	ld a, (_x)
	inc a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 20
	ccf
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL765
	ld a, h
.LABEL.__LABEL765:
	push af
	ld a, (_x)
	add a, 2
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 20
	ccf
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL766
	ld a, h
.LABEL.__LABEL766:
	or a
	jp z, .LABEL.__LABEL50
	xor a
	ld (_cae), a
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
.LABEL.__LABEL50:
	call _cursor
.LABEL.__LABEL42:
	ld a, (_ataca)
	or a
	jp nz, .LABEL.__LABEL52
	ld bc, 57342
	in a, (c)
	ld (_keytemp), a
	sub 254
	sub 1
	sbc a, a
	ld d, a
	ld a, (_keytemp)
	sub 190
	sub 1
	sbc a, a
	or d
	push af
	call .core.INKEY
	ld de, .LABEL.__LABEL53
	ld a, 1
	call .core.__STREQ
	pop de
	or d
	push af
	ld a, (_cae)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL767
	ld a, h
.LABEL.__LABEL767:
	push af
	ld a, (_sube)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL768
	ld a, h
.LABEL.__LABEL768:
	or a
	jp z, .LABEL.__LABEL54
	ld hl, _contani
	inc (hl)
	ld hl, (_contestamina)
	inc hl
	ld (_contestamina), hl
	ld a, 1
	ld (_dir), a
	xor a
	ld (_parado), a
	ld a, (_x)
	sub 21
	jp nz, .LABEL.__LABEL57
	xor a
	ld (_x), a
	ld (_xcur), a
	ld hl, _pant
	inc (hl)
	call _pantalla
	ld hl, (_ani)
	push hl
	ld hl, _caballero
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime
.LABEL.__LABEL57:
	call .core.COPY_ATTR
	ld a, (_x)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 8
	jp nz, .LABEL.__LABEL59
	ld a, (_x)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld (hl), 0
	ld hl, _llaves
	inc (hl)
	call _pintaener
	ld hl, 2949
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 265
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	add a, 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	add a, 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
.LABEL.__LABEL59:
	ld a, (_x)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 38
	jp nz, .LABEL.__LABEL62
	ld a, 1
	ld (_magiamago), a
	ld a, (_magia)
	or a
	jp nz, .LABEL.__LABEL64
	ld a, (_magia)
	add a, 3
	ld (_magia), a
.LABEL.__LABEL64:
	call _pintaener
	ld a, 5
	call .core.BORDER
	ld hl, 265
	push hl
	ld hl, 110
	call .core.__BEEPER
	ld a, 1
	call .core.BORDER
	ld hl, 2949
	push hl
	ld hl, 10
	call .core.__BEEPER
	xor a
	call .core.BORDER
.LABEL.__LABEL62:
	ld a, (_magia)
	cp 12
	jp nc, .LABEL.__LABEL66
	ld a, (_x)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 9
	jp nz, .LABEL.__LABEL66
	ld a, (_x)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld (hl), 0
	ld hl, _magia
	inc (hl)
	call _pintaener
	ld hl, 2949
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 265
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	add a, 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	add a, 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
.LABEL.__LABEL66:
	ld a, (_x)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 25
	sub 1
	sbc a, a
	push af
	xor a
	ld hl, (_llaves - 1)
	cp h
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL769
	ld a, h
.LABEL.__LABEL769:
	or a
	jp z, .LABEL.__LABEL70
	ld a, (_x)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld (hl), 5
	ld a, 5
	ld (_tile), a
	call _lista
	ld a, (_y)
	push af
	ld a, (_x)
	add a, 3
	call .core.PRINT_AT
	ld a, (_c1)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL71
	xor a
	call .core.__PRINTSTR
	ld a, (_c2)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	ld a, (_c3)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL73
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_y)
	inc a
	push af
	ld a, (_x)
	add a, 3
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_y)
	add a, 2
	push af
	ld a, (_x)
	add a, 3
	call .core.PRINT_AT
	ld a, (_c7)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL77
	xor a
	call .core.__PRINTSTR
	ld a, (_c8)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL78
	xor a
	call .core.__PRINTSTR
	ld a, (_c9)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL79
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, 1642
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 908
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 497
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, _llaves
	dec (hl)
	call _pintaener
.LABEL.__LABEL70:
	ld hl, (_topecontani - 1)
	ld a, (_contani)
	sub h
	ccf
	sbc a, a
	push af
	ld a, (_x)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	cp 20
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL770
	ld a, h
.LABEL.__LABEL770:
	or a
	jp z, .LABEL.__LABEL81
	xor a
	ld (_contani), a
	ld hl, (_ani)
	ld de, 72
	add hl, de
	ld (_ani), hl
	ld a, 1
	push af
	ld a, (_y)
	push af
	ld a, (_x)
	push af
	call _borraprota
	ld de, 432
	ld hl, (_ani)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL83
	ld hl, 0
	ld (_ani), hl
.LABEL.__LABEL83:
	ld de, 216
	ld hl, (_ani)
	call .core.__EQ16
	push af
	ld de, 0
	ld hl, (_ani)
	call .core.__EQ16
	pop de
	or d
	jp z, .LABEL.__LABEL85
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
.LABEL.__LABEL85:
	ld a, (_enemigo)
	dec a
	jp nz, .LABEL.__LABEL86
	ld a, (_x)
	add a, 3
	ld h, a
	ld a, (_xesq)
	sub h
	jp z, .LABEL.__LABEL88
	ld hl, _x
	inc (hl)
	jp .LABEL.__LABEL89
.LABEL.__LABEL88:
	ld a, (_tipo)
	dec a
	jp nz, .LABEL.__LABEL91
	ld hl, (_yesq - 1)
	ld a, (_y)
	sub h
	jp z, .LABEL.__LABEL92
	ld hl, _x
	inc (hl)
	jp .LABEL.__LABEL91
.LABEL.__LABEL92:
	ld a, (_x)
	add a, 3
	ld h, a
	ld a, (_xesq)
	sub h
	jp z, .LABEL.__LABEL91
	ld hl, _x
	inc (hl)
.LABEL.__LABEL91:
	ld a, (_tipo)
	sub 2
	jp nz, .LABEL.__LABEL97
	ld a, (_yesq)
	add a, 3
	ld h, a
	ld a, (_y)
	sub h
	jp z, .LABEL.__LABEL98
	ld hl, _x
	inc (hl)
	jp .LABEL.__LABEL97
.LABEL.__LABEL98:
	ld a, (_x)
	add a, 3
	ld h, a
	ld a, (_xesq)
	sub h
	jp z, .LABEL.__LABEL97
	ld hl, _x
	inc (hl)
.LABEL.__LABEL97:
	ld a, (_tipo)
	sub 3
	jp nz, .LABEL.__LABEL89
	ld a, (_yesq)
	dec a
	ld h, a
	ld a, (_y)
	sub h
	jp z, .LABEL.__LABEL104
	ld hl, _x
	inc (hl)
	jp .LABEL.__LABEL89
.LABEL.__LABEL104:
	ld a, (_x)
	add a, 3
	ld h, a
	ld a, (_xesq)
	sub h
	jp z, .LABEL.__LABEL89
	ld hl, _x
	inc (hl)
.LABEL.__LABEL89:
	jp .LABEL.__LABEL87
.LABEL.__LABEL86:
	ld hl, _x
	inc (hl)
.LABEL.__LABEL87:
	ld hl, (_ani)
	push hl
	ld hl, _caballero
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime
.LABEL.__LABEL81:
	jp .LABEL.__LABEL52
.LABEL.__LABEL54:
	call .core.COPY_ATTR
	ld bc, 57342
	in a, (c)
	ld (_keytemp), a
	sub 253
	sub 1
	sbc a, a
	ld d, a
	ld a, (_keytemp)
	sub 189
	sub 1
	sbc a, a
	or d
	push af
	call .core.INKEY
	ld de, .LABEL.__LABEL108
	ld a, 1
	call .core.__STREQ
	pop de
	or d
	push af
	ld a, (_cae)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL771
	ld a, h
.LABEL.__LABEL771:
	push af
	ld a, (_sube)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL772
	ld a, h
.LABEL.__LABEL772:
	or a
	jp z, .LABEL.__LABEL109
	ld hl, _contani
	inc (hl)
	ld hl, (_contestamina)
	inc hl
	ld (_contestamina), hl
	ld a, 255
	ld (_dir), a
	xor a
	ld (_parado), a
	ld a, (_x)
	or a
	jp nz, .LABEL.__LABEL112
	ld a, 21
	ld (_x), a
	ld (_xcur), a
	ld hl, _pant
	dec (hl)
	call _pantalla
	ld hl, (_ani)
	push hl
	ld hl, _caballero2
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime
.LABEL.__LABEL112:
	call .core.COPY_ATTR
	ld a, (_x)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 8
	jp nz, .LABEL.__LABEL114
	ld a, (_x)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld (hl), 0
	ld hl, _llaves
	inc (hl)
	call _pintaener
	ld hl, 2949
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 265
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	sub 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	sub 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
.LABEL.__LABEL114:
	ld a, (_magia)
	cp 12
	jp nc, .LABEL.__LABEL116
	ld a, (_x)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 9
	jp nz, .LABEL.__LABEL116
	ld a, (_x)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld (hl), 0
	ld hl, _magia
	inc (hl)
	call _pintaener
	ld hl, 2949
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 265
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	sub 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	sub 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
.LABEL.__LABEL116:
	ld a, (_x)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 26
	sub 1
	sbc a, a
	push af
	xor a
	ld hl, (_llaves - 1)
	cp h
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL773
	ld a, h
.LABEL.__LABEL773:
	or a
	jp z, .LABEL.__LABEL120
	ld a, (_x)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld (hl), 6
	ld a, 6
	ld (_tile), a
	call _lista
	ld a, (_y)
	push af
	ld a, (_x)
	sub 3
	call .core.PRINT_AT
	ld a, (_c1)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL71
	xor a
	call .core.__PRINTSTR
	ld a, (_c2)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	ld a, (_c3)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL73
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_y)
	inc a
	push af
	ld a, (_x)
	sub 3
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_y)
	add a, 2
	push af
	ld a, (_x)
	sub 3
	call .core.PRINT_AT
	ld a, (_c7)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL77
	xor a
	call .core.__PRINTSTR
	ld a, (_c8)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL78
	xor a
	call .core.__PRINTSTR
	ld a, (_c9)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL79
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, 1642
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 908
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 497
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, _llaves
	dec (hl)
	call _pintaener
.LABEL.__LABEL120:
	ld hl, (_topecontani - 1)
	ld a, (_contani)
	sub h
	ccf
	sbc a, a
	push af
	ld a, (_x)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	cp 20
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL774
	ld a, h
.LABEL.__LABEL774:
	or a
	jp z, .LABEL.__LABEL122
	xor a
	ld (_contani), a
	ld hl, (_ani)
	ld de, 72
	add hl, de
	ld (_ani), hl
	ld a, 2
	push af
	ld a, (_y)
	push af
	ld a, (_x)
	push af
	call _borraprota
	ld de, 432
	ld hl, (_ani)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL124
	ld hl, 0
	ld (_ani), hl
.LABEL.__LABEL124:
	ld de, 216
	ld hl, (_ani)
	call .core.__EQ16
	push af
	ld de, 0
	ld hl, (_ani)
	call .core.__EQ16
	pop de
	or d
	jp z, .LABEL.__LABEL126
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
.LABEL.__LABEL126:
	ld a, (_enemigo)
	or a
	jp nz, .LABEL.__LABEL127
	ld hl, _x
	dec (hl)
	jp .LABEL.__LABEL128
.LABEL.__LABEL127:
	ld a, (_tipo)
	dec a
	jp nz, .LABEL.__LABEL130
	ld hl, (_yesq - 1)
	ld a, (_y)
	sub h
	jp z, .LABEL.__LABEL131
	ld hl, _x
	dec (hl)
	jp .LABEL.__LABEL130
.LABEL.__LABEL131:
	ld a, (_xesq)
	add a, 3
	ld hl, (_x - 1)
	sub h
	jp z, .LABEL.__LABEL130
	ld hl, _x
	dec (hl)
.LABEL.__LABEL130:
	ld a, (_tipo)
	sub 2
	jp nz, .LABEL.__LABEL136
	ld a, (_yesq)
	add a, 3
	ld h, a
	ld a, (_y)
	sub h
	jp z, .LABEL.__LABEL137
	ld hl, _x
	dec (hl)
	jp .LABEL.__LABEL136
.LABEL.__LABEL137:
	ld a, (_xesq)
	add a, 3
	ld hl, (_x - 1)
	sub h
	jp z, .LABEL.__LABEL136
	ld hl, _x
	dec (hl)
.LABEL.__LABEL136:
	ld a, (_tipo)
	sub 3
	jp nz, .LABEL.__LABEL128
	ld a, (_yesq)
	dec a
	ld h, a
	ld a, (_y)
	sub h
	jp z, .LABEL.__LABEL143
	ld hl, _x
	dec (hl)
	jp .LABEL.__LABEL128
.LABEL.__LABEL143:
	ld a, (_xesq)
	add a, 3
	ld hl, (_x - 1)
	sub h
	jp z, .LABEL.__LABEL128
	ld hl, _x
	dec (hl)
.LABEL.__LABEL128:
	ld hl, (_ani)
	push hl
	ld hl, _caballero2
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime
.LABEL.__LABEL122:
	jp .LABEL.__LABEL52
.LABEL.__LABEL109:
	call .core.COPY_ATTR
	ld bc, 32766
	in a, (c)
	ld (_keytemp), a
	ld a, (_estamina)
	cp 12
	sbc a, a
	push af
	ld a, (_sube)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL775
	ld a, h
.LABEL.__LABEL775:
	push af
	ld a, (_keytemp)
	sub 190
	sub 1
	sbc a, a
	ld d, a
	ld a, (_keytemp)
	sub 254
	sub 1
	sbc a, a
	or d
	push af
	call .core.INKEY
	ld de, .LABEL.__LABEL15
	ld a, 1
	call .core.__STREQ
	pop de
	or d
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL776
	ld a, h
.LABEL.__LABEL776:
	or a
	jp z, .LABEL.__LABEL148
	ld hl, (_contestamina)
	ld de, 5
	add hl, de
	ld (_contestamina), hl
	ld de, (_topcontestamina)
	ld hl, (_contestamina)
	or a
	sbc hl, de
	ccf
	jp nc, .LABEL.__LABEL148
	ld hl, _vidamagiaestamina.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld hl, 0
	ld (_contestamina), hl
	ld hl, _estamina
	inc (hl)
	ld a, 21
	push af
	ld a, (_estamina)
	dec a
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL151
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, _topecontani
	dec (hl)
.LABEL.__LABEL148:
	ld a, (_sube)
	or a
	jp nz, .LABEL.__LABEL153
	xor a
	ld (_contani), a
.LABEL.__LABEL153:
	ld hl, 0
	ld (_ani), hl
	ld a, 7
	call .core.INK
	call .core.COPY_ATTR
	ld a, (_dir)
	dec a
	sub 1
	sbc a, a
	push af
	ld a, (_parado)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL777
	ld a, h
.LABEL.__LABEL777:
	or a
	jp z, .LABEL.__LABEL155
	ld a, 1
	ld (_parado), a
	ld hl, _caballero3.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	call _imprime
.LABEL.__LABEL155:
	ld a, (_dir)
	sub 255
	sub 1
	sbc a, a
	push af
	ld a, (_parado)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL778
	ld a, h
.LABEL.__LABEL778:
	or a
	jp z, .LABEL.__LABEL52
	ld a, 1
	ld (_parado), a
	ld hl, _caballero3.__DATA__
	ld de, 72
	add hl, de
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	call _imprime
.LABEL.__LABEL52:
	ld bc, 64510
	in a, (c)
	ld (_keytemp), a
	sub 254
	sub 1
	sbc a, a
	ld d, a
	ld a, (_keytemp)
	sub 190
	sub 1
	sbc a, a
	or d
	push af
	call .core.INKEY
	ld de, .LABEL.__LABEL158
	ld a, 1
	call .core.__STREQ
	pop de
	or d
	push af
	ld a, (_ataca)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL779
	ld a, h
.LABEL.__LABEL779:
	push af
	ld a, (_parado)
	dec a
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL780
	ld a, h
.LABEL.__LABEL780:
	or a
	jp z, .LABEL.__LABEL159
	ld a, (_x)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	dec a
	sub 1
	sbc a, a
	push af
	ld a, (_x)
	inc a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	dec a
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL781
	ld a, h
.LABEL.__LABEL781:
	push af
	ld a, (_x)
	add a, 2
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	dec a
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL782
	ld a, h
.LABEL.__LABEL782:
	push af
	ld a, (_sube)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL783
	ld a, h
.LABEL.__LABEL783:
	or a
	jp z, .LABEL.__LABEL162
	ld a, 1
	ld (_sube), a
	xor a
	ld (_contani), a
	ld hl, (_ani)
	push hl
	ld hl, _caballerosube
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime
.LABEL.__LABEL162:
	call .core.COPY_ATTR
	ld a, (_sube)
	dec a
	jp nz, .LABEL.__LABEL164
	ld hl, _contani
	inc (hl)
	ld hl, (_topecontani - 1)
	ld a, (_contani)
	sub h
	ccf
	jp nc, .LABEL.__LABEL164
	xor a
	ld (_contani), a
	ld a, (_x)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 2
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	dec a
	sub 1
	sbc a, a
	push af
	ld a, (_x)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 2
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	pop de
	ld a, (hl)
	sub 21
	sub 1
	sbc a, a
	or d
	jp z, .LABEL.__LABEL167
	ld a, 4
	push af
	ld a, (_y)
	push af
	ld a, (_x)
	push af
	call _borraprota
	ld hl, _y
	dec (hl)
	ld h, 0
	ld a, (_y)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL170
	ld a, 15
	ld (_y), a
	ld (_ycur), a
	ld a, (_pant)
	sub 10
	ld (_pant), a
	call _pantalla
	ld hl, (_anisube)
	push hl
	ld hl, _caballerosube
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime
.LABEL.__LABEL170:
	call .core.COPY_ATTR
	ld hl, (_anisube)
	ld de, 72
	add hl, de
	ld (_anisube), hl
	ld de, 144
	ld hl, (_anisube)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL172
	ld hl, 0
	ld (_anisube), hl
.LABEL.__LABEL172:
	ld hl, (_anisube)
	push hl
	ld hl, _caballerosube
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime
	call .core.COPY_ATTR
	ld hl, 0
	push hl
	ld hl, 14
	call .core.__BEEPER
	jp .LABEL.__LABEL164
.LABEL.__LABEL167:
	xor a
	ld (_sube), a
.LABEL.__LABEL164:
	ld a, (_sube)
	or a
	jp nz, .LABEL.__LABEL174
	ld a, 1
	ld (_escudo), a
	ld a, (_dir)
	dec a
	jp nz, .LABEL.__LABEL176
	ld hl, 0
	ld (_ani), hl
.LABEL.__LABEL176:
	ld a, (_dir)
	sub 255
	jp nz, .LABEL.__LABEL178
	ld hl, 72
	ld (_ani), hl
.LABEL.__LABEL178:
	ld hl, (_ani)
	push hl
	ld hl, _caballeroescudo
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime
.LABEL.__LABEL174:
	jp .LABEL.__LABEL160
.LABEL.__LABEL159:
	call .core.COPY_ATTR
	ld a, (_escudo)
	dec a
	jp nz, .LABEL.__LABEL160
	xor a
	ld (_escudo), a
	ld a, (_dir)
	dec a
	jp nz, .LABEL.__LABEL182
	ld hl, 0
	ld (_ani), hl
.LABEL.__LABEL182:
	ld a, (_dir)
	sub 255
	jp nz, .LABEL.__LABEL184
	ld hl, 72
	ld (_ani), hl
.LABEL.__LABEL184:
	ld hl, (_ani)
	push hl
	ld hl, _caballero3
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime
.LABEL.__LABEL160:
	call .core.COPY_ATTR
	ld bc, 65022
	in a, (c)
	ld (_keytemp), a
	sub 254
	sub 1
	sbc a, a
	ld d, a
	ld a, (_keytemp)
	sub 190
	sub 1
	sbc a, a
	or d
	push af
	call .core.INKEY
	ld de, .LABEL.__LABEL185
	ld a, 1
	call .core.__STREQ
	pop de
	or d
	push af
	ld a, (_ataca)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL784
	ld a, h
.LABEL.__LABEL784:
	or a
	jp z, .LABEL.__LABEL187
	ld a, (_x)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 21
	sub 1
	sbc a, a
	push af
	ld a, (_x)
	inc a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 21
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL785
	ld a, h
.LABEL.__LABEL785:
	push af
	ld a, (_x)
	add a, 2
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 21
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL786
	ld a, h
.LABEL.__LABEL786:
	push af
	ld a, (_sube)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL787
	ld a, h
.LABEL.__LABEL787:
	or a
	jp z, .LABEL.__LABEL189
	ld a, 1
	ld (_sube), a
	xor a
	ld (_contani), a
	ld hl, (_ani)
	push hl
	ld hl, _caballerosube
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime
.LABEL.__LABEL189:
	call .core.COPY_ATTR
	ld a, (_sube)
	dec a
	jp nz, .LABEL.__LABEL191
	ld hl, _contani
	inc (hl)
	ld a, (_y)
	sub 15
	jp nz, .LABEL.__LABEL193
	ld a, (_pant)
	add a, 10
	ld (_pant), a
	call _pantalla
	xor a
	ld (_y), a
	ld (_ycur), a
	ld hl, (_anisube)
	push hl
	ld hl, _caballerosube
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime
.LABEL.__LABEL193:
	call .core.COPY_ATTR
	ld hl, (_topecontani - 1)
	ld a, (_contani)
	sub h
	ccf
	jp nc, .LABEL.__LABEL191
	xor a
	ld (_contani), a
	ld a, (_x)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	dec a
	sub 1
	sbc a, a
	push af
	ld a, (_x)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	pop de
	ld a, (hl)
	sub 21
	sub 1
	sbc a, a
	or d
	jp z, .LABEL.__LABEL196
	ld a, 3
	push af
	ld a, (_y)
	push af
	ld a, (_x)
	push af
	call _borraprota
	ld hl, _y
	inc (hl)
	ld hl, (_anisube)
	ld de, 72
	add hl, de
	ld (_anisube), hl
	ld de, 144
	ld hl, (_anisube)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL199
	ld hl, 0
	ld (_anisube), hl
.LABEL.__LABEL199:
	ld hl, (_anisube)
	push hl
	ld hl, _caballerosube
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime
	call .core.COPY_ATTR
	ld hl, 0
	push hl
	ld hl, 14
	call .core.__BEEPER
	jp .LABEL.__LABEL191
.LABEL.__LABEL196:
	xor a
	ld (_sube), a
.LABEL.__LABEL191:
	ld a, (_x)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 15
	sub 1
	sbc a, a
	push af
	ld a, (_x)
	inc a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 15
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL788
	ld a, h
.LABEL.__LABEL788:
	push af
	ld a, (_x)
	add a, 2
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 15
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL789
	ld a, h
.LABEL.__LABEL789:
	or a
	jp z, .LABEL.__LABEL187
	ld a, (_topenergia)
	ld (_energia), a
	call _pintaener
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 2
	call .core.BORDER
	ld hl, 1642
	push hl
	ld hl, 12
	call .core.__BEEPER
	ld a, 6
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 2
	call .core.BORDER
	ld hl, 1642
	push hl
	ld hl, 12
	call .core.__BEEPER
	ld a, 6
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 2
	call .core.BORDER
	ld hl, 1642
	push hl
	ld hl, 12
	call .core.__BEEPER
	ld a, 6
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 2
	call .core.BORDER
	ld hl, 2949
	push hl
	ld hl, 6
	call .core.__BEEPER
	ld a, 6
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 2
	call .core.BORDER
	ld hl, 5279
	push hl
	ld hl, 3
	call .core.__BEEPER
	ld a, 6
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 2
	call .core.BORDER
	ld hl, 5279
	push hl
	ld hl, 3
	call .core.__BEEPER
	ld a, 6
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	xor a
	call .core.BORDER
	xor a
	ld (_n), a
	jp .LABEL.__LABEL202
.LABEL.__LABEL205:
	ld a, (_n)
	ld l, a
	ld h, 0
	push hl
	ld hl, _tablaenemtmp
	call .core.__ARRAY
	ld a, (hl)
	push af
	ld a, (_n)
	ld l, a
	ld h, 0
	push hl
	ld hl, _tablaenem
	call .core.__ARRAY
	pop af
	ld (hl), a
	ld hl, _n
	inc (hl)
.LABEL.__LABEL202:
	ld a, 89
	ld hl, (_n - 1)
	cp h
	jp nc, .LABEL.__LABEL205
	ld a, (_x)
	ld (_xh), a
	ld a, (_y)
	ld (_yh), a
	ld a, (_pant)
	ld (_panth), a
.LABEL.__LABEL187:
	ld bc, 32766
	in a, (c)
	ld (_keytemp), a
	sub 190
	sub 1
	sbc a, a
	ld d, a
	ld a, (_keytemp)
	sub 254
	sub 1
	sbc a, a
	or d
	push af
	call .core.INKEY
	ld de, .LABEL.__LABEL15
	ld a, 1
	call .core.__STREQ
	pop de
	or d
	push af
	ld a, (_ataca)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL790
	ld a, h
.LABEL.__LABEL790:
	push af
	ld a, (_sube)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL791
	ld a, h
.LABEL.__LABEL791:
	or a
	jp z, .LABEL.__LABEL208
	ld a, 1
	ld (_ataca), a
	ld hl, 0
	ld (_ani), hl
	xor a
	ld (_contani), a
.LABEL.__LABEL208:
	ld a, (_ataca)
	dec a
	jp nz, .LABEL.__LABEL210
	ld hl, _contani
	inc (hl)
	ld hl, (_topecontani - 1)
	ld a, (_contani)
	sub h
	ccf
	jp nc, .LABEL.__LABEL210
	xor a
	ld (_contani), a
	ld de, 432
	ld hl, (_ani)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL214
	ld hl, 0
	ld (_ani), hl
	xor a
	ld (_ataca), a
	ld hl, (_contestamina)
	ld de, 50
	add hl, de
	ld (_contestamina), hl
.LABEL.__LABEL214:
	ld a, (_dir)
	dec a
	jp nz, .LABEL.__LABEL216
	ld hl, (_ani)
	push hl
	ld hl, _caballeroatt
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL216:
	ld a, (_dir)
	sub 255
	jp nz, .LABEL.__LABEL218
	ld hl, (_ani)
	push hl
	ld hl, _caballeroatt2
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL218:
	ld a, 7
	call .core.INK
	call _imprime
	call .core.COPY_ATTR
	ld de, 144
	ld hl, (_ani)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL220
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
.LABEL.__LABEL220:
	ld de, 216
	ld hl, (_ani)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL222
	ld a, 7
	call .core.INK
	call .core.COPY_ATTR
	ld a, (_dir)
	dec a
	sub 1
	sbc a, a
	push af
	ld h, 21
	ld a, (_x)
	call .core.__LTI8
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL792
	ld a, h
.LABEL.__LABEL792:
	or a
	jp z, .LABEL.__LABEL224
	ld hl, _espada.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, (_y)
	inc a
	push af
	ld a, (_x)
	add a, 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL71
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_enemigo)
	dec a
	jp nz, .LABEL.__LABEL226
	ld a, (_x)
	add a, 3
	ld h, a
	ld a, (_xesq)
	sub h
	sub 1
	sbc a, a
	push af
	ld a, (_tipo)
	dec a
	sub 1
	sbc a, a
	push af
	ld hl, (_yesq - 1)
	ld a, (_y)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL793
	ld a, h
.LABEL.__LABEL793:
	push af
	ld a, (_tipo)
	sub 2
	sub 1
	sbc a, a
	push af
	ld a, (_yesq)
	add a, 3
	ld h, a
	ld a, (_y)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL794
	ld a, h
.LABEL.__LABEL794:
	pop de
	or d
	push af
	ld a, (_tipo)
	sub 3
	sub 1
	sbc a, a
	push af
	ld a, (_yesq)
	dec a
	ld h, a
	ld a, (_y)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL795
	ld a, h
.LABEL.__LABEL795:
	pop de
	or d
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL796
	ld a, h
.LABEL.__LABEL796:
	or a
	jp z, .LABEL.__LABEL226
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 1642
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 265
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, 1
	push af
	call _restapone
	ld hl, _energiaenem
	dec (hl)
.LABEL.__LABEL226:
	ld a, (_x)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 27
	sub 1
	sbc a, a
	push af
	ld a, (_x)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	pop de
	ld a, (hl)
	sub 28
	sub 1
	sbc a, a
	or d
	push af
	ld a, (_x)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	pop de
	ld a, (hl)
	sub 29
	sub 1
	sbc a, a
	or d
	jp z, .LABEL.__LABEL230
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 1642
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 265
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, (_xcur)
	add a, 3
	ld h, 3
	call .core.__DIVU8_FAST
	push af
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	push af
	call _coloca
.LABEL.__LABEL230:
	ld a, (_x)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 37
	jp nz, .LABEL.__LABEL224
	ld hl, _energiajefe
	dec (hl)
	call _golpejefe
.LABEL.__LABEL224:
	ld a, (_dir)
	sub 255
	sub 1
	sbc a, a
	push af
	xor a
	ld hl, (_x - 1)
	call .core.__LTI8
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL797
	ld a, h
.LABEL.__LABEL797:
	or a
	jp z, .LABEL.__LABEL222
	ld hl, _espada.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, (_y)
	inc a
	push af
	ld a, (_x)
	dec a
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_enemigo)
	dec a
	jp nz, .LABEL.__LABEL236
	ld a, (_x)
	sub 3
	ld h, a
	ld a, (_xesq)
	sub h
	sub 1
	sbc a, a
	push af
	ld a, (_tipo)
	dec a
	sub 1
	sbc a, a
	push af
	ld hl, (_yesq - 1)
	ld a, (_y)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL798
	ld a, h
.LABEL.__LABEL798:
	push af
	ld a, (_tipo)
	sub 2
	sub 1
	sbc a, a
	push af
	ld a, (_yesq)
	add a, 3
	ld h, a
	ld a, (_y)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL799
	ld a, h
.LABEL.__LABEL799:
	pop de
	or d
	push af
	ld a, (_tipo)
	sub 3
	sub 1
	sbc a, a
	push af
	ld a, (_yesq)
	dec a
	ld h, a
	ld a, (_y)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL800
	ld a, h
.LABEL.__LABEL800:
	pop de
	or d
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL801
	ld a, h
.LABEL.__LABEL801:
	or a
	jp z, .LABEL.__LABEL236
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 1642
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 265
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, 1
	push af
	call _restapone
	ld hl, _energiaenem
	dec (hl)
.LABEL.__LABEL236:
	ld a, (_x)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 27
	sub 1
	sbc a, a
	push af
	ld a, (_x)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	pop de
	ld a, (hl)
	sub 28
	sub 1
	sbc a, a
	or d
	push af
	ld a, (_x)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	pop de
	ld a, (hl)
	sub 29
	sub 1
	sbc a, a
	or d
	jp z, .LABEL.__LABEL240
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 1642
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 265
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, (_xcur)
	sub 3
	ld h, 3
	call .core.__DIVU8_FAST
	push af
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	push af
	call _coloca
.LABEL.__LABEL240:
	ld a, (_x)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_y)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 36
	jp nz, .LABEL.__LABEL222
	ld hl, _energiajefe
	dec (hl)
	call _golpejefe
.LABEL.__LABEL222:
	ld de, 360
	ld hl, (_ani)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL244
	ld a, (_xcur)
	ld hl, (_x - 1)
	sub h
	jp nz, .LABEL.__LABEL246
	ld a, (_dir)
	dec a
	jp nz, .LABEL.__LABEL248
	ld hl, 63
	push hl
	ld hl, 4
	call .core.__BEEPER
	ld h, 21
	ld a, (_x)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL248
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	inc a
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	add a, 3
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL248:
	ld a, (_dir)
	sub 255
	jp nz, .LABEL.__LABEL246
	ld hl, 63
	push hl
	ld hl, 4
	call .core.__BEEPER
	xor a
	ld hl, (_x - 1)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL246
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	dec a
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	dec a
	call .core.PRINT_AT
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL246:
	ld a, (_xcur)
	ld hl, (_x - 1)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL256
	ld a, (_dir)
	dec a
	jp nz, .LABEL.__LABEL258
	ld hl, 63
	push hl
	ld hl, 4
	call .core.__BEEPER
	ld h, 21
	ld a, (_x)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL258
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	inc a
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	add a, 4
	call .core.PRINT_AT
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL258:
	ld a, (_dir)
	sub 255
	jp nz, .LABEL.__LABEL256
	ld hl, 63
	push hl
	ld hl, 4
	call .core.__BEEPER
	xor a
	ld hl, (_x - 1)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL256
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL256:
	ld a, (_xcur)
	ld h, a
	ld a, (_x)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL244
	ld a, (_dir)
	dec a
	jp nz, .LABEL.__LABEL268
	ld hl, 63
	push hl
	ld hl, 4
	call .core.__BEEPER
	ld h, 21
	ld a, (_x)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL268
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	inc a
	call .core.PRINT_AT
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL268:
	ld a, (_dir)
	sub 255
	jp nz, .LABEL.__LABEL244
	ld hl, 63
	push hl
	ld hl, 4
	call .core.__BEEPER
	xor a
	ld hl, (_x - 1)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL244
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	dec a
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	sub 3
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL244:
	ld hl, (_ani)
	ld de, 72
	add hl, de
	ld (_ani), hl
.LABEL.__LABEL210:
	ld bc, 32766
	in a, (c)
	ld (_keytemp), a
	sub 251
	sub 1
	sbc a, a
	ld d, a
	ld a, (_keytemp)
	sub 187
	sub 1
	sbc a, a
	or d
	push af
	call .core.INKEY
	ld de, .LABEL.__LABEL275
	ld a, 1
	call .core.__STREQ
	pop de
	or d
	push af
	ld a, (_magiamago)
	dec a
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL802
	ld a, h
.LABEL.__LABEL802:
	or a
	jp z, _prota__leave
	xor a
	ld hl, (_magia - 1)
	cp h
	jp nc, _prota__leave
	ld a, 23
	push af
	ld a, (_magia)
	dec a
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL15
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld hl, _magia
	dec (hl)
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 1
	call .core.BORDER
	ld hl, 1642
	push hl
	ld hl, 12
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 1
	call .core.BORDER
	ld hl, 1642
	push hl
	ld hl, 12
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 1
	call .core.BORDER
	ld hl, 1642
	push hl
	ld hl, 12
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 1
	call .core.BORDER
	ld hl, 2949
	push hl
	ld hl, 6
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 1
	call .core.BORDER
	ld hl, 5279
	push hl
	ld hl, 3
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 1
	call .core.BORDER
	ld hl, 5279
	push hl
	ld hl, 3
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, (_enemigo)
	dec a
	jp nz, .LABEL.__LABEL281
	xor a
	ld (_enemigo), a
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	push af
	call _borraesq
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _tablaenem
	call .core.__ARRAY
	ld (hl), 0
	ld a, (_souls)
	add a, 2
	ld (_souls), a
	call _pintaener
	ld hl, 53481
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 16825
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
.LABEL.__LABEL281:
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	dec a
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 40
	jp nz, .LABEL.__LABEL283
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	sub 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	sub 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	sub 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	dec a
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld (hl), 0
	call _fxm
.LABEL.__LABEL283:
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	inc a
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 39
	jp nz, .LABEL.__LABEL285
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	add a, 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	add a, 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	add a, 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	inc a
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld (hl), 0
	call _fxm
.LABEL.__LABEL285:
	ld a, (_pant)
	sub 9
	jp nz, _prota__leave
	ld hl, _energiajefe
	dec (hl)
_prota__leave:
	ret
_enemesq:
	ld a, (_tipo)
	dec a
	jp nz, .LABEL.__LABEL289
	ld a, 7
	call .core.INK
	call .core.COPY_ATTR
	ld a, (_x)
	ld hl, (_xesq - 1)
	call .core.__LTI8
	push af
	ld hl, (_y - 1)
	ld a, (_yesq)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL803
	ld a, h
.LABEL.__LABEL803:
	push af
	ld a, (_xesq)
	ld hl, (_x - 1)
	sub h
	call .core.__ABS8
	ld h, 9
	call .core.__LEI8
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL804
	ld a, h
.LABEL.__LABEL804:
	push af
	ld a, (_atacaenem)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL805
	ld a, h
.LABEL.__LABEL805:
	push af
	ld a, (_retirada)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL806
	ld a, h
.LABEL.__LABEL806:
	or a
	jp z, .LABEL.__LABEL291
	ld hl, _contanienem
	inc (hl)
	ld a, 255
	ld (_direnem), a
	ld a, (_topecontanienem)
	add a, 4
	ld h, a
	ld a, (_contanienem)
	sub h
	ccf
	jp nc, .LABEL.__LABEL291
	xor a
	ld (_contanienem), a
	ld a, (_x)
	add a, 3
	ld hl, (_xesq - 1)
	call .core.__LTI8
	push af
	ld a, (_direnem)
	dec a
	sub 1
	sbc a, a
	ld h, a
	pop af
	call .core.__XOR8
	push af
	ld a, (_x)
	add a, 3
	ld h, a
	ld a, (_xesq)
	sub h
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL807
	ld a, h
.LABEL.__LABEL807:
	push af
	ld a, (_xesq)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_yesq)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	pop af
	ld h, (hl)
	or a
	jr z, .LABEL.__LABEL808
	ld a, h
.LABEL.__LABEL808:
	push af
	ld a, (_xesq)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_yesq)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL809
	ld a, h
.LABEL.__LABEL809:
	or a
	jp z, .LABEL.__LABEL295
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	push af
	call _borraesq
	ld hl, _xesq
	dec (hl)
.LABEL.__LABEL295:
	ld hl, (_anienem)
	push hl
	ld hl, _esqizq
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime2
	call .core.COPY_ATTR
	ld de, 72
	ld hl, (_anienem)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL297
	ld hl, 29
	push hl
	ld hl, 6
	call .core.__BEEPER
.LABEL.__LABEL297:
	ld hl, (_anienem)
	ld de, 72
	add hl, de
	ld (_anienem), hl
	ld de, 144
	ld hl, (_anienem)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL291
	ld hl, 0
	ld (_anienem), hl
.LABEL.__LABEL291:
	ld hl, (_x - 1)
	ld a, (_xesq)
	call .core.__LTI8
	push af
	ld hl, (_y - 1)
	ld a, (_yesq)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL810
	ld a, h
.LABEL.__LABEL810:
	push af
	ld a, (_xesq)
	ld hl, (_x - 1)
	sub h
	call .core.__ABS8
	ld h, 9
	call .core.__LEI8
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL811
	ld a, h
.LABEL.__LABEL811:
	push af
	ld a, (_atacaenem)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL812
	ld a, h
.LABEL.__LABEL812:
	push af
	ld a, (_retirada)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL813
	ld a, h
.LABEL.__LABEL813:
	or a
	jp z, .LABEL.__LABEL301
	ld hl, _contanienem
	inc (hl)
	ld a, 1
	ld (_direnem), a
	ld a, (_topecontanienem)
	add a, 4
	ld h, a
	ld a, (_contanienem)
	sub h
	ccf
	jp nc, .LABEL.__LABEL301
	xor a
	ld (_contanienem), a
	ld a, (_xesq)
	add a, 3
	ld hl, (_x - 1)
	call .core.__LTI8
	push af
	ld a, (_xesq)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_yesq)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	pop af
	ld h, (hl)
	or a
	jr z, .LABEL.__LABEL814
	ld a, h
.LABEL.__LABEL814:
	push af
	ld a, (_xesq)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_yesq)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL815
	ld a, h
.LABEL.__LABEL815:
	or a
	jp z, .LABEL.__LABEL305
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	push af
	call _borraesq
	ld hl, (_xesq - 1)
	ld a, (_direnem)
	add a, h
	ld (_xesq), a
.LABEL.__LABEL305:
	ld hl, (_anienem)
	push hl
	ld hl, _esqdrch
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	call .core.INK
	call _imprime2
	call .core.COPY_ATTR
	ld de, 72
	ld hl, (_anienem)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL307
	ld hl, 29
	push hl
	ld hl, 6
	call .core.__BEEPER
.LABEL.__LABEL307:
	ld hl, (_anienem)
	ld de, 72
	add hl, de
	ld (_anienem), hl
	ld de, 144
	ld hl, (_anienem)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL301
	ld hl, 0
	ld (_anienem), hl
.LABEL.__LABEL301:
	ld a, (_direnem)
	dec a
	sub 1
	sbc a, a
	push af
	ld a, (_retirada)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL816
	ld a, h
.LABEL.__LABEL816:
	or a
	jp z, .LABEL.__LABEL311
	ld a, (_xesq)
	add a, 3
	ld h, a
	ld a, (_x)
	sub h
	sub 1
	sbc a, a
	push af
	ld a, (_atacaenem)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL817
	ld a, h
.LABEL.__LABEL817:
	or a
	jp z, .LABEL.__LABEL311
	call .core.RND
	ld hl, 00000h
	push hl
	ld hl, 000FAh
	push hl
	ld h, 08Ah
	push hl
	call .core.__MULF
	call .core.__FTOU32REG
	push de
	ld b, h
	ld c, l
	ld de, 0
	ld hl, 1000
	add hl, bc
	pop bc
	ex de, hl
	adc hl, bc
	push hl
	push de
	ld de, 0
	ld hl, 980
	call .core.__LEI32
	or a
	jp nz, .LABEL.__LABEL311
	ld a, 1
	ld (_atacaenem), a
	ld hl, 0
	ld (_anienem), hl
	xor a
	ld (_contanienem), a
.LABEL.__LABEL311:
	ld a, (_direnem)
	sub 255
	sub 1
	sbc a, a
	push af
	ld a, (_retirada)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL818
	ld a, h
.LABEL.__LABEL818:
	or a
	jp z, .LABEL.__LABEL317
	ld a, (_xesq)
	sub 3
	ld h, a
	ld a, (_x)
	sub h
	sub 1
	sbc a, a
	push af
	ld a, (_atacaenem)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL819
	ld a, h
.LABEL.__LABEL819:
	or a
	jp z, .LABEL.__LABEL317
	call .core.RND
	ld hl, 00000h
	push hl
	ld hl, 000FAh
	push hl
	ld h, 08Ah
	push hl
	call .core.__MULF
	call .core.__FTOU32REG
	push de
	ld b, h
	ld c, l
	ld de, 0
	ld hl, 1000
	add hl, bc
	pop bc
	ex de, hl
	adc hl, bc
	push hl
	push de
	ld de, 0
	ld hl, 980
	call .core.__LEI32
	or a
	jp nz, .LABEL.__LABEL317
	ld a, 1
	ld (_atacaenem), a
	ld hl, 0
	ld (_anienem), hl
	xor a
	ld (_contanienem), a
.LABEL.__LABEL317:
	ld a, (_atacaenem)
	dec a
	jp nz, .LABEL.__LABEL323
	ld hl, _contanienem
	inc (hl)
	ld hl, (_topecontanienem - 1)
	ld a, (_contanienem)
	sub h
	ccf
	jp nc, .LABEL.__LABEL323
	xor a
	ld (_contanienem), a
	ld de, 360
	ld hl, (_anienem)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL327
	ld hl, 0
	ld (_anienem), hl
	xor a
	ld (_atacaenem), a
.LABEL.__LABEL327:
	ld a, (_direnem)
	sub 255
	jp nz, .LABEL.__LABEL329
	ld hl, (_anienem)
	push hl
	ld hl, _esqattizq
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL329:
	ld a, (_direnem)
	dec a
	jp nz, .LABEL.__LABEL331
	ld hl, (_anienem)
	push hl
	ld hl, _esqattdrch
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL331:
	ld a, 7
	call .core.INK
	call _imprime2
	call .core.COPY_ATTR
	ld de, 288
	ld hl, (_anienem)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL333
	ld hl, 1642
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, (_direnem)
	sub 255
	jp nz, .LABEL.__LABEL335
	ld a, (_xesq)
	sub 3
	ld h, a
	ld a, (_x)
	sub h
	sub 1
	sbc a, a
	push af
	ld a, (_escudo)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL820
	ld a, h
.LABEL.__LABEL820:
	push af
	ld hl, (_yesq - 1)
	ld a, (_y)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL821
	ld a, h
.LABEL.__LABEL821:
	or a
	jp z, .LABEL.__LABEL335
	xor a
	push af
	call _restapone
	ld hl, _energia
	dec (hl)
.LABEL.__LABEL335:
	ld a, (_direnem)
	dec a
	jp nz, .LABEL.__LABEL333
	ld a, (_xesq)
	add a, 3
	ld h, a
	ld a, (_x)
	sub h
	sub 1
	sbc a, a
	push af
	ld a, (_escudo)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL822
	ld a, h
.LABEL.__LABEL822:
	push af
	ld hl, (_yesq - 1)
	ld a, (_y)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL823
	ld a, h
.LABEL.__LABEL823:
	or a
	jp z, .LABEL.__LABEL333
	xor a
	push af
	call _restapone
	ld hl, _energia
	dec (hl)
.LABEL.__LABEL333:
	ld hl, (_anienem)
	ld de, 72
	add hl, de
	ld (_anienem), hl
.LABEL.__LABEL323:
	ld hl, (_energiatmp - 1)
	ld a, (_energiaenem)
	sub h
	sub 1
	sbc a, a
	push af
	ld a, (_atacaenem)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL824
	ld a, h
.LABEL.__LABEL824:
	or a
	jp z, .LABEL.__LABEL343
	ld a, (_energiaenem)
	sub 3
	ld (_energiatmp), a
	ld a, 1
	ld (_retirada), a
	xor a
	ld (_contanienem), a
	ld hl, 0
	ld (_anienem), hl
.LABEL.__LABEL343:
	ld a, (_retirada)
	dec a
	jp nz, .LABEL.__LABEL289
	ld hl, _contanienem
	inc (hl)
	ld a, (_topecontanienem)
	add a, 12
	ld h, a
	ld a, (_contanienem)
	sub h
	ccf
	jp nc, .LABEL.__LABEL289
	xor a
	ld (_contanienem), a
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	push af
	call _borraesq
	ld a, (_direnem)
	sub 255
	jp nz, .LABEL.__LABEL349
	ld hl, (_anienem)
	push hl
	ld hl, _esqizq
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld h, 21
	ld a, (_xesq)
	call .core.__LTI8
	push af
	ld a, (_xesq)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_yesq)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	pop af
	ld h, (hl)
	or a
	jr z, .LABEL.__LABEL825
	ld a, h
.LABEL.__LABEL825:
	push af
	ld a, (_xesq)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_yesq)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL826
	ld a, h
.LABEL.__LABEL826:
	or a
	jp z, .LABEL.__LABEL350
	ld hl, _xesq
	inc (hl)
	jp .LABEL.__LABEL349
.LABEL.__LABEL350:
	xor a
	ld (_retirada), a
.LABEL.__LABEL349:
	ld a, (_direnem)
	dec a
	jp nz, .LABEL.__LABEL353
	ld hl, (_anienem)
	push hl
	ld hl, _esqdrch
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	xor a
	ld hl, (_xesq - 1)
	call .core.__LTI8
	push af
	ld a, (_xesq)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_yesq)
	add a, 3
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	pop af
	ld h, (hl)
	or a
	jr z, .LABEL.__LABEL827
	ld a, h
.LABEL.__LABEL827:
	push af
	ld a, (_xesq)
	dec a
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_yesq)
	ld h, 3
	call .core.__DIVI8_FAST
	ld l, a
	add a, a
	sbc a, a
	ld h, a
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL828
	ld a, h
.LABEL.__LABEL828:
	or a
	jp z, .LABEL.__LABEL354
	ld hl, _xesq
	dec (hl)
	jp .LABEL.__LABEL353
.LABEL.__LABEL354:
	xor a
	ld (_retirada), a
.LABEL.__LABEL353:
	ld a, 7
	call .core.INK
	call _imprime2
	call .core.COPY_ATTR
	ld de, 72
	ld hl, (_anienem)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL357
	ld hl, 29
	push hl
	ld hl, 6
	call .core.__BEEPER
.LABEL.__LABEL357:
	ld hl, (_anienem)
	ld de, 72
	add hl, de
	ld (_anienem), hl
	ld de, 144
	ld hl, (_anienem)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL359
	ld hl, 0
	ld (_anienem), hl
.LABEL.__LABEL359:
	ld a, (_xesq)
	ld hl, (_x - 1)
	sub h
	call .core.__ABS8
	ld h, a
	ld a, 8
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL289
	xor a
	ld (_retirada), a
	xor a
	ld (_atacaenem), a
.LABEL.__LABEL289:
	ld a, (_tipo)
	sub 2
	jp nz, .LABEL.__LABEL363
	ld a, 4
	call .core.INK
	call .core.COPY_ATTR
	ld a, (_xesq)
	ld hl, (_x - 1)
	sub h
	call .core.__ABS8
	ld h, 5
	call .core.__LEI8
	push af
	ld a, (_xesq)
	ld hl, (_x - 1)
	sub h
	call .core.__ABS8
	ld h, a
	ld a, 4
	call .core.__LTI8
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL829
	ld a, h
.LABEL.__LABEL829:
	push af
	ld a, (_yesq)
	add a, 3
	ld h, a
	ld a, (_y)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL830
	ld a, h
.LABEL.__LABEL830:
	push af
	ld a, (_atacaenem)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL831
	ld a, h
.LABEL.__LABEL831:
	or a
	jp z, .LABEL.__LABEL365
	ld de, 288
	ld hl, (_anienem)
	or a
	sbc hl, de
	jp nc, .LABEL.__LABEL365
	ld hl, (_anienem)
	ld de, 144
	add hl, de
	ld (_anienem), hl
	ld a, (_xesq)
	ld hl, (_x - 1)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL369
	ld hl, (_anienem)
	push hl
	ld hl, _arboldrch
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL369:
	ld hl, (_xesq - 1)
	ld a, (_x)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL371
	ld hl, (_anienem)
	push hl
	ld hl, _arbolizq
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL371:
	call _imprime3
	ld hl, 2949
	push hl
	ld hl, 4
	call .core.__BEEPER
	ld hl, 2202
	push hl
	ld hl, 6
	call .core.__BEEPER
	ld hl, 1642
	push hl
	ld hl, 8
	call .core.__BEEPER
.LABEL.__LABEL365:
	ld a, (_xesq)
	ld hl, (_x - 1)
	sub h
	call .core.__ABS8
	ld h, a
	ld a, 5
	call .core.__LTI8
	push af
	ld a, (_yesq)
	add a, 3
	ld h, a
	ld a, (_y)
	sub h
	push af
	ld a, (_atacaenem)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL832
	ld a, h
.LABEL.__LABEL832:
	pop de
	or d
	jp z, .LABEL.__LABEL373
	ld hl, 0
	ld de, (_anienem)
	or a
	sbc hl, de
	jp nc, .LABEL.__LABEL373
	ld hl, (_anienem)
	ld de, -144
	add hl, de
	ld (_anienem), hl
	ld a, (_xesq)
	ld hl, (_x - 1)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL377
	ld hl, (_anienem)
	push hl
	ld hl, _arboldrch
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL377:
	ld hl, (_xesq - 1)
	ld a, (_x)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL379
	ld hl, (_anienem)
	push hl
	ld hl, _arbolizq
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL379:
	call _imprime3
	ld hl, 2949
	push hl
	ld hl, 4
	call .core.__BEEPER
	ld hl, 2202
	push hl
	ld hl, 6
	call .core.__BEEPER
	ld hl, 1642
	push hl
	ld hl, 8
	call .core.__BEEPER
.LABEL.__LABEL373:
	ld a, (_xesq)
	ld hl, (_x - 1)
	sub h
	call .core.__ABS8
	sub 3
	sub 1
	sbc a, a
	push af
	ld a, (_yesq)
	add a, 3
	ld h, a
	ld a, (_y)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL833
	ld a, h
.LABEL.__LABEL833:
	push af
	ld a, (_atacaenem)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL834
	ld a, h
.LABEL.__LABEL834:
	or a
	jp z, .LABEL.__LABEL381
	ld a, 1
	ld (_atacaenem), a
	ld hl, 0
	ld (_anienem), hl
.LABEL.__LABEL381:
	ld a, (_atacaenem)
	dec a
	jp nz, .LABEL.__LABEL363
	ld hl, _contanienem
	inc (hl)
	ld a, (_xesq)
	ld hl, (_x - 1)
	sub h
	call .core.__ABS8
	ld h, a
	ld a, 3
	call .core.__LTI8
	ld d, a
	ld a, (_yesq)
	add a, 3
	ld h, a
	ld a, (_y)
	sub h
	or d
	jp z, .LABEL.__LABEL385
	xor a
	ld (_atacaenem), a
	ld hl, 288
	ld (_anienem), hl
	ld a, (_xesq)
	ld hl, (_x - 1)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL387
	ld hl, (_anienem)
	push hl
	ld hl, _arboldrch
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL387:
	ld hl, (_xesq - 1)
	ld a, (_x)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL389
	ld hl, (_anienem)
	push hl
	ld hl, _arbolizq
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL389:
	call _imprime3
.LABEL.__LABEL385:
	ld a, (_topecontanienem)
	add a, 12
	ld h, a
	ld a, (_contanienem)
	sub h
	ccf
	jp nc, .LABEL.__LABEL363
	xor a
	ld (_contanienem), a
	ld hl, (_xesq - 1)
	ld a, (_x)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL393
	ld hl, (_anienem)
	push hl
	ld hl, _arbolattizq
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL393:
	ld a, (_xesq)
	ld hl, (_x - 1)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL395
	ld hl, (_anienem)
	push hl
	ld hl, _arbolattdrch
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL395:
	call _imprime3
	ld de, 288
	ld hl, (_anienem)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL397
	ld hl, 2949
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 908
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, (_escudo)
	or a
	jp nz, .LABEL.__LABEL397
	xor a
	push af
	call _restapone
	ld hl, _energia
	dec (hl)
.LABEL.__LABEL397:
	ld hl, (_anienem)
	ld de, 144
	add hl, de
	ld (_anienem), hl
	ld a, 4
	call .core.INK
	call .core.COPY_ATTR
	ld de, 432
	ld hl, (_anienem)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL363
	ld hl, 0
	ld (_anienem), hl
.LABEL.__LABEL363:
	ld a, (_tipo)
	sub 3
	jp nz, .LABEL.__LABEL403
	ld a, (_xesq)
	ld hl, (_x - 1)
	sub h
	call .core.__ABS8
	ld h, 12
	call .core.__LTI8
	push af
	ld a, (_yesq)
	dec a
	ld h, a
	ld a, (_y)
	sub h
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL835
	ld a, h
.LABEL.__LABEL835:
	or a
	jp z, .LABEL.__LABEL404
	ld hl, _contanienem
	inc (hl)
	ld a, 1
	ld (_atacaenem), a
	ld a, (_contanienem)
	sub 30
	ccf
	jp nc, .LABEL.__LABEL407
	xor a
	ld (_contanienem), a
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	push af
	call _borraesq
	ld a, (_xesq)
	add a, 3
	ld hl, (_x - 1)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL409
	ld hl, _xesq
	inc (hl)
.LABEL.__LABEL409:
	ld a, (_x)
	add a, 3
	ld hl, (_xesq - 1)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL411
	ld hl, _xesq
	dec (hl)
.LABEL.__LABEL411:
	ld a, (_xesq)
	ld hl, (_x - 1)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL412
	ld a, 1
	ld (_direnem), a
	ld hl, (_anienem)
	push hl
	ld hl, _ratadrch
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	jp .LABEL.__LABEL413
.LABEL.__LABEL412:
	ld a, 255
	ld (_direnem), a
	ld hl, (_anienem)
	push hl
	ld hl, _rataizq
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL413:
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL414
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	inc a
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL415
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, (_anienem)
	ld de, 48
	add hl, de
	ld (_anienem), hl
	ld hl, 2202
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, (_xesq)
	ld hl, (_x - 1)
	sub h
	call .core.__ABS8
	sub 3
	jp nz, .LABEL.__LABEL417
	xor a
	push af
	call _restapone
	ld hl, _energia
	dec (hl)
.LABEL.__LABEL417:
	ld de, 96
	ld hl, (_anienem)
	call .core.__EQ16
	or a
	jp z, .LABEL.__LABEL407
	ld hl, 0
	ld (_anienem), hl
.LABEL.__LABEL407:
	jp .LABEL.__LABEL403
.LABEL.__LABEL404:
	ld a, (_atacaenem)
	dec a
	jp nz, .LABEL.__LABEL403
	xor a
	ld (_atacaenem), a
	ld hl, 0
	ld (_anienem), hl
	ld a, 5
	call .core.INK
	call .core.COPY_ATTR
	ld a, (_direnem)
	dec a
	jp nz, .LABEL.__LABEL423
	ld hl, (_anienem)
	push hl
	ld hl, _ratadrch
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL423:
	ld a, (_direnem)
	sub 255
	jp nz, .LABEL.__LABEL425
	ld hl, (_anienem)
	push hl
	ld hl, _rataizq
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL425:
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL414
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	inc a
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL415
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL403:
	ld a, (_energiaenem)
	or a
	jp nz, _enemesq__leave
	xor a
	ld (_enemigo), a
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	push af
	call _borraesq
	call _muertesq
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _tablaenem
	call .core.__ARRAY
	ld (hl), 0
_enemesq__leave:
	ret
_imprime:
	ld a, (_y)
	push af
	ld a, (_x)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL2
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_y)
	inc a
	push af
	ld a, (_x)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL3
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_y)
	add a, 2
	push af
	ld a, (_x)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL4
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
_imprime__leave:
	ret
_imprime2:
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL2
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	inc a
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL428
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	add a, 2
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL429
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
_imprime2__leave:
	ret
_imprime3:
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL430
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	inc a
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL431
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	add a, 2
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL432
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	add a, 3
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL433
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	add a, 4
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL434
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	add a, 5
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL435
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
_imprime3__leave:
	ret
_pintaener:
	ld a, 1
	call .core.BRIGHT
	ld a, 7
	call .core.INK
	call .core.COPY_ATTR
	ld hl, _letrasvida.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 18
	push af
	ld a, 4
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL436
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, 18
	push af
	ld a, 16
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL436
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld hl, _letrasestamina.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 20
	push af
	ld a, 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL437
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld hl, _letrasmagia.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 22
	push af
	ld a, 4
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL436
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld hl, _letrassouls.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 16
	push af
	ld a, 25
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL438
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, _letrasnivel.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 18
	push af
	ld a, 25
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL436
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld hl, _barrillave.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 13
	push af
	ld a, 25
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL439
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, 14
	push af
	ld a, 25
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL4
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, 6
	call .core.INK
	call .core.COPY_ATTR
	ld a, 14
	push af
	ld a, 28
	call .core.PRINT_AT
	ld a, (_llaves)
	call .core.__PRINTU8
	call .core.PRINT_EOL
	ld a, 18
	push af
	ld a, 30
	call .core.PRINT_AT
	ld a, (_nivel)
	call .core.__PRINTU8
	call .core.PRINT_EOL
	ld hl, _almas.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 1
	ld (_n), a
	jp .LABEL.__LABEL440
.LABEL.__LABEL443:
	ld a, 16
	ld hl, (_n - 1)
	sub h
	inc a
	push af
	ld a, 30
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL445
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_n)
	sub 17
	jp z, .LABEL.__LABEL442
	ld hl, _n
	inc (hl)
.LABEL.__LABEL440:
	ld a, (_souls)
	ld hl, (_n - 1)
	cp h
	jp nc, .LABEL.__LABEL443
.LABEL.__LABEL442:
	xor a
	call .core.BRIGHT
	ld a, 1
	call .core.BRIGHT
	call .core.COPY_ATTR
	ld hl, _vidamagiaestamina.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 1
	ld (_n), a
	jp .LABEL.__LABEL448
.LABEL.__LABEL451:
	ld a, 19
	push af
	ld a, (_n)
	dec a
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL453
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, _n
	inc (hl)
.LABEL.__LABEL448:
	ld a, (_energia)
	ld hl, (_n - 1)
	cp h
	jp nc, .LABEL.__LABEL451
	ld a, (_enemigo)
	dec a
	jp nz, .LABEL.__LABEL454
	ld a, 1
	ld (_n), a
	jp .LABEL.__LABEL456
.LABEL.__LABEL459:
	ld a, 19
	push af
	ld a, (_n)
	add a, 12
	dec a
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL461
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, _n
	inc (hl)
.LABEL.__LABEL456:
	ld a, (_energiaenem)
	ld hl, (_n - 1)
	cp h
	jp nc, .LABEL.__LABEL459
	jp .LABEL.__LABEL455
.LABEL.__LABEL454:
	ld a, 19
	push af
	ld a, 12
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL462
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
.LABEL.__LABEL455:
	ld a, 1
	ld (_n), a
	jp .LABEL.__LABEL463
.LABEL.__LABEL466:
	ld a, 21
	push af
	ld a, (_n)
	dec a
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL468
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, _n
	inc (hl)
.LABEL.__LABEL463:
	ld a, (_estamina)
	ld hl, (_n - 1)
	cp h
	jp nc, .LABEL.__LABEL466
	ld a, 1
	ld (_n), a
	jp .LABEL.__LABEL469
.LABEL.__LABEL472:
	ld a, 23
	push af
	ld a, (_n)
	dec a
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL474
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, _n
	inc (hl)
.LABEL.__LABEL469:
	ld a, (_magia)
	ld hl, (_n - 1)
	cp h
	jp nc, .LABEL.__LABEL472
	xor a
	call .core.BRIGHT
	call .core.COPY_ATTR
	ld hl, _logo.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 20
	push af
	ld a, 25
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL34
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, 21
	push af
	ld a, 25
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL35
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, 22
	push af
	ld a, 25
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL36
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, _titulo.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 21
	push af
	ld a, 14
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL37
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, 22
	push af
	ld a, 14
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL38
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, _remaster.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 23
	push af
	ld a, 14
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL475
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, 7
	call .core.INK
	call .core.COPY_ATTR
_pintaener__leave:
	ret
_restapone:
	push ix
	ld ix, 0
	add ix, sp
	ld a, (ix+5)
	or a
	jp nz, .LABEL.__LABEL477
	xor a
	call .core.INK
	call .core.COPY_ATTR
	ld a, 19
	push af
	ld a, (_energia)
	dec a
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL15
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
.LABEL.__LABEL477:
	ld a, (ix+5)
	dec a
	jp nz, _restapone__leave
	xor a
	call .core.INK
	call .core.COPY_ATTR
	ld a, 19
	push af
	ld a, (_energiaenem)
	add a, 12
	dec a
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL15
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
_restapone__leave:
	ld sp, ix
	pop ix
	exx
	pop hl
	ex (sp), hl
	exx
	ret
_cursor:
	ld a, (_xcur)
	add a, 2
	ld hl, (_x - 1)
	call .core.__LTI8
	push af
	ld a, (_xcur)
	sub 2
	ld h, a
	ld a, (_x)
	call .core.__LTI8
	pop de
	or d
	jp z, .LABEL.__LABEL481
	ld a, (_x)
	ld (_xcur), a
.LABEL.__LABEL481:
	ld a, (_ycur)
	add a, 2
	ld hl, (_y - 1)
	call .core.__LTI8
	push af
	ld a, (_ycur)
	sub 2
	ld h, a
	ld a, (_y)
	call .core.__LTI8
	pop de
	or d
	jp z, _cursor__leave
	ld a, (_y)
	ld (_ycur), a
_cursor__leave:
	ret
_borraprota:
	push ix
	ld ix, 0
	add ix, sp
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
	ld a, (ix+9)
	dec a
	jp nz, .LABEL.__LABEL485
	ld a, (_xcur)
	ld h, (ix+5)
	call .core.__LEI8
	or a
	jp z, .LABEL.__LABEL486
	ld a, (ix+5)
	ld hl, (_xcur - 1)
	sub h
	call .core.__ABS8
	or a
	jp nz, .LABEL.__LABEL489
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c1)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL71
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c7)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL77
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL489:
	ld a, (ix+5)
	ld hl, (_xcur - 1)
	sub h
	call .core.__ABS8
	dec a
	jp nz, .LABEL.__LABEL491
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	inc a
	call .core.PRINT_AT
	ld a, (_c2)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	inc a
	call .core.PRINT_AT
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	inc a
	call .core.PRINT_AT
	ld a, (_c8)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL78
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL491:
	ld a, (ix+5)
	ld hl, (_xcur - 1)
	sub h
	call .core.__ABS8
	sub 2
	jp nz, .LABEL.__LABEL493
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	add a, 2
	call .core.PRINT_AT
	ld a, (_c3)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL73
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	add a, 2
	call .core.PRINT_AT
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	add a, 2
	call .core.PRINT_AT
	ld a, (_c9)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL79
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL493:
	jp .LABEL.__LABEL485
.LABEL.__LABEL486:
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	dec a
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
	ld a, (ix+5)
	ld hl, (_xcur - 1)
	sub h
	call .core.__ABS8
	dec a
	jp nz, .LABEL.__LABEL495
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	dec a
	call .core.PRINT_AT
	ld a, (_c3)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL73
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	dec a
	call .core.PRINT_AT
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	dec a
	call .core.PRINT_AT
	ld a, (_c9)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL79
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL495:
	ld a, (ix+5)
	ld hl, (_xcur - 1)
	sub h
	call .core.__ABS8
	sub 2
	jp nz, .LABEL.__LABEL485
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	sub 2
	call .core.PRINT_AT
	ld a, (_c2)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	sub 2
	call .core.PRINT_AT
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	sub 2
	call .core.PRINT_AT
	ld a, (_c8)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL78
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL485:
	ld a, (ix+9)
	sub 2
	jp nz, .LABEL.__LABEL499
	ld a, (_xcur)
	ld h, a
	ld a, (ix+5)
	call .core.__LEI8
	or a
	jp z, .LABEL.__LABEL500
	ld a, (ix+5)
	ld hl, (_xcur - 1)
	sub h
	call .core.__ABS8
	or a
	jp nz, .LABEL.__LABEL503
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	add a, 2
	call .core.PRINT_AT
	ld a, (_c3)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL73
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	add a, 2
	call .core.PRINT_AT
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	add a, 2
	call .core.PRINT_AT
	ld a, (_c9)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL79
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL503:
	ld a, (ix+5)
	ld hl, (_xcur - 1)
	sub h
	call .core.__ABS8
	dec a
	jp nz, .LABEL.__LABEL505
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	inc a
	call .core.PRINT_AT
	ld a, (_c2)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	inc a
	call .core.PRINT_AT
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	inc a
	call .core.PRINT_AT
	ld a, (_c8)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL78
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL505:
	ld a, (ix+5)
	ld hl, (_xcur - 1)
	sub h
	call .core.__ABS8
	sub 2
	jp nz, .LABEL.__LABEL507
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c1)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL71
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c7)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL77
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL507:
	jp .LABEL.__LABEL499
.LABEL.__LABEL500:
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	inc a
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
	ld a, (ix+5)
	ld hl, (_xcur - 1)
	sub h
	call .core.__ABS8
	dec a
	jp nz, .LABEL.__LABEL509
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	add a, 3
	call .core.PRINT_AT
	ld a, (_c1)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL71
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	add a, 3
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	add a, 3
	call .core.PRINT_AT
	ld a, (_c7)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL77
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL509:
	ld a, (ix+5)
	ld hl, (_xcur - 1)
	sub h
	call .core.__ABS8
	sub 2
	jp nz, .LABEL.__LABEL499
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	add a, 4
	call .core.PRINT_AT
	ld a, (_c2)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	add a, 4
	call .core.PRINT_AT
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	add a, 4
	call .core.PRINT_AT
	ld a, (_c8)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL78
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL499:
	ld a, (ix+9)
	sub 4
	jp nz, .LABEL.__LABEL513
	ld a, (_ycur)
	ld h, a
	ld a, (ix+7)
	call .core.__LEI8
	or a
	jp z, .LABEL.__LABEL514
	ld a, (ix+7)
	ld hl, (_ycur - 1)
	sub h
	call .core.__ABS8
	or a
	jp nz, .LABEL.__LABEL517
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c7)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL77
	xor a
	call .core.__PRINTSTR
	ld a, (_c8)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL78
	xor a
	call .core.__PRINTSTR
	ld a, (_c9)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL79
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL517:
	ld a, (ix+7)
	ld hl, (_ycur - 1)
	sub h
	call .core.__ABS8
	dec a
	jp nz, .LABEL.__LABEL519
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL519:
	ld a, (ix+7)
	ld hl, (_ycur - 1)
	sub h
	call .core.__ABS8
	sub 2
	jp nz, .LABEL.__LABEL521
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c1)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL71
	xor a
	call .core.__PRINTSTR
	ld a, (_c2)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	ld a, (_c3)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL73
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL521:
	jp .LABEL.__LABEL513
.LABEL.__LABEL514:
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	inc a
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
	ld a, (ix+7)
	ld hl, (_ycur - 1)
	sub h
	call .core.__ABS8
	dec a
	jp nz, .LABEL.__LABEL523
	ld a, (_ycur)
	add a, 3
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c1)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL71
	xor a
	call .core.__PRINTSTR
	ld a, (_c2)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	ld a, (_c3)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL73
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL523:
	ld a, (ix+7)
	ld hl, (_ycur - 1)
	sub h
	call .core.__ABS8
	sub 2
	jp nz, .LABEL.__LABEL513
	ld a, (_ycur)
	add a, 4
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL513:
	ld a, (ix+9)
	sub 3
	jp nz, _borraprota__leave
	ld a, (_ycur)
	ld h, (ix+7)
	call .core.__LEI8
	or a
	jp z, .LABEL.__LABEL528
	ld a, (ix+7)
	ld hl, (_ycur - 1)
	sub h
	call .core.__ABS8
	or a
	jp nz, .LABEL.__LABEL531
	ld a, (_ycur)
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c1)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL71
	xor a
	call .core.__PRINTSTR
	ld a, (_c2)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	ld a, (_c3)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL73
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL531:
	ld a, (ix+7)
	ld hl, (_ycur - 1)
	sub h
	call .core.__ABS8
	dec a
	jp nz, .LABEL.__LABEL533
	ld a, (_ycur)
	inc a
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL533:
	ld a, (ix+7)
	ld hl, (_ycur - 1)
	sub h
	call .core.__ABS8
	sub 2
	jp nz, .LABEL.__LABEL535
	ld a, (_ycur)
	add a, 2
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c7)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL77
	xor a
	call .core.__PRINTSTR
	ld a, (_c8)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL78
	xor a
	call .core.__PRINTSTR
	ld a, (_c9)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL79
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL535:
	jp _borraprota__leave
.LABEL.__LABEL528:
	ld a, (_xcur)
	ld h, 3
	call .core.__DIVU8_FAST
	ld l, a
	ld h, 0
	push hl
	ld a, (_ycur)
	ld h, 3
	call .core.__DIVU8_FAST
	dec a
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
	ld a, (ix+7)
	ld hl, (_ycur - 1)
	sub h
	call .core.__ABS8
	dec a
	jp nz, .LABEL.__LABEL537
	ld a, (_ycur)
	dec a
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c7)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL77
	xor a
	call .core.__PRINTSTR
	ld a, (_c8)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL78
	xor a
	call .core.__PRINTSTR
	ld a, (_c9)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL79
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL537:
	ld a, (ix+7)
	ld hl, (_ycur - 1)
	sub h
	call .core.__ABS8
	sub 2
	jp nz, _borraprota__leave
	ld a, (_ycur)
	sub 2
	push af
	ld a, (_xcur)
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
_borraprota__leave:
	ld sp, ix
	pop ix
	exx
	pop hl
	pop bc
	pop bc
	ex (sp), hl
	exx
	ret
_borraesq:
	push ix
	ld ix, 0
	add ix, sp
	xor a
	call .core.PAPER
	xor a
	call .core.INK
	call .core.COPY_ATTR
	ld a, (_tipo)
	dec a
	jp nz, .LABEL.__LABEL541
	ld a, (ix+7)
	push af
	ld a, (ix+5)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (ix+7)
	inc a
	push af
	ld a, (ix+5)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (ix+7)
	add a, 2
	push af
	ld a, (ix+5)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
.LABEL.__LABEL541:
	ld a, (_tipo)
	sub 2
	jp nz, .LABEL.__LABEL543
	ld a, (ix+7)
	push af
	ld a, (ix+5)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (ix+7)
	inc a
	push af
	ld a, (ix+5)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (ix+7)
	add a, 2
	push af
	ld a, (ix+5)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (ix+7)
	add a, 3
	push af
	ld a, (ix+5)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (ix+7)
	add a, 4
	push af
	ld a, (ix+5)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (ix+7)
	add a, 5
	push af
	ld a, (ix+5)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
.LABEL.__LABEL543:
	ld a, (_tipo)
	sub 3
	jp nz, _borraesq__leave
	ld a, (ix+7)
	push af
	ld a, (ix+5)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (ix+7)
	inc a
	push af
	ld a, (ix+5)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
_borraesq__leave:
	ld sp, ix
	pop ix
	exx
	pop hl
	pop bc
	ex (sp), hl
	exx
	ret
_lista:
	ld a, (_tile)
	or a
	jp nz, .LABEL.__LABEL547
	ld hl, _vacio.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	xor a
	ld (_c1), a
	xor a
	ld (_c2), a
	xor a
	ld (_c3), a
	xor a
	ld (_c4), a
	xor a
	ld (_c5), a
	xor a
	ld (_c6), a
	xor a
	ld (_c7), a
	xor a
	ld (_c8), a
	xor a
	ld (_c9), a
.LABEL.__LABEL547:
	ld a, (_tile)
	dec a
	jp nz, .LABEL.__LABEL549
	ld hl, _escaleraizq.__DATA__
	ld de, 72
	add hl, de
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 3
	ld (_c1), a
	ld a, 2
	ld (_c2), a
	ld a, 2
	ld (_c3), a
	ld a, 3
	ld (_c4), a
	ld a, 2
	ld (_c5), a
	ld a, 2
	ld (_c6), a
	ld a, 3
	ld (_c7), a
	ld a, 2
	ld (_c8), a
	ld a, 2
	ld (_c9), a
.LABEL.__LABEL549:
	ld a, (_tile)
	sub 2
	jp nz, .LABEL.__LABEL551
	ld hl, _paredizq.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 1
	ld (_c1), a
	ld a, 1
	ld (_c2), a
	ld a, 1
	ld (_c3), a
	ld a, 1
	ld (_c4), a
	ld a, 1
	ld (_c5), a
	ld a, 1
	ld (_c6), a
	ld a, 1
	ld (_c7), a
	ld a, 1
	ld (_c8), a
	ld a, 1
	ld (_c9), a
.LABEL.__LABEL551:
	ld a, (_tile)
	sub 3
	jp nz, .LABEL.__LABEL553
	ld hl, _pareddrch.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 1
	ld (_c1), a
	ld a, 1
	ld (_c2), a
	ld a, 1
	ld (_c3), a
	ld a, 1
	ld (_c4), a
	ld a, 1
	ld (_c5), a
	ld a, 1
	ld (_c6), a
	ld a, 1
	ld (_c7), a
	ld a, 1
	ld (_c8), a
	ld a, 1
	ld (_c9), a
.LABEL.__LABEL553:
	ld a, (_tile)
	sub 4
	jp nz, .LABEL.__LABEL555
	ld hl, _ladrillos.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 7
	ld (_c2), a
	ld a, 7
	ld (_c3), a
	ld a, 7
	ld (_c4), a
	ld a, 7
	ld (_c5), a
	ld a, 7
	ld (_c6), a
	ld a, 7
	ld (_c7), a
	ld a, 7
	ld (_c8), a
	ld a, 7
	ld (_c9), a
.LABEL.__LABEL555:
	ld a, (_tile)
	sub 5
	jp nz, .LABEL.__LABEL557
	ld hl, _puerta.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 5
	ld (_c1), a
	ld a, 7
	ld (_c2), a
	ld a, 7
	ld (_c3), a
	ld a, 5
	ld (_c4), a
	ld a, 5
	ld (_c5), a
	ld a, 6
	ld (_c6), a
	ld a, 5
	ld (_c7), a
	ld a, 6
	ld (_c8), a
	ld a, 6
	ld (_c9), a
.LABEL.__LABEL557:
	ld a, (_tile)
	sub 6
	jp nz, .LABEL.__LABEL559
	ld hl, _puertaizq.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 7
	ld (_c2), a
	ld a, 5
	ld (_c3), a
	ld a, 6
	ld (_c4), a
	ld a, 5
	ld (_c5), a
	ld a, 5
	ld (_c6), a
	ld a, 6
	ld (_c7), a
	ld a, 6
	ld (_c8), a
	ld a, 5
	ld (_c9), a
.LABEL.__LABEL559:
	ld a, (_tile)
	sub 7
	jp nz, .LABEL.__LABEL561
	ld hl, _barrilroto.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 7
	ld (_c2), a
	ld a, 4
	ld (_c3), a
	ld a, 7
	ld (_c4), a
	ld a, 6
	ld (_c5), a
	ld a, 4
	ld (_c6), a
	ld a, 6
	ld (_c7), a
	ld a, 6
	ld (_c8), a
	ld a, 4
	ld (_c9), a
.LABEL.__LABEL561:
	ld a, (_tile)
	sub 8
	jp nz, .LABEL.__LABEL563
	ld hl, _barrillave.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 7
	ld (_c2), a
	ld a, 7
	ld (_c3), a
	ld a, 7
	ld (_c4), a
	ld a, 7
	ld (_c5), a
	ld a, 7
	ld (_c6), a
	ld a, 7
	ld (_c7), a
	ld a, 6
	ld (_c8), a
	ld a, 6
	ld (_c9), a
.LABEL.__LABEL563:
	ld a, (_tile)
	sub 9
	jp nz, .LABEL.__LABEL565
	ld hl, _barrilmagia.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 5
	ld (_c1), a
	ld a, 5
	ld (_c2), a
	ld a, 5
	ld (_c3), a
	ld a, 5
	ld (_c4), a
	ld a, 5
	ld (_c5), a
	ld a, 5
	ld (_c6), a
	ld a, 5
	ld (_c7), a
	ld a, 1
	ld (_c8), a
	ld a, 1
	ld (_c9), a
.LABEL.__LABEL565:
	ld a, (_tile)
	sub 10
	jp nz, .LABEL.__LABEL567
	ld hl, _ladrillos.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 3
	ld (_c1), a
	ld a, 3
	ld (_c2), a
	ld a, 3
	ld (_c3), a
	ld a, 3
	ld (_c4), a
	ld a, 3
	ld (_c5), a
	ld a, 3
	ld (_c6), a
	ld a, 3
	ld (_c7), a
	ld a, 3
	ld (_c8), a
	ld a, 3
	ld (_c9), a
.LABEL.__LABEL567:
	ld a, (_tile)
	sub 11
	jp nz, .LABEL.__LABEL569
	ld hl, _mesaizq.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 1
	ld (_c1), a
	ld a, 1
	ld (_c2), a
	ld a, 1
	ld (_c3), a
	ld a, 1
	ld (_c4), a
	ld a, 1
	ld (_c5), a
	ld a, 1
	ld (_c6), a
	ld a, 1
	ld (_c7), a
	ld a, 1
	ld (_c8), a
	ld a, 1
	ld (_c9), a
.LABEL.__LABEL569:
	ld a, (_tile)
	sub 12
	jp nz, .LABEL.__LABEL571
	ld hl, _mesadrch.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 1
	ld (_c1), a
	ld a, 1
	ld (_c2), a
	ld a, 1
	ld (_c3), a
	ld a, 1
	ld (_c4), a
	ld a, 1
	ld (_c5), a
	ld a, 1
	ld (_c6), a
	ld a, 1
	ld (_c7), a
	ld a, 1
	ld (_c8), a
	ld a, 1
	ld (_c9), a
.LABEL.__LABEL571:
	ld a, (_tile)
	sub 13
	jp nz, .LABEL.__LABEL573
	ld hl, _puertacelda.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 5
	ld (_c1), a
	ld a, 7
	ld (_c2), a
	ld a, 7
	ld (_c3), a
	ld a, 5
	ld (_c4), a
	ld a, 5
	ld (_c5), a
	ld a, 6
	ld (_c6), a
	ld a, 5
	ld (_c7), a
	ld a, 6
	ld (_c8), a
	ld a, 6
	ld (_c9), a
.LABEL.__LABEL573:
	ld a, (_tile)
	sub 14
	jp nz, .LABEL.__LABEL575
	ld hl, _techotras.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 1
	ld (_c1), a
	ld a, 1
	ld (_c2), a
	ld a, 1
	ld (_c3), a
	ld a, 1
	ld (_c4), a
	ld a, 1
	ld (_c5), a
	ld a, 1
	ld (_c6), a
	ld a, 1
	ld (_c7), a
	ld a, 1
	ld (_c8), a
	ld a, 1
	ld (_c9), a
.LABEL.__LABEL575:
	ld a, (_tile)
	sub 15
	jp nz, .LABEL.__LABEL577
	ld hl, _hoguera.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 7
	ld (_c2), a
	ld a, 7
	ld (_c3), a
	ld a, 5
	ld (_c4), a
	ld a, 5
	ld (_c5), a
	ld a, 5
	ld (_c6), a
	ld a, 7
	ld (_c7), a
	ld a, 6
	ld (_c8), a
	ld a, 6
	ld (_c9), a
.LABEL.__LABEL577:
	ld a, (_tile)
	sub 16
	jp nz, .LABEL.__LABEL579
	ld hl, _cielo.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 5
	ld (_c1), a
	ld a, 5
	ld (_c2), a
	ld a, 5
	ld (_c3), a
	ld a, 5
	ld (_c4), a
	ld a, 5
	ld (_c5), a
	ld a, 5
	ld (_c6), a
	ld a, 5
	ld (_c7), a
	ld a, 5
	ld (_c8), a
	ld a, 5
	ld (_c9), a
.LABEL.__LABEL579:
	ld a, (_tile)
	sub 17
	jp nz, .LABEL.__LABEL581
	ld hl, _techotras2.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 1
	ld (_c1), a
	ld a, 1
	ld (_c2), a
	ld a, 1
	ld (_c3), a
	ld a, 1
	ld (_c4), a
	ld a, 1
	ld (_c5), a
	ld a, 1
	ld (_c6), a
	ld a, 1
	ld (_c7), a
	ld a, 1
	ld (_c8), a
	ld a, 1
	ld (_c9), a
.LABEL.__LABEL581:
	ld a, (_tile)
	sub 18
	jp nz, .LABEL.__LABEL583
	ld hl, _paredcastdrch.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 4
	ld (_c2), a
	ld a, 4
	ld (_c3), a
	ld a, 5
	ld (_c4), a
	ld a, 4
	ld (_c5), a
	ld a, 4
	ld (_c6), a
	ld a, 5
	ld (_c7), a
	ld a, 4
	ld (_c8), a
	ld a, 4
	ld (_c9), a
.LABEL.__LABEL583:
	ld a, (_tile)
	sub 19
	jp nz, .LABEL.__LABEL585
	ld hl, _paredcastizq.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 4
	ld (_c1), a
	ld a, 4
	ld (_c2), a
	ld a, 7
	ld (_c3), a
	ld a, 4
	ld (_c4), a
	ld a, 4
	ld (_c5), a
	ld a, 5
	ld (_c6), a
	ld a, 4
	ld (_c7), a
	ld a, 4
	ld (_c8), a
	ld a, 5
	ld (_c9), a
.LABEL.__LABEL585:
	ld a, (_tile)
	sub 20
	jp nz, .LABEL.__LABEL587
	ld hl, _suelocentro.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 3
	ld (_c1), a
	ld a, 3
	ld (_c2), a
	ld a, 3
	ld (_c3), a
	ld a, 3
	ld (_c4), a
	ld a, 1
	ld (_c5), a
	ld a, 3
	ld (_c6), a
	ld a, 1
	ld (_c7), a
	ld a, 1
	ld (_c8), a
	ld a, 1
	ld (_c9), a
.LABEL.__LABEL587:
	ld a, (_tile)
	sub 21
	jp nz, .LABEL.__LABEL589
	ld hl, _escaleraizq.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 3
	ld (_c1), a
	ld a, 2
	ld (_c2), a
	ld a, 2
	ld (_c3), a
	ld a, 3
	ld (_c4), a
	ld a, 2
	ld (_c5), a
	ld a, 2
	ld (_c6), a
	ld a, 3
	ld (_c7), a
	ld a, 2
	ld (_c8), a
	ld a, 2
	ld (_c9), a
.LABEL.__LABEL589:
	ld a, (_tile)
	sub 22
	jp nz, .LABEL.__LABEL591
	ld hl, _techo.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 1
	ld (_c1), a
	ld a, 1
	ld (_c2), a
	ld a, 1
	ld (_c3), a
	ld a, 1
	ld (_c4), a
	ld a, 1
	ld (_c5), a
	ld a, 1
	ld (_c6), a
	ld a, 3
	ld (_c7), a
	ld a, 3
	ld (_c8), a
	ld a, 3
	ld (_c9), a
.LABEL.__LABEL591:
	ld a, (_tile)
	sub 23
	jp nz, .LABEL.__LABEL593
	ld hl, _paredizqfija.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 1
	ld (_c1), a
	ld a, 1
	ld (_c2), a
	ld a, 3
	ld (_c3), a
	ld a, 1
	ld (_c4), a
	ld a, 1
	ld (_c5), a
	ld a, 3
	ld (_c6), a
	ld a, 1
	ld (_c7), a
	ld a, 1
	ld (_c8), a
	ld a, 3
	ld (_c9), a
.LABEL.__LABEL593:
	ld a, (_tile)
	sub 24
	jp nz, .LABEL.__LABEL595
	ld hl, _pareddrchfija.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 3
	ld (_c1), a
	ld a, 1
	ld (_c2), a
	ld a, 1
	ld (_c3), a
	ld a, 3
	ld (_c4), a
	ld a, 1
	ld (_c5), a
	ld a, 1
	ld (_c6), a
	ld a, 3
	ld (_c7), a
	ld a, 1
	ld (_c8), a
	ld a, 1
	ld (_c9), a
.LABEL.__LABEL595:
	ld a, (_tile)
	sub 25
	jp nz, .LABEL.__LABEL597
	ld hl, _puertacerrada.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 7
	ld (_c2), a
	ld a, 7
	ld (_c3), a
	ld a, 5
	ld (_c4), a
	ld a, 5
	ld (_c5), a
	ld a, 5
	ld (_c6), a
	ld a, 5
	ld (_c7), a
	ld a, 5
	ld (_c8), a
	ld a, 5
	ld (_c9), a
.LABEL.__LABEL597:
	ld a, (_tile)
	sub 26
	jp nz, .LABEL.__LABEL599
	ld hl, _puertacerradaizq.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 7
	ld (_c2), a
	ld a, 7
	ld (_c3), a
	ld a, 5
	ld (_c4), a
	ld a, 5
	ld (_c5), a
	ld a, 5
	ld (_c6), a
	ld a, 5
	ld (_c7), a
	ld a, 5
	ld (_c8), a
	ld a, 5
	ld (_c9), a
.LABEL.__LABEL599:
	ld a, (_tile)
	sub 27
	sub 1
	sbc a, a
	ld d, a
	ld a, (_tile)
	sub 28
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_tile)
	sub 29
	sub 1
	sbc a, a
	or d
	jp z, .LABEL.__LABEL601
	ld hl, _barril.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 7
	ld (_c2), a
	ld a, 4
	ld (_c3), a
	ld a, 7
	ld (_c4), a
	ld a, 6
	ld (_c5), a
	ld a, 4
	ld (_c6), a
	ld a, 6
	ld (_c7), a
	ld a, 6
	ld (_c8), a
	ld a, 4
	ld (_c9), a
.LABEL.__LABEL601:
	ld a, (_tile)
	sub 30
	jp nz, .LABEL.__LABEL603
	ld hl, _suelocastillo.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 5
	ld (_c2), a
	ld a, 5
	ld (_c3), a
	ld a, 4
	ld (_c4), a
	ld a, 4
	ld (_c5), a
	ld a, 4
	ld (_c6), a
	ld a, 4
	ld (_c7), a
	ld a, 4
	ld (_c8), a
	ld a, 4
	ld (_c9), a
.LABEL.__LABEL603:
	ld a, (_tile)
	sub 31
	jp nz, .LABEL.__LABEL605
	ld hl, _suelobosque.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 4
	ld (_c1), a
	ld a, 4
	ld (_c2), a
	ld a, 4
	ld (_c3), a
	ld a, 4
	ld (_c4), a
	ld a, 6
	ld (_c5), a
	ld a, 4
	ld (_c6), a
	ld a, 6
	ld (_c7), a
	ld a, 6
	ld (_c8), a
	ld a, 6
	ld (_c9), a
.LABEL.__LABEL605:
	ld a, (_tile)
	sub 32
	jp nz, .LABEL.__LABEL607
	ld hl, _plataforma.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 2
	ld (_c1), a
	ld a, 2
	ld (_c2), a
	ld a, 2
	ld (_c3), a
	ld a, 2
	ld (_c4), a
	ld a, 2
	ld (_c5), a
	ld a, 2
	ld (_c6), a
	ld a, 2
	ld (_c7), a
	ld a, 2
	ld (_c8), a
	ld a, 2
	ld (_c9), a
.LABEL.__LABEL607:
	ld a, (_tile)
	sub 33
	jp nz, .LABEL.__LABEL609
	ld hl, _paredcastdrch.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 4
	ld (_c2), a
	ld a, 4
	ld (_c3), a
	ld a, 5
	ld (_c4), a
	ld a, 4
	ld (_c5), a
	ld a, 4
	ld (_c6), a
	ld a, 5
	ld (_c7), a
	ld a, 4
	ld (_c8), a
	ld a, 4
	ld (_c9), a
.LABEL.__LABEL609:
	ld a, (_tile)
	sub 34
	jp nz, .LABEL.__LABEL611
	ld hl, _paredcastizq.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 4
	ld (_c1), a
	ld a, 4
	ld (_c2), a
	ld a, 7
	ld (_c3), a
	ld a, 4
	ld (_c4), a
	ld a, 4
	ld (_c5), a
	ld a, 5
	ld (_c6), a
	ld a, 4
	ld (_c7), a
	ld a, 4
	ld (_c8), a
	ld a, 5
	ld (_c9), a
.LABEL.__LABEL611:
	ld a, (_tile)
	sub 35
	jp nz, .LABEL.__LABEL613
	ld hl, _ojojefe.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 6
	ld (_c2), a
	ld a, 5
	ld (_c3), a
	ld a, 7
	ld (_c4), a
	ld a, 6
	ld (_c5), a
	ld a, 5
	ld (_c6), a
	ld a, 7
	ld (_c7), a
	ld a, 6
	ld (_c8), a
	ld a, 5
	ld (_c9), a
.LABEL.__LABEL613:
	ld a, (_tile)
	sub 36
	jp nz, .LABEL.__LABEL615
	ld hl, _garraizq.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 4
	ld (_c1), a
	ld a, 4
	ld (_c2), a
	ld a, 6
	ld (_c3), a
	ld a, 4
	ld (_c4), a
	ld a, 6
	ld (_c5), a
	ld a, 6
	ld (_c6), a
	ld a, 5
	ld (_c7), a
	ld a, 7
	ld (_c8), a
	ld a, 7
	ld (_c9), a
.LABEL.__LABEL615:
	ld a, (_tile)
	sub 37
	jp nz, .LABEL.__LABEL617
	ld hl, _garradrch.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 6
	ld (_c1), a
	ld a, 4
	ld (_c2), a
	ld a, 4
	ld (_c3), a
	ld a, 6
	ld (_c4), a
	ld a, 6
	ld (_c5), a
	ld a, 4
	ld (_c6), a
	ld a, 7
	ld (_c7), a
	ld a, 7
	ld (_c8), a
	ld a, 5
	ld (_c9), a
.LABEL.__LABEL617:
	ld a, (_tile)
	sub 38
	jp nz, .LABEL.__LABEL619
	ld hl, _mago.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 5
	ld (_c1), a
	ld a, 7
	ld (_c2), a
	ld a, 7
	ld (_c3), a
	ld a, 5
	ld (_c4), a
	ld a, 5
	ld (_c5), a
	ld a, 7
	ld (_c6), a
	ld a, 5
	ld (_c7), a
	ld a, 5
	ld (_c8), a
	ld a, 7
	ld (_c9), a
.LABEL.__LABEL619:
	ld a, (_tile)
	sub 39
	jp nz, .LABEL.__LABEL621
	ld hl, _puertarocaizq.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 5
	ld (_c2), a
	ld a, 5
	ld (_c3), a
	ld a, 7
	ld (_c4), a
	ld a, 5
	ld (_c5), a
	ld a, 5
	ld (_c6), a
	ld a, 5
	ld (_c7), a
	ld a, 5
	ld (_c8), a
	ld a, 5
	ld (_c9), a
.LABEL.__LABEL621:
	ld a, (_tile)
	sub 40
	jp nz, .LABEL.__LABEL623
	ld hl, _puertarocadrch.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 5
	ld (_c1), a
	ld a, 5
	ld (_c2), a
	ld a, 7
	ld (_c3), a
	ld a, 5
	ld (_c4), a
	ld a, 5
	ld (_c5), a
	ld a, 7
	ld (_c6), a
	ld a, 5
	ld (_c7), a
	ld a, 5
	ld (_c8), a
	ld a, 5
	ld (_c9), a
.LABEL.__LABEL623:
	ld a, (_tile)
	sub 41
	jp nz, .LABEL.__LABEL625
	ld hl, _ladrillos.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 7
	ld (_c1), a
	ld a, 7
	ld (_c2), a
	ld a, 7
	ld (_c3), a
	ld a, 7
	ld (_c4), a
	ld a, 7
	ld (_c5), a
	ld a, 7
	ld (_c6), a
	ld a, 7
	ld (_c7), a
	ld a, 7
	ld (_c8), a
	ld a, 7
	ld (_c9), a
.LABEL.__LABEL625:
	ld a, (_tile)
	sub 42
	jp nz, .LABEL.__LABEL627
	ld hl, _ladrillos.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 3
	ld (_c1), a
	ld a, 3
	ld (_c2), a
	ld a, 3
	ld (_c3), a
	ld a, 3
	ld (_c4), a
	ld a, 3
	ld (_c5), a
	ld a, 3
	ld (_c6), a
	ld a, 3
	ld (_c7), a
	ld a, 3
	ld (_c8), a
	ld a, 3
	ld (_c9), a
.LABEL.__LABEL627:
	ld a, (_tile)
	sub 43
	jp nz, .LABEL.__LABEL629
	ld hl, _techocastillo.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 4
	ld (_c1), a
	ld a, 4
	ld (_c2), a
	ld a, 4
	ld (_c3), a
	ld a, 4
	ld (_c4), a
	ld a, 4
	ld (_c5), a
	ld a, 4
	ld (_c6), a
	ld a, 7
	ld (_c7), a
	ld a, 5
	ld (_c8), a
	ld a, 5
	ld (_c9), a
.LABEL.__LABEL629:
	ld a, 6
	ld hl, (_pant - 1)
	cp h
	sbc a, a
	push af
	ld a, (_pant)
	cp 10
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL836
	ld a, h
.LABEL.__LABEL836:
	push af
	ld a, 16
	ld hl, (_pant - 1)
	cp h
	sbc a, a
	push af
	ld a, (_pant)
	cp 20
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL837
	ld a, h
.LABEL.__LABEL837:
	pop de
	or d
	ld d, a
	ld a, (_pant)
	sub 29
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_pant)
	sub 39
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_pant)
	sub 49
	sub 1
	sbc a, a
	or d
	jp z, _lista__leave
	ld a, (_tile)
	sub 20
	sub 1
	sbc a, a
	ld d, a
	ld a, (_tile)
	sub 22
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_tile)
	sub 23
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_tile)
	sub 24
	sub 1
	sbc a, a
	or d
	jp z, _lista__leave
	ld a, 2
	ld (_c1), a
	ld a, 2
	ld (_c2), a
	ld a, 2
	ld (_c3), a
	ld a, 2
	ld (_c4), a
	ld a, 2
	ld (_c5), a
	ld a, 2
	ld (_c6), a
	ld a, 2
	ld (_c7), a
	ld a, 2
	ld (_c8), a
	ld a, 2
	ld (_c9), a
_lista__leave:
	ret
_pantalla:
	ld a, 100
	ld (_energiajefe), a
	call _limpia
	xor a
	ld (_yy), a
	jp .LABEL.__LABEL634
.LABEL.__LABEL637:
	xor a
	ld (_xx), a
	jp .LABEL.__LABEL639
.LABEL.__LABEL642:
	ld a, (_xx)
	ld l, a
	ld h, 0
	push hl
	ld a, (_yy)
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
	ld a, (_tile)
	or a
	jp nz, .LABEL.__LABEL644
	xor a
	call .core.INK
	call .core.COPY_ATTR
	ld a, (_yy)
	ld h, 3
	call .core.__MUL8_FAST
	push af
	ld a, (_xx)
	ld h, 3
	call .core.__MUL8_FAST
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_yy)
	ld h, 3
	call .core.__MUL8_FAST
	inc a
	push af
	ld a, (_xx)
	ld h, 3
	call .core.__MUL8_FAST
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_yy)
	ld h, 3
	call .core.__MUL8_FAST
	add a, 2
	push af
	ld a, (_xx)
	ld h, 3
	call .core.__MUL8_FAST
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL60
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	jp .LABEL.__LABEL645
.LABEL.__LABEL644:
	ld a, (_yy)
	ld h, 3
	call .core.__MUL8_FAST
	push af
	ld a, (_xx)
	ld h, 3
	call .core.__MUL8_FAST
	call .core.PRINT_AT
	ld a, (_c1)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL71
	xor a
	call .core.__PRINTSTR
	ld a, (_c2)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	ld a, (_c3)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL73
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yy)
	ld h, 3
	call .core.__MUL8_FAST
	inc a
	push af
	ld a, (_xx)
	ld h, 3
	call .core.__MUL8_FAST
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yy)
	ld h, 3
	call .core.__MUL8_FAST
	add a, 2
	push af
	ld a, (_xx)
	ld h, 3
	call .core.__MUL8_FAST
	call .core.PRINT_AT
	ld a, (_c7)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL77
	xor a
	call .core.__PRINTSTR
	ld a, (_c8)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL78
	xor a
	call .core.__PRINTSTR
	ld a, (_c9)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL79
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL645:
	xor a
	call .core.BRIGHT
	ld hl, _xx
	inc (hl)
.LABEL.__LABEL639:
	ld a, 7
	ld hl, (_xx - 1)
	cp h
	jp nc, .LABEL.__LABEL642
	ld hl, _yy
	inc (hl)
.LABEL.__LABEL634:
	ld a, 5
	ld hl, (_yy - 1)
	cp h
	jp nc, .LABEL.__LABEL637
	call .core.COPY_ATTR
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _tablaenem
	call .core.__ARRAY
	ld a, (hl)
	or a
	jp z, .LABEL.__LABEL646
	ld a, (_pant)
	sub 71
	sub 1
	sbc a, a
	ld d, a
	ld a, (_pant)
	sub 53
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_pant)
	sub 55
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_pant)
	sub 20
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_pant)
	sub 37
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_pant)
	sub 66
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_pant)
	sub 68
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_pant)
	sub 29
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_pant)
	sub 18
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_pant)
	sub 19
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_pant)
	sub 43
	sub 1
	sbc a, a
	or d
	jp z, .LABEL.__LABEL648
	ld a, 1
	ld (_direnem), a
	jp .LABEL.__LABEL649
.LABEL.__LABEL648:
	ld a, 255
	ld (_direnem), a
.LABEL.__LABEL649:
	ld a, (_pant)
	sub 16
	jp nz, .LABEL.__LABEL650
	ld a, 16
	ld (_topecontanienem), a
	jp .LABEL.__LABEL651
.LABEL.__LABEL650:
	ld a, 10
	ld (_topecontanienem), a
.LABEL.__LABEL651:
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _tablaenem
	call .core.__ARRAY
	ld a, (hl)
	dec a
	jp nz, .LABEL.__LABEL653
	ld a, 1
	ld (_tipo), a
	ld a, (_direnem)
	sub 255
	jp nz, .LABEL.__LABEL655
	ld hl, _esqizq.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL655:
	ld a, (_direnem)
	dec a
	jp nz, .LABEL.__LABEL653
	ld hl, _esqdrch.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL653:
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _tablaenem
	call .core.__ARRAY
	ld a, (hl)
	sub 2
	jp nz, .LABEL.__LABEL659
	ld a, 2
	ld (_tipo), a
	ld a, (_direnem)
	sub 255
	jp nz, .LABEL.__LABEL661
	ld hl, _arbolizq.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 4
	call .core.INK
.LABEL.__LABEL661:
	call .core.COPY_ATTR
	ld a, (_direnem)
	dec a
	jp nz, .LABEL.__LABEL659
	ld hl, _arboldrch.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 4
	call .core.INK
.LABEL.__LABEL659:
	call .core.COPY_ATTR
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _tablaenem
	call .core.__ARRAY
	ld a, (hl)
	sub 3
	jp nz, .LABEL.__LABEL665
	ld a, 3
	ld (_tipo), a
	ld a, (_direnem)
	sub 255
	jp nz, .LABEL.__LABEL667
	ld hl, _rataizq.__DATA__
	ld de, 48
	add hl, de
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL667:
	ld a, (_direnem)
	dec a
	jp nz, .LABEL.__LABEL665
	ld hl, _ratadrch.__DATA__
	ld de, 48
	add hl, de
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
.LABEL.__LABEL665:
	ld a, 1
	ld (_enemigo), a
	xor a
	ld (_atacaenem), a
	xor a
	ld (_contanienem), a
	ld hl, 0
	ld (_anienem), hl
	xor a
	ld (_retirada), a
	ld hl, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _posenem
	call .core.__ARRAY
	ld a, (hl)
	ld (_xesq), a
	ld hl, 1
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _posenem
	call .core.__ARRAY
	ld a, (hl)
	ld (_yesq), a
	ld a, (_tipo)
	dec a
	jp nz, .LABEL.__LABEL671
	ld a, 6
	ld (_energiaenem), a
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL2
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	inc a
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL428
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	add a, 2
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL429
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL671:
	ld a, (_tipo)
	sub 2
	jp nz, .LABEL.__LABEL673
	ld a, 12
	ld (_energiaenem), a
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL430
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	inc a
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL431
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	add a, 2
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL432
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	add a, 3
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL433
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	add a, 4
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL434
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	add a, 5
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL435
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL673:
	ld a, (_tipo)
	sub 3
	jp nz, .LABEL.__LABEL675
	ld a, 1
	ld (_energiaenem), a
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL414
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	inc a
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL415
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL675:
	ld a, (_energiaenem)
	sub 3
	ld (_energiatmp), a
	jp .LABEL.__LABEL647
.LABEL.__LABEL646:
	xor a
	ld (_enemigo), a
.LABEL.__LABEL647:
	call _pintaener
	ld a, (_pant)
	sub 9
	jp nz, _pantalla__leave
	ld hl, _diente.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 10
	ld (_xx), a
	jp .LABEL.__LABEL678
.LABEL.__LABEL681:
	xor a
	push af
	ld a, (_xx)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL683
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, _xx
	inc (hl)
.LABEL.__LABEL678:
	ld a, 13
	ld hl, (_xx - 1)
	cp h
	jp nc, .LABEL.__LABEL681
_pantalla__leave:
	ret
_limpia:
	xor a
	call .core.BORDER
	xor a
	call .core.PAPER
	xor a
	call .core.INK
	call .core.COPY_ATTR
	call .core.CLS
	xor a
	ld (_yy), a
	jp .LABEL.__LABEL684
.LABEL.__LABEL687:
	xor a
	ld (_xx), a
	jp .LABEL.__LABEL689
.LABEL.__LABEL692:
	ld a, (_yy)
	push af
	ld a, (_xx)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL15
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld hl, _xx
	inc (hl)
.LABEL.__LABEL689:
	ld a, 23
	ld hl, (_xx - 1)
	cp h
	jp nc, .LABEL.__LABEL692
	ld hl, _yy
	inc (hl)
.LABEL.__LABEL684:
	ld a, 17
	ld hl, (_yy - 1)
	cp h
	jp nc, .LABEL.__LABEL687
_limpia__leave:
	ret
_muerte:
	ld hl, 2949
	push hl
	ld hl, 3
	call .core.__BEEPER
	ld a, 2
	call .core.BORDER
	ld hl, 2782
	push hl
	ld hl, 3
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 2624
	push hl
	ld hl, 3
	call .core.__BEEPER
	ld a, 2
	call .core.BORDER
	ld hl, 2475
	push hl
	ld hl, 3
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 2335
	push hl
	ld hl, 4
	call .core.__BEEPER
	ld a, 2
	call .core.BORDER
	ld hl, 2202
	push hl
	ld hl, 4
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 2077
	push hl
	ld hl, 4
	call .core.__BEEPER
	ld a, 2
	call .core.BORDER
	ld hl, 1959
	push hl
	ld hl, 5
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 1847
	push hl
	ld hl, 5
	call .core.__BEEPER
	ld a, 2
	call .core.BORDER
	ld hl, 1742
	push hl
	ld hl, 5
	call .core.__BEEPER
	xor a
	call .core.BORDER
	xor a
	ld (_n), a
	jp .LABEL.__LABEL694
.LABEL.__LABEL697:
	ld a, (_n)
	ld l, a
	ld h, 0
	push hl
	ld hl, _tablaenemtmp
	call .core.__ARRAY
	ld a, (hl)
	push af
	ld a, (_n)
	ld l, a
	ld h, 0
	push hl
	ld hl, _tablaenem
	call .core.__ARRAY
	pop af
	ld (hl), a
	ld hl, _n
	inc (hl)
.LABEL.__LABEL694:
	ld a, 89
	ld hl, (_n - 1)
	cp h
	jp nc, .LABEL.__LABEL697
	ld a, (_souls)
	ld (_soulstmp), a
	ld a, (_pant)
	ld (_pantsouls), a
	xor a
	ld (_souls), a
	ld a, (_xh)
	ld (_x), a
	ld a, (_yh)
	ld (_y), a
	ld a, (_panth)
	ld (_pant), a
	xor a
	ld (_ataca), a
	xor a
	ld (_sube), a
	ld hl, 0
	ld (_ani), hl
_muerte__leave:
	ret
_muertesq:
	ld hl, _almas.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, (_tipo)
	sub 2
	jp nz, .LABEL.__LABEL700
	ld a, (_yesq)
	add a, 3
	ld (_yesq), a
.LABEL.__LABEL700:
	ld a, (_tipo)
	sub 3
	jp nz, .LABEL.__LABEL702
	ld hl, _yesq
	dec (hl)
.LABEL.__LABEL702:
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL445
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, 7
	call .core.BORDER
	ld hl, 2949
	push hl
	ld hl, 6
	call .core.__BEEPER
	ld a, (_yesq)
	inc a
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL703
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL704
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	xor a
	call .core.BORDER
	ld hl, 2202
	push hl
	ld hl, 9
	call .core.__BEEPER
	ld a, (_yesq)
	add a, 2
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL703
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yesq)
	inc a
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL704
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, _espada.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, (_dir)
	dec a
	jp nz, .LABEL.__LABEL706
	ld a, (_y)
	inc a
	push af
	ld a, (_x)
	add a, 3
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL707
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL706:
	ld a, (_dir)
	sub 255
	jp nz, .LABEL.__LABEL709
	ld a, (_y)
	inc a
	push af
	ld a, (_x)
	dec a
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL710
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
.LABEL.__LABEL709:
	ld a, 7
	call .core.BORDER
	ld hl, 1742
	push hl
	ld hl, 11
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 850
	push hl
	call _mipause
	ld hl, _calavera.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, (_yesq)
	add a, 2
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL2
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, 7
	call .core.BORDER
	ld hl, 250
	push hl
	call _mipause
	ld a, (_yesq)
	add a, 2
	push af
	ld a, (_xesq)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL704
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	xor a
	call .core.BORDER
	ld a, (_souls)
	add a, 2
	ld (_souls), a
	call _pintaener
	ld hl, 53481
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 16825
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
_muertesq__leave:
	ret
_coloca:
	push ix
	ld ix, 0
	add ix, sp
	ld a, (ix+7)
	ld l, a
	ld h, 0
	push hl
	ld a, (ix+5)
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	sub 27
	jp nz, .LABEL.__LABEL712
	ld a, (ix+7)
	ld l, a
	ld h, 0
	push hl
	ld a, (ix+5)
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld (hl), 7
	ld a, (ix+7)
	ld l, a
	ld h, 0
	push hl
	ld a, (ix+5)
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
.LABEL.__LABEL712:
	ld a, (_tile)
	sub 28
	jp nz, .LABEL.__LABEL714
	ld a, (ix+7)
	ld l, a
	ld h, 0
	push hl
	ld a, (ix+5)
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld (hl), 8
	ld a, (ix+7)
	ld l, a
	ld h, 0
	push hl
	ld a, (ix+5)
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
.LABEL.__LABEL714:
	ld a, (_tile)
	sub 29
	jp nz, .LABEL.__LABEL716
	ld a, (ix+7)
	ld l, a
	ld h, 0
	push hl
	ld a, (ix+5)
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld (hl), 9
	ld a, (ix+7)
	ld l, a
	ld h, 0
	push hl
	ld a, (ix+5)
	ld l, a
	ld h, 0
	push hl
	ld a, (_pant)
	ld l, a
	ld h, 0
	push hl
	ld hl, _mapa
	call .core.__ARRAY
	ld a, (hl)
	ld (_tile), a
	call _lista
.LABEL.__LABEL716:
	ld a, (ix+5)
	ld h, 3
	call .core.__MUL8_FAST
	push af
	ld a, (ix+7)
	ld h, 3
	call .core.__MUL8_FAST
	call .core.PRINT_AT
	ld a, (_c1)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL71
	xor a
	call .core.__PRINTSTR
	ld a, (_c2)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	ld a, (_c3)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL73
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (ix+5)
	ld h, 3
	call .core.__MUL8_FAST
	inc a
	push af
	ld a, (ix+7)
	ld h, 3
	call .core.__MUL8_FAST
	call .core.PRINT_AT
	ld a, (_c4)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL74
	xor a
	call .core.__PRINTSTR
	ld a, (_c5)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL75
	xor a
	call .core.__PRINTSTR
	ld a, (_c6)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL76
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (ix+5)
	ld h, 3
	call .core.__MUL8_FAST
	add a, 2
	push af
	ld a, (ix+7)
	ld h, 3
	call .core.__MUL8_FAST
	call .core.PRINT_AT
	ld a, (_c7)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL77
	xor a
	call .core.__PRINTSTR
	ld a, (_c8)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL78
	xor a
	call .core.__PRINTSTR
	ld a, (_c9)
	call .core.INK_TMP
	ld hl, .LABEL.__LABEL79
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
_coloca__leave:
	ld sp, ix
	pop ix
	exx
	pop hl
	pop bc
	ex (sp), hl
	exx
	ret
_mipause:
	push ix
	ld ix, 0
	add ix, sp
	ld hl, 0
	ld (_t), hl
	jp .LABEL.__LABEL717
.LABEL.__LABEL721:
	ld hl, (_t)
	inc hl
	ld (_t), hl
.LABEL.__LABEL717:
	ld l, (ix+4)
	ld h, (ix+5)
	ld de, (_t)
	or a
	sbc hl, de
	jp nc, .LABEL.__LABEL721
_mipause__leave:
	ld sp, ix
	pop ix
	exx
	pop hl
	ex (sp), hl
	exx
	ret
_jefe:
	ld hl, _contdisparo
	inc (hl)
	ld a, (_contdisparo)
	sub 10
	ccf
	sbc a, a
	push af
	ld a, (_disparando)
	sub 1
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL838
	ld a, h
.LABEL.__LABEL838:
	or a
	jp z, .LABEL.__LABEL723
	xor a
	ld (_contdisparo), a
	ld a, 1
	ld (_disparando), a
	ld a, 2
	ld (_yb), a
	call .core.RND
	ld hl, 00000h
	push hl
	ld hl, 000C8h
	push hl
	ld h, 087h
	push hl
	call .core.__MULF
	call .core.__FTOU32REG
	push de
	ld b, h
	ld c, l
	ld de, 0
	ld hl, 100
	add hl, bc
	pop bc
	ex de, hl
	adc hl, bc
	push hl
	push de
	ld de, 0
	ld hl, 50
	call .core.__LEI32
	or a
	jp nz, .LABEL.__LABEL724
	ld a, 9
	ld (_xb), a
	jp .LABEL.__LABEL725
.LABEL.__LABEL724:
	ld a, 13
	ld (_xb), a
.LABEL.__LABEL725:
	ld a, (_xb)
	ld hl, (_x - 1)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL727
	ld a, 1
	ld (_direnem), a
.LABEL.__LABEL727:
	ld a, (_xb)
	ld h, a
	ld a, (_x)
	call .core.__LTI8
	or a
	jp z, .LABEL.__LABEL729
	ld a, 255
	ld (_direnem), a
.LABEL.__LABEL729:
	ld a, (_xb)
	ld hl, (_x - 1)
	sub h
	sub 1
	sbc a, a
	push af
	ld a, (_xb)
	push af
	ld a, (_x)
	inc a
	ld h, a
	pop af
	pop de
	sub h
	sub 1
	sbc a, a
	or d
	push af
	ld a, (_xb)
	push af
	ld a, (_x)
	add a, 2
	ld h, a
	pop af
	pop de
	sub h
	sub 1
	sbc a, a
	or d
	jp z, .LABEL.__LABEL723
	xor a
	ld (_direnem), a
.LABEL.__LABEL723:
	ld a, (_disparando)
	dec a
	jp nz, _jefe__leave
	call _disparo
_jefe__leave:
	ret
_disparo:
	ld hl, _bola.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld hl, _contbola
	inc (hl)
	ld a, (_contbola)
	sub 8
	ccf
	jp nc, _disparo__leave
	xor a
	ld (_contbola), a
	ld hl, _contb
	inc (hl)
	ld a, (_yb)
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL736
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_yb)
	dec a
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL736
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_yb)
	cp 14
	sbc a, a
	push af
	ld a, 1
	ld hl, (_xb - 1)
	cp h
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL839
	ld a, h
.LABEL.__LABEL839:
	push af
	ld a, (_xb)
	cp 24
	sbc a, a
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL840
	ld a, h
.LABEL.__LABEL840:
	or a
	jp z, _disparo__leave
	ld a, (_contb)
	sub 2
	ccf
	jp nc, .LABEL.__LABEL740
	xor a
	ld (_contb), a
	ld a, (_direnem)
	dec a
	jp nz, .LABEL.__LABEL742
	ld hl, _xb
	inc (hl)
.LABEL.__LABEL742:
	ld a, (_direnem)
	sub 255
	jp nz, .LABEL.__LABEL740
	ld hl, _xb
	dec (hl)
.LABEL.__LABEL740:
	ld hl, _yb
	inc (hl)
	ld a, (_yb)
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL745
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yb)
	dec a
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL745
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yb)
	ld h, a
	ld a, (_y)
	dec a
	call .core.__LEI8
	push af
	ld a, (_xb)
	ld h, a
	ld a, (_x)
	dec a
	call .core.__LEI8
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL841
	ld a, h
.LABEL.__LABEL841:
	push af
	ld a, (_xb)
	push af
	ld a, (_x)
	add a, 3
	ld h, a
	pop af
	call .core.__LEI8
	ld h, a
	pop af
	or a
	jr z, .LABEL.__LABEL842
	ld a, h
.LABEL.__LABEL842:
	or a
	jp z, .LABEL.__LABEL746
	ld a, (_yb)
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL748
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	xor a
	ld (_contb), a
	xor a
	ld (_disparando), a
	ld a, (_yb)
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL749
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yb)
	dec a
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL749
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	xor a
	push af
	call _restapone
	ld hl, _energia
	dec (hl)
	call _explos
	ld a, (_yb)
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL736
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_yb)
	dec a
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL736
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	jp _disparo__leave
.LABEL.__LABEL746:
	ld a, (_yb)
	sub 14
	sub 1
	sbc a, a
	ld d, a
	ld a, (_xb)
	dec a
	sub 1
	sbc a, a
	or d
	ld d, a
	ld a, (_xb)
	sub 24
	sub 1
	sbc a, a
	or d
	jp z, _disparo__leave
	ld a, (_yb)
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL749
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, (_yb)
	dec a
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL749
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	xor a
	ld (_contb), a
	xor a
	ld (_disparando), a
	call _explos
	ld a, (_yb)
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL736
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, (_yb)
	dec a
	push af
	ld a, (_xb)
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL736
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
_disparo__leave:
	ret
_explos:
	ld a, 2
	call .core.BORDER
	ld hl, 2949
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 5929
	push hl
	ld hl, 3
	call .core.__BEEPER
	ld a, 6
	call .core.BORDER
	ld hl, 2949
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 5929
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld a, 7
	call .core.BORDER
	ld hl, 16825
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, 6
	call .core.BORDER
	ld hl, 30002
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, 2
	call .core.BORDER
	ld hl, 16825
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld a, 7
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 0
	call .core.__BEEPER
	xor a
	call .core.BORDER
_explos__leave:
	ret
_golpejefe:
	ld a, 7
	call .core.BORDER
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 1642
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 265
	push hl
	ld hl, 0
	call .core.__BEEPER
	xor a
	call .core.BORDER
_golpejefe__leave:
	ret
_fin:
	xor a
	ld (_xx), a
	jp .LABEL.__LABEL752
.LABEL.__LABEL755:
	ld a, 2
	call .core.BORDER
	ld hl, 9429
	push hl
	ld hl, 1
	call .core.__BEEPER
	ld hl, 0
	push hl
	ld hl, _sangre
	call .core.__ARRAY
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 2
	call .core.INK
	call .core.COPY_ATTR
	call .core.RND
	ld hl, 00000h
	push hl
	ld hl, 000C0h
	push hl
	ld h, 085h
	push hl
	call .core.__MULF
	call .core.__FTOU32REG
	push de
	ld b, h
	ld c, l
	ld de, 0
	ld hl, 24
	add hl, bc
	pop bc
	ex de, hl
	adc hl, bc
	ex de, hl
	ld a, l
	push af
	call .core.RND
	ld hl, 00000h
	push hl
	ld hl, 00080h
	push hl
	ld h, 086h
	push hl
	call .core.__MULF
	call .core.__FTOU32REG
	push de
	ld b, h
	ld c, l
	ld de, 0
	ld hl, 32
	add hl, bc
	pop bc
	ex de, hl
	adc hl, bc
	ex de, hl
	ld a, l
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL757
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	call .core.RND
	ld hl, 00000h
	push hl
	ld hl, 000C0h
	push hl
	ld h, 085h
	push hl
	call .core.__MULF
	call .core.__FTOU32REG
	push de
	ld b, h
	ld c, l
	ld de, 0
	ld hl, 24
	add hl, bc
	pop bc
	ex de, hl
	adc hl, bc
	ex de, hl
	ld a, l
	push af
	call .core.RND
	ld hl, 00000h
	push hl
	ld hl, 00080h
	push hl
	ld h, 086h
	push hl
	call .core.__MULF
	call .core.__FTOU32REG
	push de
	ld b, h
	ld c, l
	ld de, 0
	ld hl, 32
	add hl, bc
	pop bc
	ex de, hl
	adc hl, bc
	ex de, hl
	ld a, l
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL72
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	call .core.RND
	ld hl, 00000h
	push hl
	ld hl, 000C0h
	push hl
	ld h, 085h
	push hl
	call .core.__MULF
	call .core.__FTOU32REG
	push de
	ld b, h
	ld c, l
	ld de, 0
	ld hl, 24
	add hl, bc
	pop bc
	ex de, hl
	adc hl, bc
	ex de, hl
	ld a, l
	push af
	call .core.RND
	ld hl, 00000h
	push hl
	ld hl, 00080h
	push hl
	ld h, 086h
	push hl
	call .core.__MULF
	call .core.__FTOU32REG
	push de
	ld b, h
	ld c, l
	ld de, 0
	ld hl, 32
	add hl, bc
	pop bc
	ex de, hl
	adc hl, bc
	ex de, hl
	ld a, l
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL73
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL
	ld a, 6
	call .core.BORDER
	ld hl, 30002
	push hl
	ld hl, 0
	call .core.__BEEPER
	xor a
	call .core.BORDER
	ld hl, 5279
	push hl
	ld hl, 3
	call .core.__BEEPER
	ld hl, _xx
	inc (hl)
.LABEL.__LABEL752:
	ld a, 50
	ld hl, (_xx - 1)
	cp h
	jp nc, .LABEL.__LABEL755
	ld a, 7
	call .core.BORDER
	ld a, 7
	call .core.PAPER
	call .core.COPY_ATTR
	call .core.CLS
	ld hl, 100
	push hl
	call _mipause
	xor a
	call .core.BORDER
	xor a
	call .core.PAPER
	xor a
	call .core.INK
	call .core.COPY_ATTR
	call .core.CLS
	ld hl, _letrasfin.__DATA__
	ex de, hl
	ld hl, (_iniUDGS)
	ld (hl), e
	inc hl
	ld (hl), d
	ld a, 11
	push af
	ld a, 13
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL758
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld a, 12
	push af
	ld a, 13
	call .core.PRINT_AT
	ld hl, .LABEL.__LABEL759
	xor a
	call .core.__PRINTSTR
	call .core.PRINT_EOL_ATTR
	ld hl, 7500
	push hl
	call _mipause
	ld a, 7
	call .core.BORDER
	ld a, 7
	call .core.PAPER
	call .core.COPY_ATTR
	call .core.CLS
	ld hl, 100
	push hl
	call _mipause
	xor a
	call .core.BORDER
	xor a
	call .core.PAPER
	xor a
	call .core.INK
	call .core.COPY_ATTR
	call .core.CLS
	ld hl, 5279
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 1642
	push hl
	ld hl, 0
	call .core.__BEEPER
	ld hl, 265
	push hl
	ld hl, 0
	call .core.__BEEPER
.LABEL._100:
	jp .LABEL._100
_fin__leave:
	ret
_fxm:
	ld hl, 2202
	push hl
	ld hl, 4
	call .core.__BEEPER
	ld hl, 1642
	push hl
	ld hl, 6
	call .core.__BEEPER
	ld hl, 1223
	push hl
	ld hl, 8
	call .core.__BEEPER
_fxm__leave:
	ret
.LABEL.__LABEL2:
	DEFW 0005h
	DEFB 10h
	DEFB 07h
	DEFB 90h
	DEFB 91h
	DEFB 92h
.LABEL.__LABEL3:
	DEFW 0007h
	DEFB 10h
	DEFB 07h
	DEFB 93h
	DEFB 10h
	DEFB 06h
	DEFB 94h
	DEFB 95h
.LABEL.__LABEL4:
	DEFW 0007h
	DEFB 10h
	DEFB 07h
	DEFB 96h
	DEFB 10h
	DEFB 06h
	DEFB 97h
	DEFB 98h
.LABEL.__LABEL15:
	DEFW 0001h
	DEFB 20h
.LABEL.__LABEL25:
	DEFW 0006h
	DEFB 11h
	DEFB 00h
	DEFB 10h
	DEFB 00h
	DEFB 20h
	DEFB 20h
.LABEL.__LABEL34:
	DEFW 000Dh
	DEFB 13h
	DEFB 01h
	DEFB 10h
	DEFB 05h
	DEFB 90h
	DEFB 91h
	DEFB 92h
	DEFB 93h
	DEFB 94h
	DEFB 13h
	DEFB 00h
	DEFB 95h
	DEFB 96h
.LABEL.__LABEL35:
	DEFW 000Dh
	DEFB 13h
	DEFB 01h
	DEFB 10h
	DEFB 07h
	DEFB 97h
	DEFB 98h
	DEFB 99h
	DEFB 9Ah
	DEFB 9Bh
	DEFB 13h
	DEFB 00h
	DEFB 9Ch
	DEFB 9Dh
.LABEL.__LABEL36:
	DEFW 000Dh
	DEFB 13h
	DEFB 01h
	DEFB 10h
	DEFB 04h
	DEFB 9Eh
	DEFB 9Fh
	DEFB 0A0h
	DEFB 0A1h
	DEFB 13h
	DEFB 00h
	DEFB 0A2h
	DEFB 0A3h
	DEFB 0A4h
.LABEL.__LABEL37:
	DEFW 000Ch
	DEFB 13h
	DEFB 01h
	DEFB 10h
	DEFB 07h
	DEFB 90h
	DEFB 91h
	DEFB 92h
	DEFB 93h
	DEFB 94h
	DEFB 95h
	DEFB 96h
	DEFB 97h
.LABEL.__LABEL38:
	DEFW 000Ah
	DEFB 10h
	DEFB 06h
	DEFB 98h
	DEFB 99h
	DEFB 9Ah
	DEFB 9Bh
	DEFB 9Ch
	DEFB 9Dh
	DEFB 9Eh
	DEFB 9Fh
.LABEL.__LABEL53:
	DEFW 0001h
	DEFB 70h
.LABEL.__LABEL60:
	DEFW 0003h
	DEFB 20h
	DEFB 20h
	DEFB 20h
.LABEL.__LABEL71:
	DEFW 0001h
	DEFB 90h
.LABEL.__LABEL72:
	DEFW 0001h
	DEFB 91h
.LABEL.__LABEL73:
	DEFW 0001h
	DEFB 92h
.LABEL.__LABEL74:
	DEFW 0001h
	DEFB 93h
.LABEL.__LABEL75:
	DEFW 0001h
	DEFB 94h
.LABEL.__LABEL76:
	DEFW 0001h
	DEFB 95h
.LABEL.__LABEL77:
	DEFW 0001h
	DEFB 96h
.LABEL.__LABEL78:
	DEFW 0001h
	DEFB 97h
.LABEL.__LABEL79:
	DEFW 0001h
	DEFB 98h
.LABEL.__LABEL108:
	DEFW 0001h
	DEFB 6Fh
.LABEL.__LABEL151:
	DEFW 0005h
	DEFB 13h
	DEFB 01h
	DEFB 10h
	DEFB 04h
	DEFB 90h
.LABEL.__LABEL158:
	DEFW 0001h
	DEFB 71h
.LABEL.__LABEL185:
	DEFW 0001h
	DEFB 61h
.LABEL.__LABEL275:
	DEFW 0001h
	DEFB 6Dh
.LABEL.__LABEL414:
	DEFW 0005h
	DEFB 10h
	DEFB 05h
	DEFB 90h
	DEFB 91h
	DEFB 92h
.LABEL.__LABEL415:
	DEFW 0005h
	DEFB 10h
	DEFB 04h
	DEFB 93h
	DEFB 94h
	DEFB 95h
.LABEL.__LABEL428:
	DEFW 0007h
	DEFB 10h
	DEFB 07h
	DEFB 93h
	DEFB 10h
	DEFB 05h
	DEFB 94h
	DEFB 95h
.LABEL.__LABEL429:
	DEFW 0005h
	DEFB 10h
	DEFB 05h
	DEFB 96h
	DEFB 97h
	DEFB 98h
.LABEL.__LABEL430:
	DEFW 0007h
	DEFB 10h
	DEFB 06h
	DEFB 90h
	DEFB 10h
	DEFB 04h
	DEFB 91h
	DEFB 92h
.LABEL.__LABEL431:
	DEFW 0007h
	DEFB 10h
	DEFB 06h
	DEFB 93h
	DEFB 10h
	DEFB 04h
	DEFB 94h
	DEFB 95h
.LABEL.__LABEL432:
	DEFW 0007h
	DEFB 10h
	DEFB 06h
	DEFB 96h
	DEFB 10h
	DEFB 04h
	DEFB 97h
	DEFB 98h
.LABEL.__LABEL433:
	DEFW 0007h
	DEFB 10h
	DEFB 06h
	DEFB 99h
	DEFB 10h
	DEFB 04h
	DEFB 9Ah
	DEFB 9Bh
.LABEL.__LABEL434:
	DEFW 0007h
	DEFB 10h
	DEFB 06h
	DEFB 9Ch
	DEFB 10h
	DEFB 04h
	DEFB 9Dh
	DEFB 9Eh
.LABEL.__LABEL435:
	DEFW 0007h
	DEFB 10h
	DEFB 06h
	DEFB 9Fh
	DEFB 10h
	DEFB 04h
	DEFB 0A0h
	DEFB 0A1h
.LABEL.__LABEL436:
	DEFW 0004h
	DEFB 90h
	DEFB 91h
	DEFB 92h
	DEFB 93h
.LABEL.__LABEL437:
	DEFW 0006h
	DEFB 90h
	DEFB 91h
	DEFB 92h
	DEFB 93h
	DEFB 94h
	DEFB 95h
.LABEL.__LABEL438:
	DEFW 0007h
	DEFB 90h
	DEFB 91h
	DEFB 92h
	DEFB 93h
	DEFB 10h
	DEFB 06h
	DEFB 94h
.LABEL.__LABEL439:
	DEFW 0005h
	DEFB 10h
	DEFB 07h
	DEFB 93h
	DEFB 94h
	DEFB 95h
.LABEL.__LABEL445:
	DEFW 0006h
	DEFB 10h
	DEFB 07h
	DEFB 90h
	DEFB 10h
	DEFB 05h
	DEFB 91h
.LABEL.__LABEL453:
	DEFW 0003h
	DEFB 10h
	DEFB 02h
	DEFB 90h
.LABEL.__LABEL461:
	DEFW 0003h
	DEFB 10h
	DEFB 03h
	DEFB 90h
.LABEL.__LABEL462:
	DEFW 000Ch
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
	DEFB 20h
.LABEL.__LABEL468:
	DEFW 0003h
	DEFB 10h
	DEFB 04h
	DEFB 90h
.LABEL.__LABEL474:
	DEFW 0003h
	DEFB 10h
	DEFB 01h
	DEFB 90h
.LABEL.__LABEL475:
	DEFW 000Ah
	DEFB 10h
	DEFB 02h
	DEFB 90h
	DEFB 91h
	DEFB 92h
	DEFB 93h
	DEFB 94h
	DEFB 95h
	DEFB 96h
	DEFB 97h
.LABEL.__LABEL683:
	DEFW 0003h
	DEFB 10h
	DEFB 06h
	DEFB 90h
.LABEL.__LABEL703:
	DEFW 0007h
	DEFB 10h
	DEFB 07h
	DEFB 90h
	DEFB 10h
	DEFB 05h
	DEFB 91h
	DEFB 92h
.LABEL.__LABEL704:
	DEFW 0007h
	DEFB 11h
	DEFB 00h
	DEFB 10h
	DEFB 00h
	DEFB 20h
	DEFB 20h
	DEFB 20h
.LABEL.__LABEL707:
	DEFW 0003h
	DEFB 10h
	DEFB 07h
	DEFB 90h
.LABEL.__LABEL710:
	DEFW 0003h
	DEFB 10h
	DEFB 07h
	DEFB 91h
.LABEL.__LABEL736:
	DEFW 0002h
	DEFB 20h
	DEFB 20h
.LABEL.__LABEL745:
	DEFW 0004h
	DEFB 10h
	DEFB 02h
	DEFB 90h
	DEFB 90h
.LABEL.__LABEL748:
	DEFW 0003h
	DEFB 10h
	DEFB 06h
	DEFB 91h
.LABEL.__LABEL749:
	DEFW 0004h
	DEFB 10h
	DEFB 06h
	DEFB 91h
	DEFB 91h
.LABEL.__LABEL757:
	DEFW 0003h
	DEFB 13h
	DEFB 01h
	DEFB 90h
.LABEL.__LABEL758:
	DEFW 0007h
	DEFB 13h
	DEFB 01h
	DEFB 10h
	DEFB 07h
	DEFB 90h
	DEFB 91h
	DEFB 92h
.LABEL.__LABEL759:
	DEFW 0005h
	DEFB 10h
	DEFB 06h
	DEFB 93h
	DEFB 94h
	DEFB 95h
	;; --- end of user code ---
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/abs8.asm"
	; Returns absolute value for 8 bit signed integer
	;
	    push namespace core

__ABS8:
	    or a
	    ret p
	    neg
	    ret

	    pop namespace

#line 10771 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/array.asm"
; vim: ts=4:et:sw=4:
	; Copyleft (K) by Jose M. Rodriguez de la Rosa
	;  (a.k.a. Boriel)
;  http://www.boriel.com
	; -------------------------------------------------------------------
	; Simple array Index routine
	; Number of total indexes dimensions - 1 at beginning of memory
	; HL = Start of array memory (First two bytes contains N-1 dimensions)
	; Dimension values on the stack, (top of the stack, highest dimension)
	; E.g. A(2, 4) -> PUSH <4>; PUSH <2>

	; For any array of N dimension A(aN-1, ..., a1, a0)
	; and dimensions D[bN-1, ..., b1, b0], the offset is calculated as
	; O = [a0 + b0 * (a1 + b1 * (a2 + ... bN-2(aN-1)))]
; What I will do here is to calculate the following sequence:
	; ((aN-1 * bN-2) + aN-2) * bN-3 + ...


#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/mul16.asm"
	    push namespace core

__MUL16:	; Mutiplies HL with the last value stored into de stack
	    ; Works for both signed and unsigned

	    PROC

	    LOCAL __MUL16LOOP
	    LOCAL __MUL16NOADD

	    ex de, hl
	    pop hl		; Return address
	    ex (sp), hl ; CALLEE caller convention

__MUL16_FAST:
	    ld b, 16
	    ld a, h
	    ld c, l
	    ld hl, 0

__MUL16LOOP:
	    add hl, hl  ; hl << 1
	    sla c
	    rla         ; a,c << 1
	    jp nc, __MUL16NOADD
	    add hl, de

__MUL16NOADD:
	    djnz __MUL16LOOP

	    ret	; Result in hl (16 lower bits)

	    ENDP

	    pop namespace

#line 20 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/array.asm"

#line 24 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/array.asm"

	    push namespace core

__ARRAY_PTR:   ;; computes an array offset from a pointer
	    ld c, (hl)
	    inc hl
	    ld h, (hl)
	    ld l, c

__ARRAY:
	    PROC

	    LOCAL LOOP
	    LOCAL ARRAY_END
	    LOCAL RET_ADDRESS ; Stores return address
	    LOCAL TMP_ARR_PTR ; Stores pointer temporarily

	    ld e, (hl)
	    inc hl
	    ld d, (hl)
	    inc hl
	    ld (TMP_ARR_PTR), hl
	    ex de, hl
	    ex (sp), hl	; Return address in HL, array address in the stack
	    ld (RET_ADDRESS + 1), hl ; Stores it for later

	    exx
	    pop hl		; Will use H'L' as the pointer
	    ld c, (hl)	; Loads Number of dimensions from (hl)
	    inc hl
	    ld b, (hl)
	    inc hl		; Ready
	    exx

	    ld hl, 0	; HL = Offset "accumulator"

LOOP:
#line 64 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/array.asm"
	    pop bc		; Get next index (Ai) from the stack

#line 74 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/array.asm"

	    add hl, bc	; Adds current index

	    exx			; Checks if B'C' = 0
	    ld a, b		; Which means we must exit (last element is not multiplied by anything)
	    or c
	    jr z, ARRAY_END		; if B'Ci == 0 we are done

	    ld e, (hl)			; Loads next dimension into D'E'
	    inc hl
	    ld d, (hl)
	    inc hl
	    push de
	    dec bc				; Decrements loop counter
	    exx
	    pop de				; DE = Max bound Number (i-th dimension)

	    call __FNMUL
	    jp LOOP

ARRAY_END:
	    ld a, (hl)
	    exx

#line 103 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/array.asm"
	    LOCAL ARRAY_SIZE_LOOP

	    ex de, hl
	    ld hl, 0
	    ld b, a
ARRAY_SIZE_LOOP:
	    add hl, de
	    djnz ARRAY_SIZE_LOOP

#line 113 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/array.asm"

	    ex de, hl
	    ld hl, (TMP_ARR_PTR)
	    ld a, (hl)
	    inc hl
	    ld h, (hl)
	    ld l, a
	    add hl, de  ; Adds element start

RET_ADDRESS:
	    jp 0

	    ;; Performs a faster multiply for little 16bit numbs
	    LOCAL __FNMUL, __FNMUL2

__FNMUL:
	    xor a
	    or h
	    jp nz, __MUL16_FAST
	    or l
	    ret z

	    cp 33
	    jp nc, __MUL16_FAST

	    ld b, l
	    ld l, h  ; HL = 0

__FNMUL2:
	    add hl, de
	    djnz __FNMUL2
	    ret

TMP_ARR_PTR:
	    DW 0  ; temporary storage for pointer to tables

	    ENDP

	    pop namespace

#line 10772 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/beeper.asm"
; vim:ts=4:et:sw=4:
	; This is a fast beep routine, but needs parameters
	; codified in a different way.
; See http://www.wearmouth.demon.co.uk/zx82.htm#L03F8

	; Needs pitch on top of the stack
	; HL = duration

	    push namespace core

__BEEPER:
	    ex de, hl
	    pop hl
	    ex (sp), hl ; CALLEE
	    push ix     ; BEEPER changes IX
	    call 03B5h
	    pop ix
	    ret

	    pop namespace


#line 10773 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/border.asm"
	; __FASTCALL__ Routine to change de border
	; Parameter (color) specified in A register

	    push namespace core

	BORDER EQU 229Bh

	    pop namespace


	; Nothing to do! (Directly from the ZX Spectrum ROM)
#line 10774 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/bright.asm"
	; Sets bright flag in ATTR_P permanently
; Parameter: Paper color in A register

#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/const.asm"
	; Global constants

	    push namespace core

	P_FLAG	EQU 23697
	FLAGS2	EQU 23681
	ATTR_P	EQU 23693	; permanet ATTRIBUTES
	ATTR_T	EQU 23695	; temporary ATTRIBUTES
	CHARS	EQU 23606 ; Pointer to ROM/RAM Charset
	UDG	EQU 23675 ; Pointer to UDG Charset
	MEM0	EQU 5C92h ; Temporary memory buffer used by ROM chars

	    pop namespace

#line 5 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/bright.asm"

	    push namespace core

BRIGHT:
	    ld hl, ATTR_P

	    PROC
	    LOCAL IS_TR
	    LOCAL IS_ZERO

__SET_BRIGHT:
	    ; Another entry. This will set the bright flag at location pointer by DE
	    cp 8
	    jr z, IS_TR

	    ; # Convert to 0/1
	    or a
	    jr z, IS_ZERO
	    ld a, 0x40

IS_ZERO:
	    ld b, a	; Saves the color
	    ld a, (hl)
	    and 0BFh ; Clears previous value
	    or b
	    ld (hl), a
	    inc hl
	    res 6, (hl)  ;Reset bit 6 to disable transparency
	    ret

IS_TR:  ; transparent
	    inc hl ; Points DE to MASK_T or MASK_P
	    set 6, (hl)  ;Set bit 6 to enable transparency
	    ret

	; Sets the BRIGHT flag passed in A register in the ATTR_T variable
BRIGHT_TMP:
	    ld hl, ATTR_T
	    jr __SET_BRIGHT
	    ENDP

	    pop namespace
#line 10775 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/cls.asm"
	; JUMPS directly to spectrum CLS
	; This routine does not clear lower screen

	;CLS	EQU	0DAFh

	; Our faster implementation

#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/sposn.asm"
	; Printing positioning library.
	    push namespace core

	    PROC
	    LOCAL ECHO_E

__LOAD_S_POSN:		; Loads into DE current ROW, COL print position from S_POSN mem var.
	    ld de, (S_POSN)
	    ld hl, (MAXX)
	    or a
	    sbc hl, de
	    ex de, hl
	    ret


__SAVE_S_POSN:		; Saves ROW, COL from DE into S_POSN mem var.
	    ld hl, (MAXX)
	    or a
	    sbc hl, de
	    ld (S_POSN), hl ; saves it again
	    ret


	ECHO_E	EQU 23682
	MAXX	EQU ECHO_E   ; Max X position + 1
	MAXY	EQU MAXX + 1 ; Max Y position + 1

	S_POSN	EQU 23688
	POSX	EQU S_POSN		; Current POS X
	POSY	EQU S_POSN + 1	; Current POS Y

	    ENDP

	    pop namespace

#line 9 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/cls.asm"

	    push namespace core

CLS:
	    PROC

	    LOCAL COORDS
	    LOCAL __CLS_SCR
	    LOCAL ATTR_P
	    LOCAL SCREEN

	    ld hl, 0
	    ld (COORDS), hl
	    ld hl, 1821h
	    ld (S_POSN), hl
__CLS_SCR:
	    ld hl, SCREEN
	    ld (hl), 0
	    ld d, h
	    ld e, l
	    inc de
	    ld bc, 6144
	    ldir

	    ; Now clear attributes

	    ld a, (ATTR_P)
	    ld (hl), a
	    ld bc, 767
	    ldir
	    ret

	COORDS	EQU	23677
	SCREEN	EQU 16384 ; Default start of the screen (can be changed)
	ATTR_P	EQU 23693
	;you can poke (SCREEN_SCRADDR) to change CLS, DRAW & PRINTing address

	SCREEN_ADDR EQU (__CLS_SCR + 1) ; Address used by print and other screen routines
	    ; to get the start of the screen
	    ENDP

	    pop namespace

#line 10776 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/copy_attr.asm"

#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"
; vim:ts=4:sw=4:et:
; vim:ts=4:sw=4:et:
	; PRINT command routine
	; Does not print attribute. Use PRINT_STR or PRINT_NUM for that



#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/in_screen.asm"

#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/error.asm"
	; Simple error control routines
; vim:ts=4:et:

	    push namespace core

	ERR_NR    EQU    23610    ; Error code system variable


	; Error code definitions (as in ZX spectrum manual)

; Set error code with:
	;    ld a, ERROR_CODE
	;    ld (ERR_NR), a


	ERROR_Ok                EQU    -1
	ERROR_SubscriptWrong    EQU     2
	ERROR_OutOfMemory       EQU     3
	ERROR_OutOfScreen       EQU     4
	ERROR_NumberTooBig      EQU     5
	ERROR_InvalidArg        EQU     9
	ERROR_IntOutOfRange     EQU    10
	ERROR_NonsenseInBasic   EQU    11
	ERROR_InvalidFileName   EQU    14
	ERROR_InvalidColour     EQU    19
	ERROR_BreakIntoProgram  EQU    20
	ERROR_TapeLoadingErr    EQU    26


	; Raises error using RST #8
__ERROR:
	    ld (__ERROR_CODE), a
	    rst 8
__ERROR_CODE:
	    nop
	    ret

	; Sets the error system variable, but keeps running.
	; Usually this instruction if followed by the END intermediate instruction.
__STOP:
	    ld (ERR_NR), a
	    ret

	    pop namespace
#line 3 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/in_screen.asm"

	    push namespace core

__IN_SCREEN:
	    ; Returns NO carry if current coords (D, E)
	    ; are OUT of the screen limits (MAXX, MAXY)

	    PROC
	    LOCAL __IN_SCREEN_ERR

	    ld hl, MAXX
	    ld a, e
	    cp (hl)
	    jr nc, __IN_SCREEN_ERR	; Do nothing and return if out of range

	    ld a, d
	    inc hl
	    cp (hl)
	    ;; jr nc, __IN_SCREEN_ERR	; Do nothing and return if out of range
	    ;; ret
	    ret c                       ; Return if carry (OK)

__IN_SCREEN_ERR:
__OUT_OF_SCREEN_ERR:
	    ; Jumps here if out of screen
	    ld a, ERROR_OutOfScreen
	    jp __STOP   ; Saves error code and exits

	    ENDP

	    pop namespace
#line 9 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/table_jump.asm"

	    push namespace core

JUMP_HL_PLUS_2A: ; Does JP (HL + A*2) Modifies DE. Modifies A
	    add a, a

JUMP_HL_PLUS_A:	 ; Does JP (HL + A) Modifies DE
	    ld e, a
	    ld d, 0

JUMP_HL_PLUS_DE: ; Does JP (HL + DE)
	    add hl, de
	    ld e, (hl)
	    inc hl
	    ld d, (hl)
	    ex de, hl
CALL_HL:
	    jp (hl)

	    pop namespace

#line 10 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/ink.asm"
	; Sets ink color in ATTR_P permanently
; Parameter: Paper color in A register



	    push namespace core

INK:
	    PROC
	    LOCAL __SET_INK
	    LOCAL __SET_INK2

	    ld de, ATTR_P

__SET_INK:
	    cp 8
	    jr nz, __SET_INK2

	    inc de ; Points DE to MASK_T or MASK_P
	    ld a, (de)
	    or 7 ; Set bits 0,1,2 to enable transparency
	    ld (de), a
	    ret

__SET_INK2:
	    ; Another entry. This will set the ink color at location pointer by DE
	    and 7	; # Gets color mod 8
	    ld b, a	; Saves the color
	    ld a, (de)
	    and 0F8h ; Clears previous value
	    or b
	    ld (de), a
	    inc de ; Points DE to MASK_T or MASK_P
	    ld a, (de)
	    and 0F8h ; Reset bits 0,1,2 sign to disable transparency
	    ld (de), a ; Store new attr
	    ret

	; Sets the INK color passed in A register in the ATTR_T variable
INK_TMP:
	    ld de, ATTR_T
	    jp __SET_INK

	    ENDP

	    pop namespace

#line 11 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/paper.asm"
	; Sets paper color in ATTR_P permanently
; Parameter: Paper color in A register



	    push namespace core

PAPER:
	    PROC
	    LOCAL __SET_PAPER
	    LOCAL __SET_PAPER2

	    ld de, ATTR_P

__SET_PAPER:
	    cp 8
	    jr nz, __SET_PAPER2
	    inc de
	    ld a, (de)
	    or 038h
	    ld (de), a
	    ret

	    ; Another entry. This will set the paper color at location pointer by DE
__SET_PAPER2:
	    and 7	; # Remove
	    rlca
	    rlca
	    rlca		; a *= 8

	    ld b, a	; Saves the color
	    ld a, (de)
	    and 0C7h ; Clears previous value
	    or b
	    ld (de), a
	    inc de ; Points to MASK_T or MASK_P accordingly
	    ld a, (de)
	    and 0C7h  ; Resets bits 3,4,5
	    ld (de), a
	    ret


	; Sets the PAPER color passed in A register in the ATTR_T variable
PAPER_TMP:
	    ld de, ATTR_T
	    jp __SET_PAPER
	    ENDP

	    pop namespace

#line 12 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/flash.asm"
	; Sets flash flag in ATTR_P permanently
; Parameter: Paper color in A register



	    push namespace core

FLASH:
	    ld hl, ATTR_P

	    PROC
	    LOCAL IS_TR
	    LOCAL IS_ZERO

__SET_FLASH:
	    ; Another entry. This will set the flash flag at location pointer by DE
	    cp 8
	    jr z, IS_TR

	    ; # Convert to 0/1
	    or a
	    jr z, IS_ZERO
	    ld a, 0x80

IS_ZERO:
	    ld b, a	; Saves the color
	    ld a, (hl)
	    and 07Fh ; Clears previous value
	    or b
	    ld (hl), a
	    inc hl
	    res 7, (hl)  ;Reset bit 7 to disable transparency
	    ret

IS_TR:  ; transparent
	    inc hl ; Points DE to MASK_T or MASK_P
	    set 7, (hl)  ;Set bit 7 to enable transparency
	    ret

	; Sets the FLASH flag passed in A register in the ATTR_T variable
FLASH_TMP:
	    ld hl, ATTR_T
	    jr __SET_FLASH
	    ENDP

	    pop namespace

#line 13 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"

#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/over.asm"
	; Sets OVER flag in P_FLAG permanently
; Parameter: OVER flag in bit 0 of A register



	    push namespace core

OVER:
	    PROC

	    ld c, a ; saves it for later
	    and 2
	    ld hl, FLAGS2
	    res 1, (HL)
	    or (hl)
	    ld (hl), a

	    ld a, c	; Recovers previous value
	    and 1	; # Convert to 0/1
	    add a, a; # Shift left 1 bit for permanent

	    ld hl, P_FLAG
	    res 1, (hl)
	    or (hl)
	    ld (hl), a
	    ret

	; Sets OVER flag in P_FLAG temporarily
OVER_TMP:
	    ld c, a ; saves it for later
	    and 2	; gets bit 1; clears carry
	    rra
	    ld hl, FLAGS2
	    res 0, (hl)
	    or (hl)
	    ld (hl), a

	    ld a, c	; Recovers previous value
	    and 1
	    ld hl, P_FLAG
	    res 0, (hl)
	    or (hl)
	    ld (hl), a
	    jp __SET_ATTR_MODE

	    ENDP

	    pop namespace

#line 15 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/inverse.asm"
	; Sets INVERSE flag in P_FLAG permanently
; Parameter: INVERSE flag in bit 0 of A register



	    push namespace core

INVERSE:
	    PROC

	    and 1	; # Convert to 0/1
	    add a, a; # Shift left 3 bits for permanent
	    add a, a
	    add a, a
	    ld hl, P_FLAG
	    res 3, (hl)
	    or (hl)
	    ld (hl), a
	    ret

	; Sets INVERSE flag in P_FLAG temporarily
INVERSE_TMP:
	    and 1
	    add a, a
	    add a, a; # Shift left 2 bits for temporary
	    ld hl, P_FLAG
	    res 2, (hl)
	    or (hl)
	    ld (hl), a
	    jp __SET_ATTR_MODE

	    ENDP

	    pop namespace

#line 16 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/bold.asm"
	; Sets BOLD flag in P_FLAG permanently
; Parameter: BOLD flag in bit 0 of A register


	    push namespace core

BOLD:
	    PROC

	    and 1
	    rlca
	    rlca
	    rlca
	    ld hl, FLAGS2
	    res 3, (HL)
	    or (hl)
	    ld (hl), a
	    ret

	; Sets BOLD flag in P_FLAG temporarily
BOLD_TMP:
	    and 1
	    rlca
	    rlca
	    ld hl, FLAGS2
	    res 2, (hl)
	    or (hl)
	    ld (hl), a
	    ret

	    ENDP

	    pop namespace

#line 17 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/italic.asm"
	; Sets ITALIC flag in P_FLAG permanently
; Parameter: ITALIC flag in bit 0 of A register


	    push namespace core

ITALIC:
	    PROC

	    and 1
	    rrca
	    rrca
	    rrca
	    ld hl, FLAGS2
	    res 5, (HL)
	    or (hl)
	    ld (hl), a
	    ret

	; Sets ITALIC flag in P_FLAG temporarily
ITALIC_TMP:
	    and 1
	    rrca
	    rrca
	    rrca
	    rrca
	    ld hl, FLAGS2
	    res 4, (hl)
	    or (hl)
	    ld (hl), a
	    ret

	    ENDP

	    pop namespace

#line 18 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"

#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/attr.asm"
	; Attribute routines
; vim:ts=4:et:sw:







	    push namespace core

__ATTR_ADDR:
	    ; calc start address in DE (as (32 * d) + e)
    ; Contributed by Santiago Romero at http://www.speccy.org
	    ld h, 0                     ;  7 T-States
	    ld a, d                     ;  4 T-States
	    add a, a     ; a * 2        ;  4 T-States
	    add a, a     ; a * 4        ;  4 T-States
	    ld l, a      ; HL = A * 4   ;  4 T-States

	    add hl, hl   ; HL = A * 8   ; 15 T-States
	    add hl, hl   ; HL = A * 16  ; 15 T-States
	    add hl, hl   ; HL = A * 32  ; 15 T-States

    ld d, 18h ; DE = 6144 + E. Note: 6144 is the screen size (before attr zone)
	    add hl, de

	    ld de, (SCREEN_ADDR)    ; Adds the screen address
	    add hl, de

	    ; Return current screen address in HL
	    ret


	; Sets the attribute at a given screen coordinate (D, E).
	; The attribute is taken from the ATTR_T memory variable
	; Used by PRINT routines
SET_ATTR:

	    ; Checks for valid coords
	    call __IN_SCREEN
	    ret nc

__SET_ATTR:
	    ; Internal __FASTCALL__ Entry used by printing routines
	    PROC

	    call __ATTR_ADDR

__SET_ATTR2:  ; Sets attr from ATTR_T to (HL) which points to the scr address
	    ld de, (ATTR_T)    ; E = ATTR_T, D = MASK_T

	    ld a, d
	    and (hl)
	    ld c, a    ; C = current screen color, masked

	    ld a, d
	    cpl        ; Negate mask
	    and e    ; Mask current attributes
	    or c    ; Mix them
	    ld (hl), a ; Store result in screen

	    ret

	    ENDP


	; Sets the attribute at a given screen pixel address in hl
	; HL contains the address in RAM for a given pixel (not a coordinate)
SET_PIXEL_ADDR_ATTR:
	    ;; gets ATTR position with offset given in SCREEN_ADDR
	    ld a, h
	    rrca
	    rrca
	    rrca
	    and 3
	    or 18h
	    ld h, a
	    ld de, (SCREEN_ADDR)
	    add hl, de  ;; Final screen addr
	    jp __SET_ATTR2

	    pop namespace
#line 20 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"

	; Putting a comment starting with @INIT <address>
	; will make the compiler to add a CALL to <address>
	; It is useful for initialization routines.


	    push namespace core

__PRINT_INIT: ; To be called before program starts (initializes library)
	    PROC

	    ld hl, __PRINT_START
	    ld (PRINT_JUMP_STATE), hl

	    ld hl, 1821h
	    ld (MAXX), hl  ; Sets current maxX and maxY

	    xor a
	    ld (FLAGS2), a

	    ret


__PRINTCHAR: ; Print character store in accumulator (A register)
	    ; Modifies H'L', B'C', A'F', D'E', A

	    LOCAL PO_GR_1

	    LOCAL __PRCHAR
	    LOCAL __PRINT_CONT
	    LOCAL __PRINT_CONT2
	    LOCAL __PRINT_JUMP
	    LOCAL __SRCADDR
	    LOCAL __PRINT_UDG
	    LOCAL __PRGRAPH
	    LOCAL __PRINT_START
	    LOCAL __ROM_SCROLL_SCR
	    LOCAL __TVFLAGS

	    __ROM_SCROLL_SCR EQU 0DFEh
	    __TVFLAGS EQU 5C3Ch

	PRINT_JUMP_STATE EQU __PRINT_JUMP + 1

__PRINT_JUMP:
	    jp __PRINT_START    ; Where to jump. If we print 22 (AT), next two calls jumps to AT1 and AT2 respectively


	    LOCAL __SCROLL
__SCROLL:  ; Scroll?
	    ld hl, __TVFLAGS
	    bit 1, (hl)
	    ret z
	    call __ROM_SCROLL_SCR
	    ld hl, __TVFLAGS
	    res 1, (hl)
	    ret
#line 78 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"

__PRINT_START:
	    cp ' '
	    jp c, __PRINT_SPECIAL    ; Characters below ' ' are special ones

	    exx               ; Switch to alternative registers
	    ex af, af'        ; Saves a value (char to print) for later


	    call __SCROLL
#line 89 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"
	    call __LOAD_S_POSN

	; At this point we have the new coord
	    ld hl, (SCREEN_ADDR)

	    ld a, d
	    ld c, a     ; Saves it for later

	    and 0F8h    ; Masks 3 lower bit ; zy
	    ld d, a

	    ld a, c     ; Recovers it
	    and 07h     ; MOD 7 ; y1
	    rrca
	    rrca
	    rrca

	    or e
	    ld e, a
	    add hl, de    ; HL = Screen address + DE
	    ex de, hl     ; DE = Screen address

	    ex af, af'

	    cp 80h    ; Is it an UDG or a ?
	    jp c, __SRCADDR

	    cp 90h
	    jp nc, __PRINT_UDG

	    ; Print a 8 bit pattern (80h to 8Fh)

	    ld b, a
	    call PO_GR_1 ; This ROM routine will generate the bit pattern at MEM0
	    ld hl, MEM0
	    jp __PRGRAPH

	PO_GR_1 EQU 0B38h

__PRINT_UDG:
	    sub 90h ; Sub ASC code
	    ld bc, (UDG)
	    jp __PRGRAPH0

	__SOURCEADDR EQU (__SRCADDR + 1)    ; Address of the pointer to chars source
__SRCADDR:
	    ld bc, (CHARS)

__PRGRAPH0:
    add a, a   ; A = a * 2 (since a < 80h) ; Thanks to Metalbrain at http://foro.speccy.org
	    ld l, a
	    ld h, 0    ; HL = a * 2 (accumulator)
	    add hl, hl
	    add hl, hl ; HL = a * 8
	    add hl, bc ; HL = CHARS address

__PRGRAPH:
	    ex de, hl  ; HL = Write Address, DE = CHARS address
	    bit 2, (iy + $47)
	    call nz, __BOLD
	    bit 4, (iy + $47)
	    call nz, __ITALIC
	    ld b, 8 ; 8 bytes per char
__PRCHAR:
	    ld a, (de) ; DE *must* be ALWAYS source, and HL destiny

PRINT_MODE:     ; Which operation is used to write on the screen
    ; Set it with:
	    ; LD A, <OPERATION>
	    ; LD (PRINT_MODE), A
	    ;
    ; Available opertions:
    ; NORMAL : 0h  --> NOP         ; OVER 0
    ; XOR    : AEh --> XOR (HL)    ; OVER 1
    ; OR     : B6h --> OR (HL)     ; PUTSPRITE
    ; AND    : A6h --> AND (HL)    ; PUTMASK
	    nop     ;

INVERSE_MODE:   ; 00 -> NOP -> INVERSE 0
	    nop     ; 2F -> CPL -> INVERSE 1

	    ld (hl), a

	    inc de
	    inc h     ; Next line
	    djnz __PRCHAR

	    call __LOAD_S_POSN
	    push de
	    call __SET_ATTR
	    pop de
	    inc e            ; COL = COL + 1
	    ld hl, (MAXX)
	    ld a, e
	    dec l            ; l = MAXX
	    cp l             ; Lower than max?
	    jp nc, __PRINT_EOL1

__PRINT_CONT:
	    call __SAVE_S_POSN

__PRINT_CONT2:
	    exx
	    ret

	; ------------- SPECIAL CHARS (< 32) -----------------

__PRINT_SPECIAL:    ; Jumps here if it is a special char
	    exx
	    ld hl, __PRINT_TABLE
	    jp JUMP_HL_PLUS_2A


PRINT_EOL:        ; Called WHENEVER there is no ";" at end of PRINT sentence
	    exx

__PRINT_0Dh:        ; Called WHEN printing CHR$(13)

	    call __SCROLL
#line 209 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"
	    call __LOAD_S_POSN

__PRINT_EOL1:        ; Another entry called from PRINT when next line required
	    ld e, 0

__PRINT_EOL2:
	    ld a, d
	    inc a

__PRINT_AT1_END:
	    ld hl, (MAXY)
	    cp l
	    jr c, __PRINT_EOL_END    ; Carry if (MAXY) < d

	    ld hl, __TVFLAGS
	    set 1, (hl)
	    dec a
#line 229 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"

__PRINT_EOL_END:
	    ld d, a

__PRINT_AT2_END:
	    call __SAVE_S_POSN
	    exx
	    ret

__PRINT_COM:
	    exx
	    push hl
	    push de
	    push bc
	    call PRINT_COMMA
	    pop bc
	    pop de
	    pop hl
	    ret

__PRINT_TAB:
	    ld hl, __PRINT_TAB1
	    jr __PRINT_SET_STATE

__PRINT_TAB1:
	    ld (MEM0), a
	    exx
	    ld hl, __PRINT_TAB2
	    jr __PRINT_SET_STATE

__PRINT_TAB2:
	    ld a, (MEM0)        ; Load tab code (ignore the current one)
	    push hl
	    push de
	    push bc
	    ld hl, __PRINT_START
	    ld (PRINT_JUMP_STATE), hl
	    call PRINT_TAB
	    pop bc
	    pop de
	    pop hl
	    ret

__PRINT_NOP:
__PRINT_RESTART:
	    ld hl, __PRINT_START
	    jr __PRINT_SET_STATE

__PRINT_AT:
	    ld hl, __PRINT_AT1

__PRINT_SET_STATE:
	    ld (PRINT_JUMP_STATE), hl    ; Saves next entry call
	    exx
	    ret

__PRINT_AT1:    ; Jumps here if waiting for 1st parameter
	    exx
	    ld hl, __PRINT_AT2
	    ld (PRINT_JUMP_STATE), hl    ; Saves next entry call
	    call __LOAD_S_POSN
	    jr __PRINT_AT1_END

__PRINT_AT2:
	    exx
	    ld hl, __PRINT_START
	    ld (PRINT_JUMP_STATE), hl    ; Saves next entry call
	    call __LOAD_S_POSN
	    ld e, a
	    ld hl, (MAXX)
	    cp l
	    jr c, __PRINT_AT2_END
	    jr __PRINT_EOL1

__PRINT_DEL:
	    call __LOAD_S_POSN        ; Gets current screen position
	    dec e
	    ld a, -1
	    cp e
	    jp nz, __PRINT_AT2_END
	    ld hl, (MAXX)
	    ld e, l
	    dec e
	    dec e
	    dec d
	    cp d
	    jp nz, __PRINT_AT2_END
	    ld d, h
	    dec d
	    jp __PRINT_AT2_END

__PRINT_INK:
	    ld hl, __PRINT_INK2
	    jp __PRINT_SET_STATE

__PRINT_INK2:
	    exx
	    call INK_TMP
	    jp __PRINT_RESTART

__PRINT_PAP:
	    ld hl, __PRINT_PAP2
	    jp __PRINT_SET_STATE

__PRINT_PAP2:
	    exx
	    call PAPER_TMP
	    jp __PRINT_RESTART

__PRINT_FLA:
	    ld hl, __PRINT_FLA2
	    jp __PRINT_SET_STATE

__PRINT_FLA2:
	    exx
	    call FLASH_TMP
	    jp __PRINT_RESTART

__PRINT_BRI:
	    ld hl, __PRINT_BRI2
	    jp __PRINT_SET_STATE

__PRINT_BRI2:
	    exx
	    call BRIGHT_TMP
	    jp __PRINT_RESTART

__PRINT_INV:
	    ld hl, __PRINT_INV2
	    jp __PRINT_SET_STATE

__PRINT_INV2:
	    exx
	    call INVERSE_TMP
	    jp __PRINT_RESTART

__PRINT_OVR:
	    ld hl, __PRINT_OVR2
	    jp __PRINT_SET_STATE

__PRINT_OVR2:
	    exx
	    call OVER_TMP
	    jp __PRINT_RESTART

__PRINT_BOLD:
	    ld hl, __PRINT_BOLD2
	    jp __PRINT_SET_STATE

__PRINT_BOLD2:
	    exx
	    call BOLD_TMP
	    jp __PRINT_RESTART

__PRINT_ITA:
	    ld hl, __PRINT_ITA2
	    jp __PRINT_SET_STATE

__PRINT_ITA2:
	    exx
	    call ITALIC_TMP
	    jp __PRINT_RESTART


__BOLD:
	    push hl
	    ld hl, MEM0
	    ld b, 8
__BOLD_LOOP:
	    ld a, (de)
	    ld c, a
	    rlca
	    or c
	    ld (hl), a
	    inc hl
	    inc de
	    djnz __BOLD_LOOP
	    pop hl
	    ld de, MEM0
	    ret


__ITALIC:
	    push hl
	    ld hl, MEM0
	    ex de, hl
	    ld bc, 8
	    ldir
	    ld hl, MEM0
	    srl (hl)
	    inc hl
	    srl (hl)
	    inc hl
	    srl (hl)
	    inc hl
	    inc hl
	    inc hl
	    sla (hl)
	    inc hl
	    sla (hl)
	    inc hl
	    sla (hl)
	    pop hl
	    ld de, MEM0
	    ret

PRINT_COMMA:
	    call __LOAD_S_POSN
	    ld a, e
	    and 16
	    add a, 16

PRINT_TAB:
	    PROC
	    LOCAL LOOP, CONTINUE

	    inc a
	    call __LOAD_S_POSN ; e = current row
	    ld d, a
	    ld a, e
	    cp 21h
	    jr nz, CONTINUE
	    ld e, -1
CONTINUE:
	    ld a, d
	    inc e
	    sub e  ; A = A - E
	    and 31 ;
	    ret z  ; Already at position E
	    ld b, a
LOOP:
	    ld a, ' '
	    push bc
	    exx
	    call __PRINTCHAR
	    exx
	    pop bc
	    djnz LOOP
	    ret
	    ENDP

PRINT_AT: ; Changes cursor to ROW, COL
	    ; COL in A register
	    ; ROW in stack

	    pop hl    ; Ret address
	    ex (sp), hl ; callee H = ROW
	    ld l, a
	    ex de, hl

	    call __IN_SCREEN
	    ret nc    ; Return if out of screen

	    ld hl, __TVFLAGS
	    res 1, (hl)
#line 485 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print.asm"
	    jp __SAVE_S_POSN

	    LOCAL __PRINT_COM
	    LOCAL __BOLD
	    LOCAL __BOLD_LOOP
	    LOCAL __ITALIC
	    LOCAL __PRINT_EOL1
	    LOCAL __PRINT_EOL2
	    LOCAL __PRINT_AT1
	    LOCAL __PRINT_AT2
	    LOCAL __PRINT_AT2_END
	    LOCAL __PRINT_BOLD
	    LOCAL __PRINT_BOLD2
	    LOCAL __PRINT_ITA
	    LOCAL __PRINT_ITA2
	    LOCAL __PRINT_INK
	    LOCAL __PRINT_PAP
	    LOCAL __PRINT_SET_STATE
	    LOCAL __PRINT_TABLE
	    LOCAL __PRINT_TAB, __PRINT_TAB1, __PRINT_TAB2

__PRINT_TABLE:    ; Jump table for 0 .. 22 codes

	    DW __PRINT_NOP    ;  0
	    DW __PRINT_NOP    ;  1
	    DW __PRINT_NOP    ;  2
	    DW __PRINT_NOP    ;  3
	    DW __PRINT_NOP    ;  4
	    DW __PRINT_NOP    ;  5
	    DW __PRINT_COM    ;  6 COMMA
	    DW __PRINT_NOP    ;  7
	    DW __PRINT_DEL    ;  8 DEL
	    DW __PRINT_NOP    ;  9
	    DW __PRINT_NOP    ; 10
	    DW __PRINT_NOP    ; 11
	    DW __PRINT_NOP    ; 12
	    DW __PRINT_0Dh    ; 13
	    DW __PRINT_BOLD   ; 14
	    DW __PRINT_ITA    ; 15
	    DW __PRINT_INK    ; 16
	    DW __PRINT_PAP    ; 17
	    DW __PRINT_FLA    ; 18
	    DW __PRINT_BRI    ; 19
	    DW __PRINT_INV    ; 20
	    DW __PRINT_OVR    ; 21
	    DW __PRINT_AT     ; 22 AT
	    DW __PRINT_TAB    ; 23 TAB

	    ENDP

	    pop namespace


#line 3 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/copy_attr.asm"
#line 4 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/copy_attr.asm"



	    push namespace core

COPY_ATTR:
	    ; Just copies current permanent attribs into temporal attribs
	    ; and sets print mode
	    PROC

	    LOCAL INVERSE1
	    LOCAL __REFRESH_TMP

	INVERSE1 EQU 02Fh

	    ld hl, (ATTR_P)
	    ld (ATTR_T), hl

	    ld hl, FLAGS2
	    call __REFRESH_TMP

	    ld hl, P_FLAG
	    call __REFRESH_TMP


__SET_ATTR_MODE:		; Another entry to set print modes. A contains (P_FLAG)


	    LOCAL TABLE
	    LOCAL CONT2

	    rra					; Over bit to carry
	    ld a, (FLAGS2)
	    rla					; Over bit in bit 1, Over2 bit in bit 2
	    and 3				; Only bit 0 and 1 (OVER flag)

	    ld c, a
	    ld b, 0

	    ld hl, TABLE
	    add hl, bc
	    ld a, (hl)
	    ld (PRINT_MODE), a

	    ld hl, (P_FLAG)
	    xor a			; NOP -> INVERSE0
	    bit 2, l
	    jr z, CONT2
	    ld a, INVERSE1 	; CPL -> INVERSE1

CONT2:
	    ld (INVERSE_MODE), a
	    ret

TABLE:
	    nop				; NORMAL MODE
	    xor (hl)		; OVER 1 MODE
	    and (hl)		; OVER 2 MODE
	    or  (hl)		; OVER 3 MODE

#line 67 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/copy_attr.asm"

__REFRESH_TMP:
	    ld a, (hl)
	    and 0b10101010
	    ld c, a
	    rra
	    or c
	    ld (hl), a
	    ret

	    ENDP

	    pop namespace

#line 10777 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/div8.asm"
	    ; --------------------------------
	    push namespace core

__DIVU8:	; 8 bit unsigned integer division
	    ; Divides (Top of stack, High Byte) / A
	    pop hl	; --------------------------------
	    ex (sp), hl	; CALLEE

__DIVU8_FAST:	; Does A / H
	    ld l, h
	    ld h, a		; At this point do H / L

	    ld b, 8
	    xor a		; A = 0, Carry Flag = 0

__DIV8LOOP:
	    sla	h
	    rla
	    cp	l
	    jr	c, __DIV8NOSUB
	    sub	l
	    inc	h

__DIV8NOSUB:
	    djnz __DIV8LOOP

	    ld	l, a		; save remainder
	    ld	a, h		;

	    ret			; a = Quotient,


	    ; --------------------------------
__DIVI8:		; 8 bit signed integer division Divides (Top of stack) / A
	    pop hl		; --------------------------------
	    ex (sp), hl

__DIVI8_FAST:
	    ld e, a		; store operands for later
	    ld c, h

	    or a		; negative?
	    jp p, __DIV8A
	    neg			; Make it positive

__DIV8A:
	    ex af, af'
	    ld a, h
	    or a
	    jp p, __DIV8B
	    neg
	    ld h, a		; make it positive

__DIV8B:
	    ex af, af'

	    call __DIVU8_FAST

	    ld a, c
	    xor l		; bit 7 of A = 1 if result is negative

	    ld a, h		; Quotient
	    ret p		; return if positive

	    neg
	    ret


__MODU8:		; 8 bit module. REturns A mod (Top of stack) (unsigned operands)
	    pop hl
	    ex (sp), hl	; CALLEE

__MODU8_FAST:	; __FASTCALL__ entry
	    call __DIVU8_FAST
	    ld a, l		; Remainder

	    ret		; a = Modulus


__MODI8:		; 8 bit module. REturns A mod (Top of stack) (For singed operands)
	    pop hl
	    ex (sp), hl	; CALLEE

__MODI8_FAST:	; __FASTCALL__ entry
	    call __DIVI8_FAST
	    ld a, l		; remainder

	    ret		; a = Modulus

	    pop namespace

#line 10778 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/eq16.asm"
	    push namespace core

__EQ16:	; Test if 16bit values HL == DE
    ; Returns result in A: 0 = False, FF = True
	    xor a	; Reset carry flag
	    sbc hl, de
	    ret nz
	    inc a
	    ret

	    pop namespace

#line 10779 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/ftou32reg.asm"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/neg32.asm"
	    push namespace core

__ABS32:
	    bit 7, d
	    ret z

__NEG32: ; Negates DEHL (Two's complement)
	    ld a, l
	    cpl
	    ld l, a

	    ld a, h
	    cpl
	    ld h, a

	    ld a, e
	    cpl
	    ld e, a

	    ld a, d
	    cpl
	    ld d, a

	    inc l
	    ret nz

	    inc h
	    ret nz

	    inc de
	    ret

	    pop namespace

#line 2 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/ftou32reg.asm"

	    push namespace core

__FTOU32REG:	; Converts a Float to (un)signed 32 bit integer (NOTE: It's ALWAYS 32 bit signed)
	    ; Input FP number in A EDCB (A exponent, EDCB mantissa)
    ; Output: DEHL 32 bit number (signed)
	    PROC

	    LOCAL __IS_FLOAT
	    LOCAL __NEGATE

	    or a
	    jr nz, __IS_FLOAT
	    ; Here if it is a ZX ROM Integer

	    ld h, c
	    ld l, d
	    ld d, e
	    ret

__IS_FLOAT:  ; Jumps here if it is a true floating point number
	    ld h, e
	    push hl  ; Stores it for later (Contains Sign in H)

	    push de
	    push bc

	    exx
	    pop de   ; Loads mantissa into C'B' E'D'
	    pop bc	 ;

	    set 7, c ; Highest mantissa bit is always 1
	    exx

	    ld hl, 0 ; DEHL = 0
	    ld d, h
	    ld e, l

	    ;ld a, c  ; Get exponent
	    sub 128  ; Exponent -= 128
	    jr z, __FTOU32REG_END	; If it was <= 128, we are done (Integers must be > 128)
	    jr c, __FTOU32REG_END	; It was decimal (0.xxx). We are done (return 0)

	    ld b, a  ; Loop counter = exponent - 128

__FTOU32REG_LOOP:
	    exx 	 ; Shift C'B' E'D' << 1, output bit stays in Carry
	    sla d
	    rl e
	    rl b
	    rl c

	    exx		 ; Shift DEHL << 1, inserting the carry on the right
	    rl l
	    rl h
	    rl e
	    rl d

	    djnz __FTOU32REG_LOOP

__FTOU32REG_END:
	    pop af   ; Take the sign bit
	    or a	 ; Sets SGN bit to 1 if negative
	    jp m, __NEGATE ; Negates DEHL

	    ret

__NEGATE:
	    exx
	    ld a, d
	    or e
	    or b
	    or c
	    exx
	    jr z, __END
	    inc l
	    jr nz, __END
	    inc h
	    jr nz, __END
	    inc de
	LOCAL __END
__END:
	    jp __NEG32
	    ENDP


__FTOU8:	; Converts float in C ED LH to Unsigned byte in A
	    call __FTOU32REG
	    ld a, l
	    ret

	    pop namespace

#line 10780 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"

#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/inkey.asm"
	; INKEY Function
	; Returns a string allocated in dynamic memory
	; containing the string.
	; An empty string otherwise.

#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/alloc.asm"
; vim: ts=4:et:sw=4:
	; Copyleft (K) by Jose M. Rodriguez de la Rosa
	;  (a.k.a. Boriel)
;  http://www.boriel.com
	;
	; This ASM library is licensed under the MIT license
	; you can use it for any purpose (even for commercial
	; closed source programs).
	;
	; Please read the MIT license on the internet

	; ----- IMPLEMENTATION NOTES ------
	; The heap is implemented as a linked list of free blocks.

; Each free block contains this info:
	;
	; +----------------+ <-- HEAP START
	; | Size (2 bytes) |
	; |        0       | <-- Size = 0 => DUMMY HEADER BLOCK
	; +----------------+
	; | Next (2 bytes) |---+
	; +----------------+ <-+
	; | Size (2 bytes) |
	; +----------------+
	; | Next (2 bytes) |---+
	; +----------------+   |
	; | <free bytes...>|   | <-- If Size > 4, then this contains (size - 4) bytes
	; | (0 if Size = 4)|   |
	; +----------------+ <-+
	; | Size (2 bytes) |
	; +----------------+
	; | Next (2 bytes) |---+
	; +----------------+   |
	; | <free bytes...>|   |
	; | (0 if Size = 4)|   |
	; +----------------+   |
	;   <Allocated>        | <-- This zone is in use (Already allocated)
	; +----------------+ <-+
	; | Size (2 bytes) |
	; +----------------+
	; | Next (2 bytes) |---+
	; +----------------+   |
	; | <free bytes...>|   |
	; | (0 if Size = 4)|   |
	; +----------------+ <-+
	; | Next (2 bytes) |--> NULL => END OF LIST
	; |    0 = NULL    |
	; +----------------+
	; | <free bytes...>|
	; | (0 if Size = 4)|
	; +----------------+


	; When a block is FREED, the previous and next pointers are examined to see
	; if we can defragment the heap. If the block to be freed is just next to the
	; previous, or to the next (or both) they will be converted into a single
	; block (so defragmented).


	;   MEMORY MANAGER
	;
	; This library must be initialized calling __MEM_INIT with
	; HL = BLOCK Start & DE = Length.

	; An init directive is useful for initialization routines.
	; They will be added automatically if needed.


#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/heapinit.asm"
; vim: ts=4:et:sw=4:
	; Copyleft (K) by Jose M. Rodriguez de la Rosa
	;  (a.k.a. Boriel)
;  http://www.boriel.com
	;
	; This ASM library is licensed under the BSD license
	; you can use it for any purpose (even for commercial
	; closed source programs).
	;
	; Please read the BSD license on the internet

	; ----- IMPLEMENTATION NOTES ------
	; The heap is implemented as a linked list of free blocks.

; Each free block contains this info:
	;
	; +----------------+ <-- HEAP START
	; | Size (2 bytes) |
	; |        0       | <-- Size = 0 => DUMMY HEADER BLOCK
	; +----------------+
	; | Next (2 bytes) |---+
	; +----------------+ <-+
	; | Size (2 bytes) |
	; +----------------+
	; | Next (2 bytes) |---+
	; +----------------+   |
	; | <free bytes...>|   | <-- If Size > 4, then this contains (size - 4) bytes
	; | (0 if Size = 4)|   |
	; +----------------+ <-+
	; | Size (2 bytes) |
	; +----------------+
	; | Next (2 bytes) |---+
	; +----------------+   |
	; | <free bytes...>|   |
	; | (0 if Size = 4)|   |
	; +----------------+   |
	;   <Allocated>        | <-- This zone is in use (Already allocated)
	; +----------------+ <-+
	; | Size (2 bytes) |
	; +----------------+
	; | Next (2 bytes) |---+
	; +----------------+   |
	; | <free bytes...>|   |
	; | (0 if Size = 4)|   |
	; +----------------+ <-+
	; | Next (2 bytes) |--> NULL => END OF LIST
	; |    0 = NULL    |
	; +----------------+
	; | <free bytes...>|
	; | (0 if Size = 4)|
	; +----------------+


	; When a block is FREED, the previous and next pointers are examined to see
	; if we can defragment the heap. If the block to be breed is just next to the
	; previous, or to the next (or both) they will be converted into a single
	; block (so defragmented).


	;   MEMORY MANAGER
	;
	; This library must be initialized calling __MEM_INIT with
	; HL = BLOCK Start & DE = Length.

	; An init directive is useful for initialization routines.
	; They will be added automatically if needed.




	; ---------------------------------------------------------------------
	;  __MEM_INIT must be called to initalize this library with the
	; standard parameters
	; ---------------------------------------------------------------------
	    push namespace core

__MEM_INIT: ; Initializes the library using (RAMTOP) as start, and
	    ld hl, ZXBASIC_MEM_HEAP  ; Change this with other address of heap start
	    ld de, ZXBASIC_HEAP_SIZE ; Change this with your size

	; ---------------------------------------------------------------------
	;  __MEM_INIT2 initalizes this library
; Parameters:
;   HL : Memory address of 1st byte of the memory heap
;   DE : Length in bytes of the Memory Heap
	; ---------------------------------------------------------------------
__MEM_INIT2:
	    ; HL as TOP
	    PROC

	    dec de
	    dec de
	    dec de
	    dec de        ; DE = length - 4; HL = start
	    ; This is done, because we require 4 bytes for the empty dummy-header block

	    xor a
	    ld (hl), a
	    inc hl
    ld (hl), a ; First "free" block is a header: size=0, Pointer=&(Block) + 4
	    inc hl

	    ld b, h
	    ld c, l
	    inc bc
	    inc bc      ; BC = starts of next block

	    ld (hl), c
	    inc hl
	    ld (hl), b
	    inc hl      ; Pointer to next block

	    ld (hl), e
	    inc hl
	    ld (hl), d
	    inc hl      ; Block size (should be length - 4 at start); This block contains all the available memory

	    ld (hl), a ; NULL (0000h) ; No more blocks (a list with a single block)
	    inc hl
	    ld (hl), a

	    ld a, 201
	    ld (__MEM_INIT), a; "Pokes" with a RET so ensure this routine is not called again
	    ret

	    ENDP

	    pop namespace

#line 70 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/alloc.asm"


	; ---------------------------------------------------------------------
	; MEM_ALLOC
	;  Allocates a block of memory in the heap.
	;
	; Parameters
	;  BC = Length of requested memory block
	;
; Returns:
	;  HL = Pointer to the allocated block in memory. Returns 0 (NULL)
	;       if the block could not be allocated (out of memory)
	; ---------------------------------------------------------------------

	    push namespace core

MEM_ALLOC:
__MEM_ALLOC: ; Returns the 1st free block found of the given length (in BC)
	    PROC

	    LOCAL __MEM_LOOP
	    LOCAL __MEM_DONE
	    LOCAL __MEM_SUBTRACT
	    LOCAL __MEM_START
	    LOCAL TEMP, TEMP0

	TEMP EQU TEMP0 + 1

	    ld hl, 0
	    ld (TEMP), hl

__MEM_START:
	    ld hl, ZXBASIC_MEM_HEAP  ; This label point to the heap start
	    inc bc
	    inc bc  ; BC = BC + 2 ; block size needs 2 extra bytes for hidden pointer

__MEM_LOOP:  ; Loads lengh at (HL, HL+). If Lenght >= BC, jump to __MEM_DONE
	    ld a, h ;  HL = NULL (No memory available?)
	    or l
#line 113 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/alloc.asm"
	    ret z ; NULL
#line 115 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/alloc.asm"
	    ; HL = Pointer to Free block
	    ld e, (hl)
	    inc hl
	    ld d, (hl)
	    inc hl          ; DE = Block Length

	    push hl         ; HL = *pointer to -> next block
	    ex de, hl
	    or a            ; CF = 0
	    sbc hl, bc      ; FREE >= BC (Length)  (HL = BlockLength - Length)
	    jp nc, __MEM_DONE
	    pop hl
	    ld (TEMP), hl

	    ex de, hl
	    ld e, (hl)
	    inc hl
	    ld d, (hl)
	    ex de, hl
	    jp __MEM_LOOP

__MEM_DONE:  ; A free block has been found.
	    ; Check if at least 4 bytes remains free (HL >= 4)
	    push hl
	    exx  ; exx to preserve bc
	    pop hl
	    ld bc, 4
	    or a
	    sbc hl, bc
	    exx
	    jp nc, __MEM_SUBTRACT
	    ; At this point...
	    ; less than 4 bytes remains free. So we return this block entirely
	    ; We must link the previous block with the next to this one
	    ; (DE) => Pointer to next block
	    ; (TEMP) => &(previous->next)
	    pop hl     ; Discard current block pointer
	    push de
	    ex de, hl  ; DE = Previous block pointer; (HL) = Next block pointer
	    ld a, (hl)
	    inc hl
	    ld h, (hl)
	    ld l, a    ; HL = (HL)
	    ex de, hl  ; HL = Previous block pointer; DE = Next block pointer
TEMP0:
	    ld hl, 0   ; Pre-previous block pointer

	    ld (hl), e
	    inc hl
	    ld (hl), d ; LINKED
	    pop hl ; Returning block.

	    ret

__MEM_SUBTRACT:
	    ; At this point we have to store HL value (Length - BC) into (DE - 2)
	    ex de, hl
	    dec hl
	    ld (hl), d
	    dec hl
	    ld (hl), e ; Store new block length

	    add hl, de ; New length + DE => free-block start
	    pop de     ; Remove previous HL off the stack

	    ld (hl), c ; Store length on its 1st word
	    inc hl
	    ld (hl), b
	    inc hl     ; Return hl
	    ret

	    ENDP

	    pop namespace

#line 7 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/inkey.asm"

	    push namespace core

INKEY:
	    PROC
	    LOCAL __EMPTY_INKEY
	    LOCAL KEY_SCAN
	    LOCAL KEY_TEST
	    LOCAL KEY_CODE

	    ld bc, 3	; 1 char length string
	    call __MEM_ALLOC

	    ld a, h
	    or l
	    ret z	; Return if NULL (No memory)

	    push hl ; Saves memory pointer

	    call KEY_SCAN
	    jp nz, __EMPTY_INKEY

	    call KEY_TEST
	    jp nc, __EMPTY_INKEY

	    dec d	; D is expected to be FLAGS so set bit 3 $FF
	    ; 'L' Mode so no keywords.
	    ld e, a	; main key to A
	    ; C is MODE 0 'KLC' from above still.
	    call KEY_CODE ; routine K-DECODE
	    pop hl

	    ld (hl), 1
	    inc hl
	    ld (hl), 0
	    inc hl
	    ld (hl), a
	    dec hl
	    dec hl	; HL Points to string result
	    ret

__EMPTY_INKEY:
	    pop hl
	    xor a
	    ld (hl), a
	    inc hl
	    ld (hl), a
	    dec hl
	    ret

	KEY_SCAN	EQU 028Eh
	KEY_TEST	EQU 031Eh
	KEY_CODE	EQU 0333h

	    ENDP

	    pop namespace

#line 10782 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/lei32.asm"

#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/sub32.asm"
	; SUB32
	; Perform TOP of the stack - DEHL
	; Pops operand out of the stack (CALLEE)
	; and returns result in DEHL. Carry an Z are set correctly

	    push namespace core

__SUB32:
	    exx
	    pop bc		; saves return address in BC'
	    exx

	    or a        ; clears carry flag
	    ld b, h     ; Operands come reversed => BC <- HL,  HL = HL - BC
	    ld c, l
	    pop hl
	    sbc hl, bc
	    ex de, hl

	    ld b, h	    ; High part (DE) now in HL. Repeat operation
	    ld c, l
	    pop hl
	    sbc hl, bc
	    ex de, hl   ; DEHL now has de 32 bit result

	    exx
	    push bc		; puts return address back
	    exx
	    ret

	    pop namespace
#line 3 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/lei32.asm"

	    push namespace core

__LEI32: ; Test 32 bit values Top of the stack <= HL,DE
	    PROC
	    LOCAL checkParity
	    exx
	    pop de ; Preserves return address
	    exx

	    call __SUB32

	    exx
	    push de ; Puts return address back
	    exx

	    ex af, af'
	    ld a, h
	    or l
	    or e
	    or d
	    ld a, 1
	    ret z

	    ex af, af'
	    jp po, checkParity
	    ld a, d
	    xor 0x80
checkParity:
	    ld a, 0     ; False
	    ret p
	    inc a       ; True
	    ret
	    ENDP

	    pop namespace
#line 10783 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/lei8.asm"
	    push namespace core

__LEI8: ; Signed <= comparison for 8bit int
	    ; A <= H (registers)
	    PROC
	    LOCAL checkParity
	    sub h
	    jr nz, __LTI
	    inc a
	    ret

__LTI8:  ; Test 8 bit values A < H
	    sub h

__LTI:   ; Generic signed comparison
	    jp po, checkParity
	    xor 0x80
checkParity:
	    ld a, 0     ; False
	    ret p
	    inc a       ; True
	    ret
	    ENDP

	    pop namespace
#line 10784 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/lti8.asm"

#line 10785 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/mul8.asm"
	    push namespace core

__MUL8:		; Performs 8bit x 8bit multiplication
	    PROC

	    ;LOCAL __MUL8A
	    LOCAL __MUL8LOOP
	    LOCAL __MUL8B
	    ; 1st operand (byte) in A, 2nd operand into the stack (AF)
	    pop hl	; return address
	    ex (sp), hl ; CALLE convention

;;__MUL8_FAST: ; __FASTCALL__ entry
	;;	ld e, a
	;;	ld d, 0
	;;	ld l, d
	;;
	;;	sla h
	;;	jr nc, __MUL8A
	;;	ld l, e
	;;
;;__MUL8A:
	;;
	;;	ld b, 7
;;__MUL8LOOP:
	;;	add hl, hl
	;;	jr nc, __MUL8B
	;;
	;;	add hl, de
	;;
;;__MUL8B:
	;;	djnz __MUL8LOOP
	;;
	;;	ld a, l ; result = A and HL  (Truncate to lower 8 bits)

__MUL8_FAST: ; __FASTCALL__ entry, a = a * h (8 bit mul) and Carry

	    ld b, 8
	    ld l, a
	    xor a

__MUL8LOOP:
	    add a, a ; a *= 2
	    sla l
	    jp nc, __MUL8B
	    add a, h

__MUL8B:
	    djnz __MUL8LOOP

	    ret		; result = HL
	    ENDP

	    pop namespace

#line 10786 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/mulf.asm"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/stackf.asm"
	; -------------------------------------------------------------
	; Functions to manage FP-Stack of the ZX Spectrum ROM CALC
	; -------------------------------------------------------------


	    push namespace core

	__FPSTACK_PUSH EQU 2AB6h	; Stores an FP number into the ROM FP stack (A, ED CB)
	__FPSTACK_POP  EQU 2BF1h	; Pops an FP number out of the ROM FP stack (A, ED CB)

__FPSTACK_PUSH2: ; Pushes Current A ED CB registers and top of the stack on (SP + 4)
	    ; Second argument to push into the stack calculator is popped out of the stack
	    ; Since the caller routine also receives the parameters into the top of the stack
	    ; four bytes must be removed from SP before pop them out

	    call __FPSTACK_PUSH ; Pushes A ED CB into the FP-STACK
	    exx
	    pop hl       ; Caller-Caller return addr
	    exx
	    pop hl       ; Caller return addr

	    pop af
	    pop de
	    pop bc

	    push hl      ; Caller return addr
	    exx
	    push hl      ; Caller-Caller return addr
	    exx

	    jp __FPSTACK_PUSH


__FPSTACK_I16:	; Pushes 16 bits integer in HL into the FP ROM STACK
	    ; This format is specified in the ZX 48K Manual
	    ; You can push a 16 bit signed integer as
	    ; 0 SS LL HH 0, being SS the sign and LL HH the low
	    ; and High byte respectively
	    ld a, h
	    rla			; sign to Carry
	    sbc	a, a	; 0 if positive, FF if negative
	    ld e, a
	    ld d, l
	    ld c, h
	    xor a
	    ld b, a
	    jp __FPSTACK_PUSH

	    pop namespace
#line 2 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/mulf.asm"

	; -------------------------------------------------------------
	; Floating point library using the FP ROM Calculator (ZX 48K)
	; All of them uses A EDCB registers as 1st paramter.
	; For binary operators, the 2n operator must be pushed into the
	; stack, in the order A DE BC.
	;
	; Uses CALLEE convention
	; -------------------------------------------------------------

	    push namespace core

__MULF:	; Multiplication
	    call __FPSTACK_PUSH2

	    ; ------------- ROM MUL
	    rst 28h
	    defb 04h	;
	    defb 38h;   ; END CALC

	    jp __FPSTACK_POP

	    pop namespace

#line 10787 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"


#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/print_eol_attr.asm"
	; Calls PRINT_EOL and then COPY_ATTR, so saves
	; 3 bytes




	    push namespace core

PRINT_EOL_ATTR:
	    call PRINT_EOL
	    jp COPY_ATTR

	    pop namespace
#line 10790 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/printstr.asm"



#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/free.asm"
; vim: ts=4:et:sw=4:
	; Copyleft (K) by Jose M. Rodriguez de la Rosa
	;  (a.k.a. Boriel)
;  http://www.boriel.com
	;
	; This ASM library is licensed under the BSD license
	; you can use it for any purpose (even for commercial
	; closed source programs).
	;
	; Please read the BSD license on the internet

	; ----- IMPLEMENTATION NOTES ------
	; The heap is implemented as a linked list of free blocks.

; Each free block contains this info:
	;
	; +----------------+ <-- HEAP START
	; | Size (2 bytes) |
	; |        0       | <-- Size = 0 => DUMMY HEADER BLOCK
	; +----------------+
	; | Next (2 bytes) |---+
	; +----------------+ <-+
	; | Size (2 bytes) |
	; +----------------+
	; | Next (2 bytes) |---+
	; +----------------+   |
	; | <free bytes...>|   | <-- If Size > 4, then this contains (size - 4) bytes
	; | (0 if Size = 4)|   |
	; +----------------+ <-+
	; | Size (2 bytes) |
	; +----------------+
	; | Next (2 bytes) |---+
	; +----------------+   |
	; | <free bytes...>|   |
	; | (0 if Size = 4)|   |
	; +----------------+   |
	;   <Allocated>        | <-- This zone is in use (Already allocated)
	; +----------------+ <-+
	; | Size (2 bytes) |
	; +----------------+
	; | Next (2 bytes) |---+
	; +----------------+   |
	; | <free bytes...>|   |
	; | (0 if Size = 4)|   |
	; +----------------+ <-+
	; | Next (2 bytes) |--> NULL => END OF LIST
	; |    0 = NULL    |
	; +----------------+
	; | <free bytes...>|
	; | (0 if Size = 4)|
	; +----------------+


	; When a block is FREED, the previous and next pointers are examined to see
	; if we can defragment the heap. If the block to be breed is just next to the
	; previous, or to the next (or both) they will be converted into a single
	; block (so defragmented).


	;   MEMORY MANAGER
	;
	; This library must be initialized calling __MEM_INIT with
	; HL = BLOCK Start & DE = Length.

	; An init directive is useful for initialization routines.
	; They will be added automatically if needed.



	; ---------------------------------------------------------------------
	; MEM_FREE
	;  Frees a block of memory
	;
; Parameters:
	;  HL = Pointer to the block to be freed. If HL is NULL (0) nothing
	;  is done
	; ---------------------------------------------------------------------

	    push namespace core

MEM_FREE:
__MEM_FREE: ; Frees the block pointed by HL
	    ; HL DE BC & AF modified
	    PROC

	    LOCAL __MEM_LOOP2
	    LOCAL __MEM_LINK_PREV
	    LOCAL __MEM_JOIN_TEST
	    LOCAL __MEM_BLOCK_JOIN

	    ld a, h
	    or l
	    ret z       ; Return if NULL pointer

	    dec hl
	    dec hl
	    ld b, h
	    ld c, l    ; BC = Block pointer

	    ld hl, ZXBASIC_MEM_HEAP  ; This label point to the heap start

__MEM_LOOP2:
	    inc hl
	    inc hl     ; Next block ptr

	    ld e, (hl)
	    inc hl
	    ld d, (hl) ; Block next ptr
	    ex de, hl  ; DE = &(block->next); HL = block->next

	    ld a, h    ; HL == NULL?
	    or l
	    jp z, __MEM_LINK_PREV; if so, link with previous

	    or a       ; Clear carry flag
	    sbc hl, bc ; Carry if BC > HL => This block if before
	    add hl, bc ; Restores HL, preserving Carry flag
	    jp c, __MEM_LOOP2 ; This block is before. Keep searching PASS the block

	;------ At this point current HL is PAST BC, so we must link (DE) with BC, and HL in BC->next

__MEM_LINK_PREV:    ; Link (DE) with BC, and BC->next with HL
	    ex de, hl
	    push hl
	    dec hl

	    ld (hl), c
	    inc hl
	    ld (hl), b ; (DE) <- BC

	    ld h, b    ; HL <- BC (Free block ptr)
	    ld l, c
	    inc hl     ; Skip block length (2 bytes)
	    inc hl
	    ld (hl), e ; Block->next = DE
	    inc hl
	    ld (hl), d
	    ; --- LINKED ; HL = &(BC->next) + 2

	    call __MEM_JOIN_TEST
	    pop hl

__MEM_JOIN_TEST:   ; Checks for fragmented contiguous blocks and joins them
	    ; hl = Ptr to current block + 2
	    ld d, (hl)
	    dec hl
	    ld e, (hl)
	    dec hl
	    ld b, (hl) ; Loads block length into BC
	    dec hl
	    ld c, (hl) ;

	    push hl    ; Saves it for later
	    add hl, bc ; Adds its length. If HL == DE now, it must be joined
	    or a
	    sbc hl, de ; If Z, then HL == DE => We must join
	    pop hl
	    ret nz

__MEM_BLOCK_JOIN:  ; Joins current block (pointed by HL) with next one (pointed by DE). HL->length already in BC
	    push hl    ; Saves it for later
	    ex de, hl

	    ld e, (hl) ; DE -> block->next->length
	    inc hl
	    ld d, (hl)
	    inc hl

	    ex de, hl  ; DE = &(block->next)
	    add hl, bc ; HL = Total Length

	    ld b, h
	    ld c, l    ; BC = Total Length

	    ex de, hl
	    ld e, (hl)
	    inc hl
	    ld d, (hl) ; DE = block->next

	    pop hl     ; Recovers Pointer to block
	    ld (hl), c
	    inc hl
	    ld (hl), b ; Length Saved
	    inc hl
	    ld (hl), e
	    inc hl
	    ld (hl), d ; Next saved
	    ret

	    ENDP

	    pop namespace

#line 5 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/printstr.asm"

	; PRINT command routine
	; Prints string pointed by HL

	    push namespace core

PRINT_STR:
__PRINTSTR:		; __FASTCALL__ Entry to print_string
	    PROC
	    LOCAL __PRINT_STR_LOOP
	    LOCAL __PRINT_STR_END

	    ld d, a ; Saves A reg (Flag) for later

	    ld a, h
	    or l
	    ret z	; Return if the pointer is NULL

	    push hl

	    ld c, (hl)
	    inc hl
	    ld b, (hl)
	    inc hl	; BC = LEN(a$); HL = &a$

__PRINT_STR_LOOP:
	    ld a, b
	    or c
	    jr z, __PRINT_STR_END 	; END if BC (counter = 0)

	    ld a, (hl)
	    call __PRINTCHAR
	    inc hl
	    dec bc
	    jp __PRINT_STR_LOOP

__PRINT_STR_END:
	    pop hl
	    ld a, d ; Recovers A flag
	    or a   ; If not 0 this is a temporary string. Free it
	    ret z
	    jp __MEM_FREE ; Frees str from heap and return from there

__PRINT_STR:
	    ; Fastcall Entry
	    ; It ONLY prints strings
	    ; HL = String start
	    ; BC = String length (Number of chars)
	    push hl ; Push str address for later
	    ld d, a ; Saves a FLAG
	    jp __PRINT_STR_LOOP

	    ENDP

	    pop namespace

#line 10791 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/printu8.asm"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/printi8.asm"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/printnum.asm"



	    push namespace core

__PRINTU_START:
	    PROC

	    LOCAL __PRINTU_CONT

	    ld a, b
	    or a
	    jp nz, __PRINTU_CONT

	    ld a, '0'
	    jp __PRINT_DIGIT


__PRINTU_CONT:
	    pop af
	    push bc
	    call __PRINT_DIGIT
	    pop bc
	    djnz __PRINTU_CONT
	    ret

	    ENDP


__PRINT_MINUS: ; PRINT the MINUS (-) sign. CALLER mus preserve registers
	    ld a, '-'
	    jp __PRINT_DIGIT

	__PRINT_DIGIT EQU __PRINTCHAR ; PRINTS the char in A register, and puts its attrs

	    pop namespace


#line 2 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/printi8.asm"


	    push namespace core

__PRINTI8:	; Prints an 8 bits number in Accumulator (A)
	    ; Converts 8 to 32 bits
	    or a
	    jp p, __PRINTU8

	    push af
	    call __PRINT_MINUS
	    pop af
	    neg

__PRINTU8:
	    PROC

	    LOCAL __PRINTU_LOOP

	    ld b, 0 ; Counter

__PRINTU_LOOP:
	    or a
	    jp z, __PRINTU_START

	    push bc
	    ld h, 10
	    call __DIVU8_FAST ; Divides by 10. D'E'H'L' contains modulo (L' since < 10)
	    pop bc

	    ld a, l
	    or '0'		  ; Stores ASCII digit (must be print in reversed order)
	    push af
	    ld a, h
	    inc b
	    jp __PRINTU_LOOP ; Uses JP in loops

	    ENDP

	    pop namespace

#line 2 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/printu8.asm"

#line 10792 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/random.asm"
	; RANDOM functions

	    push namespace core

RANDOMIZE:
	    ; Randomize with 32 bit seed in DE HL
	    ; if SEED = 0, calls ROM to take frames as seed
	    PROC

	    LOCAL TAKE_FRAMES
	    LOCAL FRAMES

	    ld a, h
	    or l
	    or d
	    or e
	    jr z, TAKE_FRAMES

	    ld (RANDOM_SEED_LOW), hl
	    ld (RANDOM_SEED_HIGH), de
	    ret

TAKE_FRAMES:
	    ; Takes the seed from frames
	    ld hl, (FRAMES)
	    ld (RANDOM_SEED_LOW), hl
	    ld hl, (FRAMES + 2)
	    ld (RANDOM_SEED_HIGH), hl
	    ret

	FRAMES EQU    23672
	    ENDP

	RANDOM_SEED_HIGH EQU RAND+6 ; RANDOM seed, 16 higher bits
	RANDOM_SEED_LOW  EQU 23670  ; RANDOM seed, 16 lower bits


RAND:
	    PROC
	    LOCAL RAND_LOOP
	    ld b, 4
RAND_LOOP:
	    ld  hl,(RANDOM_SEED_LOW)   ; xz -> yw
	    ld  de,0C0DEh   ; yw -> zt
	    ld  (RANDOM_SEED_LOW),de  ; x = y, z = w
	    ld  a,e         ; w = w ^ ( w << 3 )
	    add a,a
	    add a,a
	    add a,a
	    xor e
	    ld  e,a
	    ld  a,h         ; t = x ^ (x << 1)
	    add a,a
	    xor h
	    ld  d,a
	    rra             ; t = t ^ (t >> 1) ^ w
	    xor d
	    xor e
	    ld  d,l         ; y = z
	    ld  e,a         ; w = t
	    ld  (RANDOM_SEED_HIGH),de
	    push af
	    djnz RAND_LOOP
	    pop de
	    pop af
	    ld e, a
	    pop hl
	    pop af
	    ld l, a
	    ret
	    ENDP

RND:
	    ; Returns a FLOATING point integer
	    ; using RAND as a mantissa
	    PROC
	    LOCAL RND_LOOP

	    call RAND
	    ; BC = HL since ZX BASIC uses ED CB A registers for FP
	    ld b, h
	    ld c, l

	    ld a, e
	    or d
	    or c
	    or b
	    ret z   ; Returns 0 if BC=DE=0

	    ; We already have a random 32 bit mantissa in ED CB
	    ; From 0001h to FFFFh

	    ld l, 81h    ; Exponent
	    ; At this point we have [0 .. 1) FP number;

	    ; Now we must shift mantissa left until highest bit goes into carry
	    ld a, e ; Use A register for rotating E faster (using RLA instead of RL E)
RND_LOOP:
	    dec l
	    sla b
	    rl c
	    rl d
	    rla
	    jp nc, RND_LOOP

	    ; Now undo last mantissa left-shift once
	    ccf ; Clears carry to insert a 0 bit back into mantissa -> positive FP number
	    rra
	    rr d
	    rr c
	    rr b

	    ld e, a     ; E must have the highest byte
	    ld a, l     ; exponent in A
	    ret

	    ENDP

	    pop namespace

#line 10793 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/string.asm"
	; String library



	    push namespace core

__STR_ISNULL:	; Returns A = FF if HL is 0, 0 otherwise
	    ld a, h
	    or l
	    sub 1		; Only CARRY if HL is NULL
	    sbc a, a	; Only FF if HL is NULL (0 otherwise)
	    ret


__STRCMP:	; Compares strings at HL, DE: Returns 0 if EQual, -1 if HL < DE, +1 if HL > DE
	    ; A register is preserved and returned in A'
	    PROC ; __FASTCALL__

	    LOCAL __STRCMPZERO
	    LOCAL __STRCMPEXIT
	    LOCAL __STRCMPLOOP
	    LOCAL __NOPRESERVEBC
	    LOCAL __EQULEN
	    LOCAL __EQULEN1
	    LOCAL __HLZERO

	    ex af, af'	; Saves current A register in A' (it's used by STRXX comparison functions)

	    ld a, h
	    or l
	    jr z, __HLZERO

	    ld a, d
	    or e
	    ld a, 1
	    ret z		; Returns +1 if HL is not NULL and DE is NULL

	    ld c, (hl)
	    inc hl
	    ld b, (hl)
	    inc hl		; BC = LEN(a$)
	    push hl		; HL = &a$, saves it

	    ex de, hl
	    ld e, (hl)
	    inc hl
	    ld d, (hl)
	    inc hl
	    ex de, hl	; HL = LEN(b$), de = &b$

	    ; At this point Carry is cleared, and A reg. = 1
	    sbc hl, bc	; Carry if len(b$) > len(a$)
	    jr z, __EQULEN	; Jump if they have the same length so A reg. = 0
	    jr c, __EQULEN1 ; Jump if len(b$) > len(a$) so A reg. = 1
__NOPRESERVEBC:
	    add hl, bc	; Restore HL (original length)
	    ld b, h		; len(b$) <= len(a$)
	    ld c, l		; so BC = hl
	    dec a		; At this point A register = 0, it must be -1 since len(a$) > len(b$)
__EQULEN:
	    dec a		; A = 0 if len(a$) = len(b$), -1 otherwise
__EQULEN1:
	    pop hl		; Recovers A$ pointer
	    push af		; Saves A for later (Value to return if strings reach the end)
	    ld a, b
	    or c
	    jr z, __STRCMPZERO ; empty string being compared

    ; At this point: BC = lesser length, DE and HL points to b$ and a$ chars respectively
__STRCMPLOOP:
	    ld a, (de)
	    cpi
	    jr nz, __STRCMPEXIT ; (HL) != (DE). Examine carry
	    jp po, __STRCMPZERO ; END of string (both are equal)
	    inc de
	    jp __STRCMPLOOP

__STRCMPZERO:
	    pop af		; This is -1 if len(a$) < len(b$), +1 if len(b$) > len(a$), 0 otherwise
	    ret

__STRCMPEXIT:		; Sets A with the following value
	    dec hl		; Get back to the last char
	    cp (hl)
	    sbc a, a	; A = -1 if carry => (DE) < (HL); 0 otherwise (DE) > (HL)
	    cpl			; A = -1 if (HL) < (DE), 0 otherwise
	    add a, a    ; A = A * 2 (thus -2 or 0)
	    inc a		; A = A + 1 (thus -1 or 1)

	    pop bc		; Discard top of the stack
	    ret

__HLZERO:
	    or d
	    or e
	    ret z		; Returns 0 (EQ) if HL == DE == NULL
	    ld a, -1
	    ret			; Returns -1 if HL is NULL and DE is not NULL

	    ENDP

	    ; The following routines perform string comparison operations (<, >, ==, etc...)
	    ; On return, A will contain 0 for False, other value for True
	    ; Register A' will determine whether the incoming strings (HL, DE) will be freed
    ; from dynamic memory on exit:
	    ;		Bit 0 => 1 means HL will be freed.
	    ;		Bit 1 => 1 means DE will be freed.

__STREQ:	; Compares a$ == b$ (HL = ptr a$, DE = ptr b$). Returns FF (True) or 0 (False)
	    push hl
	    push de
	    call __STRCMP
	    pop de
	    pop hl

	    ;inc a		; If A == -1, return 0
	    ;jp z, __FREE_STR

	    ;dec a		;
	    ;dec a		; Return -1 if a = 0 (True), returns 0 if A == 1 (False)
	    sub 1
	    sbc a, a
	    jp __FREE_STR


__STRNE:	; Compares a$ != b$ (HL = ptr a$, DE = ptr b$). Returns FF (True) or 0 (False)
	    push hl
	    push de
	    call __STRCMP
	    pop de
	    pop hl

	    ;jp z, __FREE_STR

	    ;ld a, 0FFh	; Returns 0xFFh (True)
	    jp __FREE_STR


__STRLT:	; Compares a$ < b$ (HL = ptr a$, DE = ptr b$). Returns FF (True) or 0 (False)
	    push hl
	    push de
	    call __STRCMP
	    pop de
	    pop hl

	    jp z, __FREE_STR ; Returns 0 if A == B

	    dec a		; Returns 0 if A == 1 => a$ > b$
	    ;jp z, __FREE_STR

	    ;inc a		; A = FE now (-2). Set it to FF and return
	    jp __FREE_STR


__STRLE:	; Compares a$ <= b$ (HL = ptr a$, DE = ptr b$). Returns FF (True) or 0 (False)
	    push hl
	    push de
	    call __STRCMP
	    pop de
	    pop hl

	    dec a		; Returns 0 if A == 1 => a$ < b$
	    ;jp z, __FREE_STR

	    ;ld a, 0FFh	; A = FE now (-2). Set it to FF and return
	    jp __FREE_STR


__STRGT:	; Compares a$ > b$ (HL = ptr a$, DE = ptr b$). Returns FF (True) or 0 (False)
	    push hl
	    push de
	    call __STRCMP
	    pop de
	    pop hl

	    jp z, __FREE_STR		; Returns 0 if A == B

	    inc a		; Returns 0 if A == -1 => a$ < b$
	    ;jp z, __FREE_STR		; Returns 0 if A == B

	    ;ld a, 0FFh	; A = FE now (-2). Set it to FF and return
	    jp __FREE_STR


__STRGE:	; Compares a$ >= b$ (HL = ptr a$, DE = ptr b$). Returns FF (True) or 0 (False)
	    push hl
	    push de
	    call __STRCMP
	    pop de
	    pop hl

	    inc a		; Returns 0 if A == -1 => a$ < b$
	    ;jr z, __FREE_STR

	    ;ld a, 0FFh	; A = FE now (-2). Set it to FF and return

__FREE_STR: ; This exit point will test A' for bits 0 and 1
	    ; If bit 0 is 1 => Free memory from HL pointer
	    ; If bit 1 is 1 => Free memory from DE pointer
	    ; Finally recovers A, to return the result
	    PROC

	    LOCAL __FREE_STR2
	    LOCAL __FREE_END

	    ex af, af'
	    bit 0, a
	    jr z, __FREE_STR2

	    push af
	    push de
	    call __MEM_FREE
	    pop de
	    pop af

__FREE_STR2:
	    bit 1, a
	    jr z, __FREE_END

	    ex de, hl
	    call __MEM_FREE

__FREE_END:
	    ex af, af'
	    ret

	    ENDP

	    pop namespace

#line 10794 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"
#line 1 "/data/data/com.termux/files/home/zxbasic-1.16.0/src/arch/zx48k/library-asm/xor8.asm"
; vim:ts=4:et:
	; FASTCALL boolean xor 8 version.
	; result in Accumulator (0 False, not 0 True)
; __FASTCALL__ version (operands: A, H)
	; Performs 8bit xor 8bit and returns the boolean

	    push namespace core

__XOR16:
	    ld a, h
	    or l
	    ld h, a

	    ld a, d
	    or e

__XOR8:
	    sub 1
	    sbc a, a
	    ld l, a  ; l = 00h or FFh

	    ld a, h
	    sub 1
	    sbc a, a ; a = 00h or FFh
	    xor l
	    ret

	    pop namespace

#line 10795 "/data/data/com.termux/files/home/storage/downloads/SoulsRM-source-cleanup-Testing/soulsR.bas"

	END
	
savetap "soulsRM.tap",  32768